#
# Adding a new test:
# (1) create a test file: foo.lua
# (2) the head of the test file must include a test commands:
#     --- ./regr "../interp $SELF" $REGRFLAGS -out $BASE.1 -err $BASE.2
# (3) call 'mk foo.record'  to record expected results in foo.1
# (4) check that the results are indeed the expected ones
# (5) add foo.lua foo.1 (foo.2) to CVS

# ------------------------------------------------------------------ 
# paths
# ------------------------------------------------------------------ 

TOP    =    ../..


< $TOP/config/noweb.mk

# ------------------------------------------------------------------  
# high level targets
# ------------------------------------------------------------------  

LUASRC       = `echo *.lua`
CMMSRC       = `echo *.c--`
SCRIPTSRC    = `echo *.script`
LUATEST      = ${LUASRC:%.lua=%.luatest}
CMMTEST      = ${CMMSRC:%.c--=%.cmmtest}
SCRIPTTEST   = ${SCRIPTSRC:%.script=%.scripttest}
LUARECORD    = ${LUASRC:%.lua=%.luarecord}
CMMRECORD    = ${CMMSRC:%.c--=%.cmmrecord}
SCRIPTRECORD = ${SCRIPTSRC:%.script=%.scriptrecord}
VERBOSE      =

GC           = ../clients/gc_client
EXN          = ../clients/exn_client
QCMM         = $TOP/bin/qc--
INTERP       = $TOP/bin/qc--interp

test:VQ:        $LUATEST $CMMTEST $SCRIPTTEST
luatest:VQ:     $LUATEST
cmmtest:VQ:     $CMMTEST
scripttest:VQ:  $SCRIPTTEST
vtest:VQ:	    
                mk $MKFLAGS VERBOSE=-v test
record:VQ:      $LUARECORD $CMMRECORD $SCRIPTRECORD

# ------------------------------------------------------------------ 
# useful targets to create test results
# ------------------------------------------------------------------ 

%.luatest:VQ:       %.lua $INTERP regr
		SELF=$stem.lua
		BASE=$stem
		MKTARGET=$target
		case $VERBOSE in -v) SHX=-x ;; *) SHX= ;; esac
		export SELF BASE MKTARGET INTERP
                sed -n 's!^---!!p' $SELF | sh $SHX || true
		case "$VERBOSE$stem" in -v*) ;; *0) echo "# tested $stem" ;; esac

%.cmmtest:VQ:       %.c-- $INTERP $GC $EXN $QCMM regr qrun qrun-gc qrun-exn
		SELF=$stem.c--
		BASE=$stem
		MKTARGET=$target
		case $VERBOSE in -v) SHX=-x ;; *) SHX= ;; esac
		export SELF BASE MKTARGET INTERP GC EXN QCMM
                sed -n 's!^///!!p' $SELF | sh $SHX || true
		case "$VERBOSE$stem" in -v*) ;; *0) echo "# tested $stem" ;; esac

%.scripttest:VQ:    %.script $INTERP $GC $EXN $QCMM regr qrun qrun-gc qrun-exn
		SELF=$stem.script
		BASE=$stem
		MKTARGET=$target
		case $VERBOSE in -v) SHX=-x ;; *) SHX= ;; esac
		export SELF BASE MKTARGET INTERP GC EXN QCMM
                sed -n 's!^###!!p' $SELF | sh $SHX || true
		case "$VERBOSE$stem" in -v*) ;; *0) echo "# tested $stem" ;; esac


# The update rule updates the expected output of a test.  Use
# only after you have verified that the factual output is indeed the
# expected output!

%.luarecord:VQ:     %.lua $INTERP regr
		SELF=$stem.lua
		BASE=$stem
                REGRFLAGS="-r"
		export SELF BASE REGRFLAGS
                sed -n 's!^---!!p' $SELF | sh -x || true
		# why is there || true on the preceding line??

%.cmmrecord:VQ:     %.c-- $INTERP $GC $EXN $QCMM regr qrun qrun-gc qrun-exn
		SELF=$stem.c--
		BASE=$stem
                REGRFLAGS="-r"
		export SELF BASE REGRFLAGS INTERP GC EXN QCMM
                sed -n 's!^///!!p' $SELF | sh -x || true
		# why is there || true on the preceding line??

%.scriptrecord:VQ:  %.script $INTERP $GC $EXN $QCMM regr qrun qrun-gc qrun-exn
		SELF=$stem.script
		BASE=$stem
                REGRFLAGS="-r"
		export SELF BASE REGRFLAGS INTERP GC EXN QCMM
                sed -n 's!^###!!p' $SELF | sh -x || true
		# why is there || true on the preceding line??

$INTERP:Q:
        cd ..
        mk update $MKFLAGS
        cd test

$GC:Q:
        cd ..
        mk gc $MKFLAGS
        cd test

$EXN:Q:
        cd ..
        mk exn $MKFLAGS
        cd test

# ------------------------------------------------------------------  
# sources generated from noweb sources
# ------------------------------------------------------------------  

regr:           test.nw
                $NOTANGLE -R$target $prereq > $target
                chmod +x $target

qrun:           test.nw
                $NOTANGLE -R$target $prereq > $target
                chmod +x $target

qrun-gc:        test.nw
                $NOTANGLE -R$target $prereq > $target
                chmod +x $target

qrun-exn:       test.nw
                $NOTANGLE -R$target $prereq > $target
                chmod +x $target

html:V:         test.html
