target byteorder little;

import printf;
export main;

foreign "C" main(bits32 argc, "address" bits32 argv) {
  bits32 depth1, depth2;
  stackdata {p: bits32[1];}

  depth1 = down(p, 1, 10);
  depth2 = down(p, 1, 100);
  //foreign "C" printf(pdownr, 10, depth1);
  //foreign "C" printf(pdownr, 100, depth2);
  foreign "C" printf(pcmp, 100, depth2 - depth1, 10);
  foreign "C" return(0);
}

down(bits32 sp, bits32 i, bits32 n) {
  if (i < n) { jump down(sp, i+1, n); }
  //foreign "C" printf(pdown, n, sp - p);
  return (sp - p);
  stackdata { p: bits8[3];}
}

section "data" {
  pcmp :  bits8[] "calling down %d levels is %d bytes deeper than %d levels\n\0";
  pdown:  bits8[] "calling down %d levels uses %d bytes of stack\n\0";
  pdownr: bits8[] "value returned after %d levels is %d bytes of stack\n\0";
}
