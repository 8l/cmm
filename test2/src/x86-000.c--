// execute the commands below to use this file as a test case
//
// this file tests to be sure that the output assembles without complaint
//

target byteorder little;

section "data" {
  playground: bits32[12];
}

section "text" {
        p () {
                bits32 i, j, k, ntotal;
                i = 1;
	        j = 2;
        	k = 3;

		bits32[playground+i] = j;  // _ 2 0 0 0
		k = j;
		bits8[playground+i] = %lobits8(j);  // _ 2 0 0 0
		bits32[playground+i] = %sx32(bits8[playground+i]); // _ 2 0 0 0
		bits32[playground+j] = %zx32(bits8[playground+j]); // _ 2 0 0 0 0
                ntotal = i + j + k + bits32[playground+i] + bits32[playground+j];
		return (ntotal);
  // 1 + 2 + 2 + 2 + 0
        }
}

export main; import printf;
foreign "C" main (bits32 argc, "address" bits32 argv) {
  bits32 n;
  n = p();
  foreign "C" printf("address" fmt, n);
  foreign "C" return (0);
}

section "data" {
  fmt: bits8[] "total is %d\n\0";
}

