target byteorder little;

import printf, call3;
export main;

foreign "C" main(bits32 argc, "address" bits32 argv) {
  bits32 depth1, depth2;
  stackdata {p: bits32[1];}

  depth1 = down(p, 1, 10);
  depth2 = down(p, 1, 100);
  if (depth1 == depth2) {
    foreign "C" printf("address" pgood, 10, 100);
  } else {
    foreign "C" printf("address" pbad, 10, depth1, 100, depth2);
  }
  foreign "C" return(0);
}

down(bits32 sp, bits32 i, bits32 n) {
  if (i < n) { jump call3(down, sp, i+1, n); }
  return (sp - p);
  stackdata { p: bits8[3];}
}

section "data" {
  pgood :
    bits8[] "tail-calling indirect down %d levels uses same space as %d levels\n\0";
  pbad:
    bits8[] "uh-oh! tail-calling indirect down %d levels uses %d bytes of stack\n";
    bits8[] "and %d levels uses %d bytes of stack\n\0";
}
