target
	byteorder little
	memsize 8
	wordsize 32
	pointersize 32
;
bits2 System.rounding_mode = "IEEE 754 rounding mode";
import bits32 "memcpy" as @i_System.ADDRB.memcpy;
section "text" {
}
section "rodata" {
align 4;
@i___huge_val:
bits8[] { 0::bits8, 0::bits8, 0::bits8, 0::bits8, };
bits8[] { 0::bits8, 0::bits8, -16::bits8, 127::bits8, };
}
section "text" {
@i_new_he() {
  bits32 @i_@0i_he;
  bits32 @i_@1i_1;
  bits32 @i_@2i_2;
  if (%ne(%lobits32(bits32[bits32[@i_PL_he_root]]), 0)) { goto @i_21; }
  (bits32[@i_more_he])();
  @i_21:
  @i_@1i_1 = bits32[@i_PL_he_root];
  @i_@0i_he = bits32[@i_@1i_1];
  bits32[@i_@1i_1] = bits32[@i_@0i_he];
  return (@i_@0i_he);
  @i_20:
return();
}
@i_del_he(bits32 @i_p, ) {
  bits32[@i_p] = bits32[bits32[@i_PL_he_root]];
  bits32[@i_PL_he_root] = @i_p;
  @i_23:
return();
}
@i_more_he() {
  bits32 @i_@3i_he;
  bits32 @i_@4i_heend;
  bits32 @i_@5i_1;
  bits32 @i_@6i_2;
  @i_@5i_1 = (bits32[@i_Perl_safemalloc])(1008);
  bits32[@i_PL_he_root] = @i_@5i_1;
  @i_@3i_he = bits32[bits32[@i_PL_he_root]];
  @i_@4i_heend = %add(@i_@3i_he,996);
  goto @i_26; // targets annotation is missing
  @i_25:
  bits32[@i_@3i_he] = %add(@i_@3i_he,12);
  @i_@3i_he = %add(@i_@3i_he,12);
  @i_26:
  if (%ltu(%lobits32(@i_@3i_he), %lobits32(@i_@4i_heend))) { goto @i_25; }
  bits32[@i_@3i_he] = 0;
  @i_24:
return();
}
@i_save_hek(bits32 @i_str, bits32 @i_len, bits32 @i_hash, ) {
  bits32 @i_@7i_hek;
  bits32 @i_@8i_k;
  bits32 @i_@9i_1;
  bits32 @i_@10i_2;
  @i_@9i_1 = 1;
  @i_@10i_2 = (bits32[@i_Perl_safemalloc])(%mul(@i_@9i_1,%add(%add(%lobits32(@i_len),8),@i_@9i_1)));
  @i_@8i_k = @i_@10i_2;
  @i_@7i_hek = @i_@8i_k;
  (bits32[@i_Perl_my_bcopy])(@i_str, %add(@i_@7i_hek,8), %lobits32(%mul(1,%lobits32(@i_len))));
  bits8[%add(@i_len,%add(@i_@7i_hek,8))] = 0::bits8;
  bits32[%add(@i_@7i_hek,4)] = @i_len;
  bits32[@i_@7i_hek] = @i_hash;
  return (@i_@7i_hek);
  @i_28:
return();
}
export @i_Perl_unshare_hek as "_Perl_unshare_hek";
@i_Perl_unshare_hek(bits32 @i_hek, ) {
  bits32 @i_@11i_1;
  @i_hek = @i_hek;
  (bits32[@i_Perl_unsharepvn])(%add(@i_hek,8), bits32[%add(@i_hek,4)], bits32[@i_hek]);
  @i_29:
return();
}
export @i_Perl_hv_fetch as "_Perl_hv_fetch";
@i_Perl_hv_fetch(bits32 @i_hv, bits32 @i_key, bits32 @i_klen, bits32 @i_lval, ) {
  bits32 @i_@12i_xhv;
  bits32 @i_@13i_hash;
  bits32 @i_@14i_entry;
  bits32 @i_@15i_sv;
  bits32 @i_@16i_1;
  bits32 @i_@17i_2;
  bits32 @i_@18i_3;
  bits32 @i_@19i_4;
  bits32 @i_@20i_5;
  bits32 @i_@21i_6;
  bits32 @i_@22i_s_PeRlHaSh;
  bits32 @i_@23i_i_PeRlHaSh;
  bits32 @i_@24i_hash_PeRlHaSh;
  bits32 @i_@25i_7;
  bits32 @i_@26i_8;
  bits32 @i_@27i_9;
  bits32 @i_@28i_10;
  bits32 @i_@29i_11;
  bits32 @i_@30i_12;
  bits32 @i_@31i_13;
  if (%ne(%lobits32(@i_hv), 0)) { goto @i_31; }
  return (0);
  goto @i_30; // targets annotation is missing
  @i_31:
  if (%eq(%and(bits32[%add(@i_hv,8)],32768), 0)) { goto @i_33; }
  @i_@16i_1 = (bits32[@i_Perl_mg_find])(@i_hv, 80);
  if (%eq(%lobits32(@i_@16i_1), 0)) { goto @i_35; }
  @i_@17i_2 = (bits32[@i_Perl_sv_newmortal])();
  @i_@15i_sv = @i_@17i_2;
  (bits32[@i_Perl_mg_copy])(@i_hv, @i_@15i_sv, @i_key, %lobits32(@i_klen));
  @i_@18i_3 = bits32[@i_PL_hv_fetch_sv];
  bits32[@i_@18i_3] = @i_@15i_sv;
  return (@i_@18i_3);
  goto @i_30; // targets annotation is missing
  @i_35:
  @i_33:
  @i_@12i_xhv = bits32[@i_hv];
  if (%ne(%lobits32(bits32[@i_@12i_xhv]), 0)) { goto @i_37; }
  if (%eq(@i_lval, 0)) { goto @i_39; }
  @i_@20i_5 = (bits32[@i_Perl_safemalloc])(%mul(1,%sub(%shl(%shl(%add(bits32[%add(@i_@12i_xhv,8)],1),2),1),16)));
  bits32[@i_@12i_xhv] = @i_@20i_5;
  (bits32[@i_memset])(bits32[@i_@12i_xhv], 0, %mul(1,%sub(%shl(%shl(%add(bits32[%add(@i_@12i_xhv,8)],1),2),1),16)));
  goto @i_40; // targets annotation is missing
  @i_39:
  return (0);
  goto @i_30; // targets annotation is missing
  @i_40:
  @i_37:
  @i_41:
  @i_@22i_s_PeRlHaSh = @i_key;
  @i_@23i_i_PeRlHaSh = %lobits32(@i_klen);
  @i_@24i_hash_PeRlHaSh = 0;
  goto @i_45; // targets annotation is missing
  @i_44:
  @i_@25i_7 = @i_@22i_s_PeRlHaSh;
  @i_@22i_s_PeRlHaSh = %add(@i_@25i_7,1);
  @i_@24i_hash_PeRlHaSh = %add(%mul(33,@i_@24i_hash_PeRlHaSh),%lobits32(%sx32(bits8[@i_@25i_7])));
  @i_45:
  @i_@26i_8 = @i_@23i_i_PeRlHaSh;
  @i_@23i_i_PeRlHaSh = %sub(@i_@26i_8,1);
  if (%ne(@i_@26i_8, 0)) { goto @i_44; }
  @i_@13i_hash = @i_@24i_hash_PeRlHaSh;
  @i_42:
  @i_@14i_entry = bits32[%add(%shl(%and(@i_@13i_hash,%lobits32(%lobits32(bits32[%add(@i_@12i_xhv,8)]))),2),bits32[@i_@12i_xhv])];
  goto @i_50; // targets annotation is missing
  @i_47:
  if (%eq(bits32[bits32[%add(@i_@14i_entry,4)]], @i_@13i_hash)) { goto @i_51; }
  goto @i_48; // targets annotation is missing
  @i_51:
  @i_@28i_10 = 4;
  if (%eq(%lobits32(bits32[%add(bits32[%add(@i_@14i_entry,@i_@28i_10)],@i_@28i_10)]), @i_klen)) { goto @i_53; }
  goto @i_48; // targets annotation is missing
  @i_53:
  @i_@29i_11 = (bits32[@i_Perl_my_memcmp])(%add(bits32[%add(@i_@14i_entry,4)],8), @i_key, %lobits32(@i_klen));
  if (%eq(@i_@29i_11, 0)) { goto @i_55; }
  goto @i_48; // targets annotation is missing
  @i_55:
  return (%add(@i_@14i_entry,8));
  goto @i_30; // targets annotation is missing
  @i_48:
  @i_@14i_entry = bits32[@i_@14i_entry];
  @i_50:
  if (%ne(%lobits32(@i_@14i_entry), 0)) { goto @i_47; }
  if (%eq(@i_lval, 0)) { goto @i_57; }
  @i_@30i_12 = (bits32[@i_Perl_newSV])(0);
  @i_@15i_sv = @i_@30i_12;
  @i_@31i_13 = (bits32[@i_Perl_hv_store])(@i_hv, @i_key, @i_klen, @i_@15i_sv, @i_@13i_hash);
  return (@i_@31i_13);
  goto @i_30; // targets annotation is missing
  @i_57:
  return (0);
  @i_30:
return();
}
export @i_Perl_hv_fetch_ent as "_Perl_hv_fetch_ent";
@i_Perl_hv_fetch_ent(bits32 @i_hv, bits32 @i_keysv, bits32 @i_lval, bits32 @i_hash, ) {
  bits32 @i_@32i_xhv;
  bits32 @i_@33i_key;
  bits32 @i_@34i_entry;
  stackdata {
    align 4;
    @i_@35i_klen: bits32;
  }
  bits32 @i_@36i_sv;
  bits32 @i_@37i_1;
  bits32 @i_@38i_2;
  bits32 @i_@39i_3;
  bits32 @i_@40i_4;
  bits32 @i_@41i_k;
  bits32 @i_@42i_5;
  bits32 @i_@43i_6;
  bits32 @i_@44i_7;
  bits32 @i_@45i_8;
  bits32 @i_@46i_77;
  bits32 @i_@47i_9;
  bits32 @i_@48i_10;
  bits32 @i_@49i_s_PeRlHaSh;
  bits32 @i_@50i_i_PeRlHaSh;
  bits32 @i_@51i_hash_PeRlHaSh;
  bits32 @i_@52i_11;
  bits32 @i_@53i_12;
  bits32 @i_@54i_13;
  bits32 @i_@55i_14;
  bits32 @i_@56i_15;
  bits32 @i_@57i_16;
  bits32 @i_@58i_17;
  @i_hash = @i_hash;
  if (%ne(%lobits32(@i_hv), 0)) { goto @i_60; }
  return (0);
  goto @i_59; // targets annotation is missing
  @i_60:
  if (%eq(%and(bits32[%add(@i_hv,8)],32768), 0)) { goto @i_62; }
  @i_@37i_1 = (bits32[@i_Perl_mg_find])(@i_hv, 80);
  if (%eq(%lobits32(@i_@37i_1), 0)) { goto @i_64; }
  @i_@38i_2 = (bits32[@i_Perl_sv_newmortal])();
  @i_@36i_sv = @i_@38i_2;
  @i_@39i_3 = (bits32[@i_Perl_newSVsv])(@i_keysv);
  @i_@40i_4 = (bits32[@i_Perl_sv_2mortal])(@i_@39i_3);
  @i_keysv = @i_@40i_4;
  (bits32[@i_Perl_mg_copy])(@i_hv, @i_@36i_sv, @i_keysv, -2);
  if (%ne(%lobits32(bits32[bits32[(@i_PL_hv_fetch_ent_mh + 4)]]), 0)) { goto @i_66; }
  @i_@42i_5 = (bits32[@i_Perl_safemalloc])(12);
  @i_@41i_k = @i_@42i_5;
  bits32[(@i_PL_hv_fetch_ent_mh + 4)] = @i_@41i_k;
  @i_66:
  bits32[%add(bits32[bits32[(@i_PL_hv_fetch_ent_mh + 4)]],4)] = -2;
  bits32[%add(bits32[bits32[(@i_PL_hv_fetch_ent_mh + 4)]],8)] = @i_keysv;
  bits32[(@i_PL_hv_fetch_ent_mh + 8)] = @i_@36i_sv;
  return (bits32[@i_PL_hv_fetch_ent_mh]);
  goto @i_59; // targets annotation is missing
  @i_64:
  @i_62:
  @i_@32i_xhv = bits32[@i_hv];
  if (%ne(%lobits32(bits32[@i_@32i_xhv]), 0)) { goto @i_73; }
  if (%eq(@i_lval, 0)) { goto @i_75; }
  @i_@44i_7 = (bits32[@i_Perl_safemalloc])(%mul(1,%sub(%shl(%shl(%add(bits32[%add(@i_@32i_xhv,8)],1),2),1),16)));
  bits32[@i_@32i_xhv] = @i_@44i_7;
  (bits32[@i_memset])(bits32[@i_@32i_xhv], 0, %mul(1,%sub(%shl(%shl(%add(bits32[%add(@i_@32i_xhv,8)],1),2),1),16)));
  goto @i_76; // targets annotation is missing
  @i_75:
  return (0);
  goto @i_59; // targets annotation is missing
  @i_76:
  @i_73:
  if (%eq(%and(bits32[%add(@i_keysv,8)],262144), 0)) { goto @i_78; }
  @i_@47i_9 = @i_keysv;
  bits32[@i_@35i_klen] = bits32[%add(bits32[@i_@47i_9],4)];
  @i_@46i_77 = bits32[bits32[@i_@47i_9]];
  goto @i_79; // targets annotation is missing
  @i_78:
  @i_@48i_10 = (bits32[@i_Perl_sv_2pv])(@i_keysv, bits32[@i_@35i_klen]);
  @i_@46i_77 = @i_@48i_10;
  @i_79:
  @i_@33i_key = @i_@46i_77;
  if (%ne(@i_hash, 0)) { goto @i_80; }
  @i_82:
  @i_@49i_s_PeRlHaSh = @i_@33i_key;
  @i_@50i_i_PeRlHaSh = %lobits32(bits32[bits32[@i_@35i_klen]]);
  @i_@51i_hash_PeRlHaSh = 0;
  goto @i_86; // targets annotation is missing
  @i_85:
  @i_@52i_11 = @i_@49i_s_PeRlHaSh;
  @i_@49i_s_PeRlHaSh = %add(@i_@52i_11,1);
  @i_@51i_hash_PeRlHaSh = %add(%mul(33,@i_@51i_hash_PeRlHaSh),%lobits32(%sx32(bits8[@i_@52i_11])));
  @i_86:
  @i_@53i_12 = @i_@50i_i_PeRlHaSh;
  @i_@50i_i_PeRlHaSh = %sub(@i_@53i_12,1);
  if (%ne(@i_@53i_12, 0)) { goto @i_85; }
  @i_hash = @i_@51i_hash_PeRlHaSh;
  @i_83:
  @i_80:
  @i_@34i_entry = bits32[%add(%shl(%and(@i_hash,%lobits32(%lobits32(bits32[%add(@i_@32i_xhv,8)]))),2),bits32[@i_@32i_xhv])];
  goto @i_91; // targets annotation is missing
  @i_88:
  if (%eq(bits32[bits32[%add(@i_@34i_entry,4)]], @i_hash)) { goto @i_92; }
  goto @i_89; // targets annotation is missing
  @i_92:
  @i_@55i_14 = 4;
  if (%eq(%lobits32(bits32[%add(bits32[%add(@i_@34i_entry,@i_@55i_14)],@i_@55i_14)]), bits32[bits32[@i_@35i_klen]])) { goto @i_94; }
  goto @i_89; // targets annotation is missing
  @i_94:
  @i_@56i_15 = (bits32[@i_Perl_my_memcmp])(%add(bits32[%add(@i_@34i_entry,4)],8), @i_@33i_key, %lobits32(bits32[bits32[@i_@35i_klen]]));
  if (%eq(@i_@56i_15, 0)) { goto @i_96; }
  goto @i_89; // targets annotation is missing
  @i_96:
  return (@i_@34i_entry);
  goto @i_59; // targets annotation is missing
  @i_89:
  @i_@34i_entry = bits32[@i_@34i_entry];
  @i_91:
  if (%ne(%lobits32(@i_@34i_entry), 0)) { goto @i_88; }
  if (%eq(@i_lval, 0)) { goto @i_98; }
  @i_@57i_16 = (bits32[@i_Perl_newSV])(0);
  @i_@36i_sv = @i_@57i_16;
  @i_@58i_17 = (bits32[@i_Perl_hv_store_ent])(@i_hv, @i_keysv, @i_@36i_sv, @i_hash);
  return (@i_@58i_17);
  goto @i_59; // targets annotation is missing
  @i_98:
  return (0);
  @i_59:
return();
}
@i_hv_magic_check(bits32 @i_hv, bits32 @i_needs_copy, bits32 @i_needs_store, ) {
  bits32 @i_@59i_mg;
  bits32 @i_@60i_1;
  bits32 @i_@61i_108;
  bits32 @i_@62i_2;
  bits32 @i_@63i_3;
  @i_needs_copy = @i_needs_copy;
  @i_@59i_mg = bits32[%add(bits32[@i_hv],20)];
  bits32[@i_needs_copy] = 0;
  bits32[@i_needs_store] = 1;
  goto @i_102; // targets annotation is missing
  @i_101:
  @i_@60i_1 = %sx32(bits8[%add(@i_@59i_mg,12)]);
  if (%lt(@i_@60i_1, 65)) { goto @i_104; }
  if (%gt(@i_@60i_1, 90)) { goto @i_104; }
  bits32[@i_needs_copy] = 1;
  @i_@61i_108 = %sx32(bits8[%add(@i_@59i_mg,12)]);
  @i_@63i_3 = 80;
  if (%eq(@i_@61i_108, @i_@63i_3)) { goto @i_109; }
  if (%lt(@i_@61i_108, @i_@63i_3)) { goto @i_106; }
  @i_110:
  if (%eq(@i_@61i_108, 83)) { goto @i_109; }
  goto @i_106; // targets annotation is missing
  @i_109:
  bits32[@i_needs_store] = 0;
  @i_106:
  @i_104:
  @i_@59i_mg = bits32[@i_@59i_mg];
  @i_102:
  if (%ne(%lobits32(@i_@59i_mg), 0)) { goto @i_101; }
  @i_100:
return();
}
export @i_Perl_hv_store as "_Perl_hv_store";
@i_Perl_hv_store(bits32 @i_hv, bits32 @i_key, bits32 @i_klen, bits32 @i_val, bits32 @i_hash, ) {
  bits32 @i_@64i_xhv;
  bits32 @i_@65i_i;
  bits32 @i_@66i_entry;
  bits32 @i_@67i_oentry;
  bits32 @i_@68i_1;
  stackdata {
    align 4;
    @i_@69i_needs_copy: bits32;
  }
  stackdata {
    align 4;
    @i_@70i_needs_store: bits32;
  }
  bits32 @i_@71i_s_PeRlHaSh;
  bits32 @i_@72i_i_PeRlHaSh;
  bits32 @i_@73i_hash_PeRlHaSh;
  bits32 @i_@74i_2;
  bits32 @i_@75i_3;
  bits32 @i_@76i_4;
  bits32 @i_@77i_5;
  bits32 @i_@78i_6;
  bits32 @i_@79i_7;
  bits32 @i_@80i_8;
  bits32 @i_@81i_9;
  bits32 @i_@82i_10;
  bits32 @i_@83i_11;
  bits32 @i_@84i_12;
  bits32 @i_@85i_13;
  bits32 @i_@86i_14;
  bits32 @i_@87i_15;
  @i_hash = @i_hash;
  if (%ne(%lobits32(@i_hv), 0)) { goto @i_112; }
  return (0);
  goto @i_111; // targets annotation is missing
  @i_112:
  @i_@68i_1 = @i_hv;
  @i_@64i_xhv = bits32[@i_@68i_1];
  if (%eq(%and(bits32[%add(@i_@68i_1,8)],57344), 0)) { goto @i_114; }
  (bits32[@i_hv_magic_check])(@i_hv, bits32[@i_@69i_needs_copy], bits32[@i_@70i_needs_store]);
  if (%eq(bits32[bits32[@i_@69i_needs_copy]], 0)) { goto @i_116; }
  (bits32[@i_Perl_mg_copy])(@i_hv, @i_val, @i_key, %lobits32(@i_klen));
  if (%ne(%lobits32(bits32[@i_@64i_xhv]), 0)) { goto @i_118; }
  if (%ne(bits32[bits32[@i_@70i_needs_store]], 0)) { goto @i_118; }
  return (0);
  goto @i_111; // targets annotation is missing
  @i_118:
  @i_116:
  @i_114:
  if (%ne(@i_hash, 0)) { goto @i_120; }
  @i_122:
  @i_@71i_s_PeRlHaSh = @i_key;
  @i_@72i_i_PeRlHaSh = %lobits32(@i_klen);
  @i_@73i_hash_PeRlHaSh = 0;
  goto @i_126; // targets annotation is missing
  @i_125:
  @i_@74i_2 = @i_@71i_s_PeRlHaSh;
  @i_@71i_s_PeRlHaSh = %add(@i_@74i_2,1);
  @i_@73i_hash_PeRlHaSh = %add(%mul(33,@i_@73i_hash_PeRlHaSh),%lobits32(%sx32(bits8[@i_@74i_2])));
  @i_126:
  @i_@75i_3 = @i_@72i_i_PeRlHaSh;
  @i_@72i_i_PeRlHaSh = %sub(@i_@75i_3,1);
  if (%ne(@i_@75i_3, 0)) { goto @i_125; }
  @i_hash = @i_@73i_hash_PeRlHaSh;
  @i_123:
  @i_120:
  if (%ne(%lobits32(bits32[@i_@64i_xhv]), 0)) { goto @i_128; }
  @i_@77i_5 = (bits32[@i_Perl_safemalloc])(%mul(1,%sub(%shl(%shl(%add(bits32[%add(@i_@64i_xhv,8)],1),2),1),16)));
  bits32[@i_@64i_xhv] = @i_@77i_5;
  (bits32[@i_memset])(bits32[@i_@64i_xhv], 0, %mul(1,%sub(%shl(%shl(%add(bits32[%add(@i_@64i_xhv,8)],1),2),1),16)));
  @i_128:
  @i_@67i_oentry = %add(%shl(%and(@i_hash,%lobits32(%lobits32(bits32[%add(@i_@64i_xhv,8)]))),2),bits32[@i_@64i_xhv]);
  @i_@65i_i = 1;
  @i_@66i_entry = bits32[@i_@67i_oentry];
  goto @i_133; // targets annotation is missing
  @i_130:
  if (%eq(bits32[bits32[%add(@i_@66i_entry,4)]], @i_hash)) { goto @i_134; }
  goto @i_131; // targets annotation is missing
  @i_134:
  @i_@80i_8 = 4;
  if (%eq(%lobits32(bits32[%add(bits32[%add(@i_@66i_entry,@i_@80i_8)],@i_@80i_8)]), @i_klen)) { goto @i_136; }
  goto @i_131; // targets annotation is missing
  @i_136:
  @i_@81i_9 = (bits32[@i_Perl_my_memcmp])(%add(bits32[%add(@i_@66i_entry,4)],8), @i_key, %lobits32(@i_klen));
  if (%eq(@i_@81i_9, 0)) { goto @i_138; }
  goto @i_131; // targets annotation is missing
  @i_138:
  (bits32[@i_Perl_sv_free])(bits32[%add(@i_@66i_entry,8)]);
  bits32[%add(@i_@66i_entry,8)] = @i_val;
  return (%add(@i_@66i_entry,8));
  goto @i_111; // targets annotation is missing
  @i_131:
  @i_@65i_i = 0;
  @i_@66i_entry = bits32[@i_@66i_entry];
  @i_133:
  if (%ne(%lobits32(@i_@66i_entry), 0)) { goto @i_130; }
  @i_@82i_10 = (bits32[@i_new_he])();
  @i_@66i_entry = @i_@82i_10;
  if (%eq(%and(bits32[%add(@i_hv,8)],536870912), 0)) { goto @i_140; }
  @i_@83i_11 = (bits32[@i_Perl_share_hek])(@i_key, %lobits32(@i_klen), @i_hash);
  bits32[%add(@i_@66i_entry,4)] = @i_@83i_11;
  goto @i_141; // targets annotation is missing
  @i_140:
  @i_@84i_12 = (bits32[@i_save_hek])(@i_key, %lobits32(@i_klen), @i_hash);
  bits32[%add(@i_@66i_entry,4)] = @i_@84i_12;
  @i_141:
  bits32[%add(@i_@66i_entry,8)] = @i_val;
  bits32[@i_@66i_entry] = bits32[@i_@67i_oentry];
  bits32[@i_@67i_oentry] = @i_@66i_entry;
  @i_@85i_13 = %add(@i_@64i_xhv,12);
  bits32[@i_@85i_13] = %add(bits32[@i_@85i_13],1);
  if (%eq(@i_@65i_i, 0)) { goto @i_142; }
  @i_@86i_14 = %add(@i_@64i_xhv,4);
  bits32[@i_@86i_14] = %add(bits32[@i_@86i_14],1);
  if (%leu(%lobits32(bits32[%add(@i_@64i_xhv,12)]), bits32[%add(@i_@64i_xhv,8)])) { goto @i_144; }
  (bits32[@i_hsplit])(@i_hv);
  @i_144:
  @i_142:
  return (%add(@i_@66i_entry,8));
  @i_111:
return();
}
export @i_Perl_hv_store_ent as "_Perl_hv_store_ent";
@i_Perl_hv_store_ent(bits32 @i_hv, bits32 @i_keysv, bits32 @i_val, bits32 @i_hash, ) {
  bits32 @i_@88i_xhv;
  bits32 @i_@89i_key;
  bits32 @i_@90i_i;
  bits32 @i_@91i_entry;
  bits32 @i_@92i_oentry;
  stackdata {
    align 4;
    @i_@93i_klen: bits32;
  }
  bits32 @i_@94i_1;
  stackdata {
    align 4;
    @i_@95i_needs_copy: bits32;
  }
  stackdata {
    align 4;
    @i_@96i_needs_store: bits32;
  }
  bits32 @i_@97i_save_taint;
  bits32 @i_@98i_155;
  bits32 @i_@99i_2;
  bits32 @i_@100i_3;
  bits32 @i_@101i_4;
  bits32 @i_@102i_5;
  bits32 @i_@103i_162;
  bits32 @i_@104i_6;
  bits32 @i_@105i_7;
  bits32 @i_@106i_s_PeRlHaSh;
  bits32 @i_@107i_i_PeRlHaSh;
  bits32 @i_@108i_hash_PeRlHaSh;
  bits32 @i_@109i_8;
  bits32 @i_@110i_9;
  bits32 @i_@111i_10;
  bits32 @i_@112i_11;
  bits32 @i_@113i_12;
  bits32 @i_@114i_13;
  bits32 @i_@115i_14;
  bits32 @i_@116i_15;
  bits32 @i_@117i_16;
  bits32 @i_@118i_17;
  bits32 @i_@119i_18;
  bits32 @i_@120i_19;
  bits32 @i_@121i_20;
  bits32 @i_@122i_21;
  @i_hash = @i_hash;
  if (%ne(%lobits32(@i_hv), 0)) { goto @i_147; }
  return (0);
  goto @i_146; // targets annotation is missing
  @i_147:
  @i_@94i_1 = @i_hv;
  @i_@88i_xhv = bits32[@i_@94i_1];
  if (%eq(%and(bits32[%add(@i_@94i_1,8)],57344), 0)) { goto @i_149; }
  (bits32[@i_hv_magic_check])(@i_hv, bits32[@i_@95i_needs_copy], bits32[@i_@96i_needs_store]);
  if (%eq(bits32[bits32[@i_@95i_needs_copy]], 0)) { goto @i_151; }
  @i_@97i_save_taint = bits32[bits32[@i_PL_tainted]];
  if (%eq(bits32[bits32[@i_PL_tainting]], 0)) { goto @i_153; }
  @i_@99i_2 = @i_keysv;
  if (%eq(%and(bits32[%add(@i_@99i_2,8)],57344), 0)) { goto @i_156; }
  @i_@100i_3 = (bits32[@i_Perl_sv_tainted])(@i_@99i_2);
  if (%eq(@i_@100i_3, 0)) { goto @i_156; }
  @i_@98i_155 = 1;
  goto @i_157; // targets annotation is missing
  @i_156:
  @i_@98i_155 = 0;
  @i_157:
  bits32[@i_PL_tainted] = @i_@98i_155;
  @i_153:
  @i_@101i_4 = (bits32[@i_Perl_newSVsv])(@i_keysv);
  @i_@102i_5 = (bits32[@i_Perl_sv_2mortal])(@i_@101i_4);
  @i_keysv = @i_@102i_5;
  (bits32[@i_Perl_mg_copy])(@i_hv, @i_val, @i_keysv, -2);
  if (%eq(@i_@97i_save_taint, 0)) { goto @i_158; }
  bits32[@i_PL_tainted] = 1;
  @i_158:
  if (%ne(%lobits32(bits32[@i_@88i_xhv]), 0)) { goto @i_160; }
  if (%ne(bits32[bits32[@i_@96i_needs_store]], 0)) { goto @i_160; }
  return (0);
  goto @i_146; // targets annotation is missing
  @i_160:
  @i_151:
  @i_149:
  if (%eq(%and(bits32[%add(@i_keysv,8)],262144), 0)) { goto @i_163; }
  @i_@104i_6 = @i_keysv;
  bits32[@i_@93i_klen] = bits32[%add(bits32[@i_@104i_6],4)];
  @i_@103i_162 = bits32[bits32[@i_@104i_6]];
  goto @i_164; // targets annotation is missing
  @i_163:
  @i_@105i_7 = (bits32[@i_Perl_sv_2pv])(@i_keysv, bits32[@i_@93i_klen]);
  @i_@103i_162 = @i_@105i_7;
  @i_164:
  @i_@89i_key = @i_@103i_162;
  if (%ne(@i_hash, 0)) { goto @i_165; }
  @i_167:
  @i_@106i_s_PeRlHaSh = @i_@89i_key;
  @i_@107i_i_PeRlHaSh = %lobits32(bits32[bits32[@i_@93i_klen]]);
  @i_@108i_hash_PeRlHaSh = 0;
  goto @i_171; // targets annotation is missing
  @i_170:
  @i_@109i_8 = @i_@106i_s_PeRlHaSh;
  @i_@106i_s_PeRlHaSh = %add(@i_@109i_8,1);
  @i_@108i_hash_PeRlHaSh = %add(%mul(33,@i_@108i_hash_PeRlHaSh),%lobits32(%sx32(bits8[@i_@109i_8])));
  @i_171:
  @i_@110i_9 = @i_@107i_i_PeRlHaSh;
  @i_@107i_i_PeRlHaSh = %sub(@i_@110i_9,1);
  if (%ne(@i_@110i_9, 0)) { goto @i_170; }
  @i_hash = @i_@108i_hash_PeRlHaSh;
  @i_168:
  @i_165:
  if (%ne(%lobits32(bits32[@i_@88i_xhv]), 0)) { goto @i_173; }
  @i_@112i_11 = (bits32[@i_Perl_safemalloc])(%mul(1,%sub(%shl(%shl(%add(bits32[%add(@i_@88i_xhv,8)],1),2),1),16)));
  bits32[@i_@88i_xhv] = @i_@112i_11;
  (bits32[@i_memset])(bits32[@i_@88i_xhv], 0, %mul(1,%sub(%shl(%shl(%add(bits32[%add(@i_@88i_xhv,8)],1),2),1),16)));
  @i_173:
  @i_@92i_oentry = %add(%shl(%and(@i_hash,%lobits32(%lobits32(bits32[%add(@i_@88i_xhv,8)]))),2),bits32[@i_@88i_xhv]);
  @i_@90i_i = 1;
  @i_@91i_entry = bits32[@i_@92i_oentry];
  goto @i_178; // targets annotation is missing
  @i_175:
  if (%eq(bits32[bits32[%add(@i_@91i_entry,4)]], @i_hash)) { goto @i_179; }
  goto @i_176; // targets annotation is missing
  @i_179:
  @i_@115i_14 = 4;
  if (%eq(%lobits32(bits32[%add(bits32[%add(@i_@91i_entry,@i_@115i_14)],@i_@115i_14)]), bits32[bits32[@i_@93i_klen]])) { goto @i_181; }
  goto @i_176; // targets annotation is missing
  @i_181:
  @i_@116i_15 = (bits32[@i_Perl_my_memcmp])(%add(bits32[%add(@i_@91i_entry,4)],8), @i_@89i_key, %lobits32(bits32[bits32[@i_@93i_klen]]));
  if (%eq(@i_@116i_15, 0)) { goto @i_183; }
  goto @i_176; // targets annotation is missing
  @i_183:
  (bits32[@i_Perl_sv_free])(bits32[%add(@i_@91i_entry,8)]);
  bits32[%add(@i_@91i_entry,8)] = @i_val;
  return (@i_@91i_entry);
  goto @i_146; // targets annotation is missing
  @i_176:
  @i_@90i_i = 0;
  @i_@91i_entry = bits32[@i_@91i_entry];
  @i_178:
  if (%ne(%lobits32(@i_@91i_entry), 0)) { goto @i_175; }
  @i_@117i_16 = (bits32[@i_new_he])();
  @i_@91i_entry = @i_@117i_16;
  if (%eq(%and(bits32[%add(@i_hv,8)],536870912), 0)) { goto @i_185; }
  @i_@118i_17 = (bits32[@i_Perl_share_hek])(@i_@89i_key, %lobits32(bits32[bits32[@i_@93i_klen]]), @i_hash);
  bits32[%add(@i_@91i_entry,4)] = @i_@118i_17;
  goto @i_186; // targets annotation is missing
  @i_185:
  @i_@119i_18 = (bits32[@i_save_hek])(@i_@89i_key, %lobits32(bits32[bits32[@i_@93i_klen]]), @i_hash);
  bits32[%add(@i_@91i_entry,4)] = @i_@119i_18;
  @i_186:
  bits32[%add(@i_@91i_entry,8)] = @i_val;
  bits32[@i_@91i_entry] = bits32[@i_@92i_oentry];
  bits32[@i_@92i_oentry] = @i_@91i_entry;
  @i_@120i_19 = %add(@i_@88i_xhv,12);
  bits32[@i_@120i_19] = %add(bits32[@i_@120i_19],1);
  if (%eq(@i_@90i_i, 0)) { goto @i_187; }
  @i_@121i_20 = %add(@i_@88i_xhv,4);
  bits32[@i_@121i_20] = %add(bits32[@i_@121i_20],1);
  if (%leu(%lobits32(bits32[%add(@i_@88i_xhv,12)]), bits32[%add(@i_@88i_xhv,8)])) { goto @i_189; }
  (bits32[@i_hsplit])(@i_hv);
  @i_189:
  @i_187:
  return (@i_@91i_entry);
  @i_146:
return();
}
export @i_Perl_hv_delete as "_Perl_hv_delete";
@i_Perl_hv_delete(bits32 @i_hv, bits32 @i_key, bits32 @i_klen, bits32 @i_flags, ) {
  bits32 @i_@123i_xhv;
  bits32 @i_@124i_i;
  bits32 @i_@125i_hash;
  bits32 @i_@126i_entry;
  bits32 @i_@127i_oentry;
  bits32 @i_@128i_sv;
  bits32 @i_@129i_svp;
  stackdata {
    align 4;
    @i_@130i_needs_copy: bits32;
  }
  stackdata {
    align 4;
    @i_@131i_needs_store: bits32;
  }
  bits32 @i_@132i_1;
  bits32 @i_@133i_2;
  bits32 @i_@134i_s_PeRlHaSh;
  bits32 @i_@135i_i_PeRlHaSh;
  bits32 @i_@136i_hash_PeRlHaSh;
  bits32 @i_@137i_3;
  bits32 @i_@138i_4;
  bits32 @i_@139i_5;
  bits32 @i_@140i_6;
  bits32 @i_@141i_7;
  bits32 @i_@142i_8;
  bits32 @i_@143i_9;
  bits32 @i_@144i_10;
  bits32 @i_@145i_11;
  if (%ne(%lobits32(@i_hv), 0)) { goto @i_192; }
  return (0);
  goto @i_191; // targets annotation is missing
  @i_192:
  if (%eq(%and(bits32[%add(@i_hv,8)],32768), 0)) { goto @i_194; }
  (bits32[@i_hv_magic_check])(@i_hv, bits32[@i_@130i_needs_copy], bits32[@i_@131i_needs_store]);
  if (%eq(bits32[bits32[@i_@130i_needs_copy]], 0)) { goto @i_196; }
  @i_@132i_1 = (bits32[@i_Perl_hv_fetch])(@i_hv, @i_key, @i_klen, 1);
  @i_@129i_svp = @i_@132i_1;
  if (%eq(%lobits32(@i_@132i_1), 0)) { goto @i_196; }
  @i_@128i_sv = bits32[@i_@129i_svp];
  (bits32[@i_Perl_mg_clear])(@i_@128i_sv);
  if (%ne(bits32[bits32[@i_@131i_needs_store]], 0)) { goto @i_198; }
  @i_@133i_2 = (bits32[@i_Perl_mg_find])(@i_@128i_sv, 112);
  if (%eq(%lobits32(@i_@133i_2), 0)) { goto @i_200; }
  (bits32[@i_Perl_sv_unmagic])(@i_@128i_sv, 112);
  return (@i_@128i_sv);
  goto @i_191; // targets annotation is missing
  @i_200:
  return (0);
  goto @i_191; // targets annotation is missing
  @i_198:
  @i_196:
  @i_194:
  @i_@123i_xhv = bits32[@i_hv];
  if (%ne(%lobits32(bits32[@i_@123i_xhv]), 0)) { goto @i_202; }
  return (0);
  goto @i_191; // targets annotation is missing
  @i_202:
  @i_204:
  @i_@134i_s_PeRlHaSh = @i_key;
  @i_@135i_i_PeRlHaSh = %lobits32(@i_klen);
  @i_@136i_hash_PeRlHaSh = 0;
  goto @i_208; // targets annotation is missing
  @i_207:
  @i_@137i_3 = @i_@134i_s_PeRlHaSh;
  @i_@134i_s_PeRlHaSh = %add(@i_@137i_3,1);
  @i_@136i_hash_PeRlHaSh = %add(%mul(33,@i_@136i_hash_PeRlHaSh),%lobits32(%sx32(bits8[@i_@137i_3])));
  @i_208:
  @i_@138i_4 = @i_@135i_i_PeRlHaSh;
  @i_@135i_i_PeRlHaSh = %sub(@i_@138i_4,1);
  if (%ne(@i_@138i_4, 0)) { goto @i_207; }
  @i_@125i_hash = @i_@136i_hash_PeRlHaSh;
  @i_205:
  @i_@127i_oentry = %add(%shl(%and(@i_@125i_hash,%lobits32(%lobits32(bits32[%add(@i_@123i_xhv,8)]))),2),bits32[@i_@123i_xhv]);
  @i_@126i_entry = bits32[@i_@127i_oentry];
  @i_@124i_i = 1;
  goto @i_213; // targets annotation is missing
  @i_210:
  if (%eq(bits32[bits32[%add(@i_@126i_entry,4)]], @i_@125i_hash)) { goto @i_214; }
  goto @i_211; // targets annotation is missing
  @i_214:
  @i_@140i_6 = 4;
  if (%eq(%lobits32(bits32[%add(bits32[%add(@i_@126i_entry,@i_@140i_6)],@i_@140i_6)]), @i_klen)) { goto @i_216; }
  goto @i_211; // targets annotation is missing
  @i_216:
  @i_@141i_7 = (bits32[@i_Perl_my_memcmp])(%add(bits32[%add(@i_@126i_entry,4)],8), @i_key, %lobits32(@i_klen));
  if (%eq(@i_@141i_7, 0)) { goto @i_218; }
  goto @i_211; // targets annotation is missing
  @i_218:
  bits32[@i_@127i_oentry] = bits32[@i_@126i_entry];
  if (%eq(@i_@124i_i, 0)) { goto @i_220; }
  if (%ne(%lobits32(bits32[@i_@127i_oentry]), 0)) { goto @i_220; }
  @i_@142i_8 = %add(@i_@123i_xhv,4);
  bits32[@i_@142i_8] = %sub(bits32[@i_@142i_8],1);
  @i_220:
  if (%eq(%and(@i_flags,2), 0)) { goto @i_222; }
  @i_@128i_sv = 0;
  goto @i_223; // targets annotation is missing
  @i_222:
  @i_@143i_9 = (bits32[@i_Perl_sv_mortalcopy])(bits32[%add(@i_@126i_entry,8)]);
  @i_@128i_sv = @i_@143i_9;
  @i_223:
  if (%ne(%lobits32(@i_@126i_entry), %lobits32(bits32[%add(@i_@123i_xhv,32)]))) { goto @i_224; }
  @i_@144i_10 = %add(@i_hv,8);
  bits32[@i_@144i_10] = %or(bits32[@i_@144i_10],1073741824);
  goto @i_225; // targets annotation is missing
  @i_224:
  (bits32[@i_Perl_hv_free_ent])(@i_hv, @i_@126i_entry);
  @i_225:
  @i_@145i_11 = %add(@i_@123i_xhv,12);
  bits32[@i_@145i_11] = %sub(bits32[@i_@145i_11],1);
  return (@i_@128i_sv);
  goto @i_191; // targets annotation is missing
  @i_211:
  @i_@124i_i = 0;
  @i_@127i_oentry = @i_@126i_entry;
  @i_@126i_entry = bits32[@i_@127i_oentry];
  @i_213:
  if (%ne(%lobits32(@i_@126i_entry), 0)) { goto @i_210; }
  return (0);
  @i_191:
return();
}
export @i_Perl_hv_delete_ent as "_Perl_hv_delete_ent";
@i_Perl_hv_delete_ent(bits32 @i_hv, bits32 @i_keysv, bits32 @i_flags, bits32 @i_hash, ) {
  bits32 @i_@146i_xhv;
  bits32 @i_@147i_i;
  bits32 @i_@148i_key;
  bits32 @i_@149i_entry;
  bits32 @i_@150i_oentry;
  stackdata {
    align 4;
    @i_@151i_klen: bits32;
  }
  bits32 @i_@152i_sv;
  stackdata {
    align 4;
    @i_@153i_needs_copy: bits32;
  }
  stackdata {
    align 4;
    @i_@154i_needs_store: bits32;
  }
  bits32 @i_@155i_1;
  bits32 @i_@156i_2;
  bits32 @i_@157i_239;
  bits32 @i_@158i_3;
  bits32 @i_@159i_4;
  bits32 @i_@160i_s_PeRlHaSh;
  bits32 @i_@161i_i_PeRlHaSh;
  bits32 @i_@162i_hash_PeRlHaSh;
  bits32 @i_@163i_5;
  bits32 @i_@164i_6;
  bits32 @i_@165i_7;
  bits32 @i_@166i_8;
  bits32 @i_@167i_9;
  bits32 @i_@168i_10;
  bits32 @i_@169i_11;
  bits32 @i_@170i_12;
  bits32 @i_@171i_13;
  if (%ne(%lobits32(@i_hv), 0)) { goto @i_227; }
  return (0);
  goto @i_226; // targets annotation is missing
  @i_227:
  if (%eq(%and(bits32[%add(@i_hv,8)],32768), 0)) { goto @i_229; }
  (bits32[@i_hv_magic_check])(@i_hv, bits32[@i_@153i_needs_copy], bits32[@i_@154i_needs_store]);
  if (%eq(bits32[bits32[@i_@153i_needs_copy]], 0)) { goto @i_231; }
  @i_@155i_1 = (bits32[@i_Perl_hv_fetch_ent])(@i_hv, @i_keysv, 1, @i_hash);
  @i_@149i_entry = @i_@155i_1;
  if (%eq(%lobits32(@i_@155i_1), 0)) { goto @i_231; }
  @i_@152i_sv = bits32[%add(@i_@149i_entry,8)];
  (bits32[@i_Perl_mg_clear])(@i_@152i_sv);
  if (%ne(bits32[bits32[@i_@154i_needs_store]], 0)) { goto @i_233; }
  @i_@156i_2 = (bits32[@i_Perl_mg_find])(@i_@152i_sv, 112);
  if (%eq(%lobits32(@i_@156i_2), 0)) { goto @i_235; }
  (bits32[@i_Perl_sv_unmagic])(@i_@152i_sv, 112);
  return (@i_@152i_sv);
  goto @i_226; // targets annotation is missing
  @i_235:
  return (0);
  goto @i_226; // targets annotation is missing
  @i_233:
  @i_231:
  @i_229:
  @i_@146i_xhv = bits32[@i_hv];
  if (%ne(%lobits32(bits32[@i_@146i_xhv]), 0)) { goto @i_237; }
  return (0);
  goto @i_226; // targets annotation is missing
  @i_237:
  if (%eq(%and(bits32[%add(@i_keysv,8)],262144), 0)) { goto @i_240; }
  @i_@158i_3 = @i_keysv;
  bits32[@i_@151i_klen] = bits32[%add(bits32[@i_@158i_3],4)];
  @i_@157i_239 = bits32[bits32[@i_@158i_3]];
  goto @i_241; // targets annotation is missing
  @i_240:
  @i_@159i_4 = (bits32[@i_Perl_sv_2pv])(@i_keysv, bits32[@i_@151i_klen]);
  @i_@157i_239 = @i_@159i_4;
  @i_241:
  @i_@148i_key = @i_@157i_239;
  if (%ne(@i_hash, 0)) { goto @i_242; }
  @i_244:
  @i_@160i_s_PeRlHaSh = @i_@148i_key;
  @i_@161i_i_PeRlHaSh = %lobits32(bits32[bits32[@i_@151i_klen]]);
  @i_@162i_hash_PeRlHaSh = 0;
  goto @i_248; // targets annotation is missing
  @i_247:
  @i_@163i_5 = @i_@160i_s_PeRlHaSh;
  @i_@160i_s_PeRlHaSh = %add(@i_@163i_5,1);
  @i_@162i_hash_PeRlHaSh = %add(%mul(33,@i_@162i_hash_PeRlHaSh),%lobits32(%sx32(bits8[@i_@163i_5])));
  @i_248:
  @i_@164i_6 = @i_@161i_i_PeRlHaSh;
  @i_@161i_i_PeRlHaSh = %sub(@i_@164i_6,1);
  if (%ne(@i_@164i_6, 0)) { goto @i_247; }
  @i_hash = @i_@162i_hash_PeRlHaSh;
  @i_245:
  @i_242:
  @i_@150i_oentry = %add(%shl(%and(@i_hash,%lobits32(%lobits32(bits32[%add(@i_@146i_xhv,8)]))),2),bits32[@i_@146i_xhv]);
  @i_@149i_entry = bits32[@i_@150i_oentry];
  @i_@147i_i = 1;
  goto @i_253; // targets annotation is missing
  @i_250:
  if (%eq(bits32[bits32[%add(@i_@149i_entry,4)]], @i_hash)) { goto @i_254; }
  goto @i_251; // targets annotation is missing
  @i_254:
  @i_@166i_8 = 4;
  if (%eq(%lobits32(bits32[%add(bits32[%add(@i_@149i_entry,@i_@166i_8)],@i_@166i_8)]), bits32[bits32[@i_@151i_klen]])) { goto @i_256; }
  goto @i_251; // targets annotation is missing
  @i_256:
  @i_@167i_9 = (bits32[@i_Perl_my_memcmp])(%add(bits32[%add(@i_@149i_entry,4)],8), @i_@148i_key, %lobits32(bits32[bits32[@i_@151i_klen]]));
  if (%eq(@i_@167i_9, 0)) { goto @i_258; }
  goto @i_251; // targets annotation is missing
  @i_258:
  bits32[@i_@150i_oentry] = bits32[@i_@149i_entry];
  if (%eq(@i_@147i_i, 0)) { goto @i_260; }
  if (%ne(%lobits32(bits32[@i_@150i_oentry]), 0)) { goto @i_260; }
  @i_@168i_10 = %add(@i_@146i_xhv,4);
  bits32[@i_@168i_10] = %sub(bits32[@i_@168i_10],1);
  @i_260:
  if (%eq(%and(@i_flags,2), 0)) { goto @i_262; }
  @i_@152i_sv = 0;
  goto @i_263; // targets annotation is missing
  @i_262:
  @i_@169i_11 = (bits32[@i_Perl_sv_mortalcopy])(bits32[%add(@i_@149i_entry,8)]);
  @i_@152i_sv = @i_@169i_11;
  @i_263:
  if (%ne(%lobits32(@i_@149i_entry), %lobits32(bits32[%add(@i_@146i_xhv,32)]))) { goto @i_264; }
  @i_@170i_12 = %add(@i_hv,8);
  bits32[@i_@170i_12] = %or(bits32[@i_@170i_12],1073741824);
  goto @i_265; // targets annotation is missing
  @i_264:
  (bits32[@i_Perl_hv_free_ent])(@i_hv, @i_@149i_entry);
  @i_265:
  @i_@171i_13 = %add(@i_@146i_xhv,12);
  bits32[@i_@171i_13] = %sub(bits32[@i_@171i_13],1);
  return (@i_@152i_sv);
  goto @i_226; // targets annotation is missing
  @i_251:
  @i_@147i_i = 0;
  @i_@150i_oentry = @i_@149i_entry;
  @i_@149i_entry = bits32[@i_@150i_oentry];
  @i_253:
  if (%ne(%lobits32(@i_@149i_entry), 0)) { goto @i_250; }
  return (0);
  @i_226:
return();
}
export @i_Perl_hv_exists as "_Perl_hv_exists";
@i_Perl_hv_exists(bits32 @i_hv, bits32 @i_key, bits32 @i_klen, ) {
  bits32 @i_@172i_xhv;
  bits32 @i_@173i_hash;
  bits32 @i_@174i_entry;
  bits32 @i_@175i_sv;
  bits32 @i_@176i_1;
  bits32 @i_@177i_2;
  bits32 @i_@178i_3;
  bits32 @i_@179i_279;
  bits32 @i_@180i_278;
  bits32 @i_@181i_273;
  bits32 @i_@182i_276;
  bits32 @i_@183i_277;
  bits32 @i_@184i_274;
  bits32 @i_@185i_275;
  bits32 @i_@186i_4;
  bits32 @i_@187i_5;
  bits32 @i_@188i_6;
  bits32 @i_@189i_7;
  bits32 @i_@190i_8;
  bits32 @i_@191i_9;
  bits32 @i_@192i_10;
  bits32 @i_@193i_s_PeRlHaSh;
  bits32 @i_@194i_i_PeRlHaSh;
  bits32 @i_@195i_hash_PeRlHaSh;
  bits32 @i_@196i_11;
  bits32 @i_@197i_12;
  bits32 @i_@198i_13;
  bits32 @i_@199i_14;
  bits32 @i_@200i_15;
  if (%ne(%lobits32(@i_hv), 0)) { goto @i_267; }
  return (0);
  goto @i_266; // targets annotation is missing
  @i_267:
  if (%eq(%and(bits32[%add(@i_hv,8)],32768), 0)) { goto @i_269; }
  @i_@176i_1 = (bits32[@i_Perl_mg_find])(@i_hv, 80);
  if (%eq(%lobits32(@i_@176i_1), 0)) { goto @i_271; }
  @i_@177i_2 = (bits32[@i_Perl_sv_newmortal])();
  @i_@175i_sv = @i_@177i_2;
  (bits32[@i_Perl_mg_copy])(@i_hv, @i_@175i_sv, @i_key, %lobits32(@i_klen));
  @i_@178i_3 = (bits32[@i_Perl_mg_find])(@i_@175i_sv, 112);
  (bits32[@i_Perl_magic_existspack])(@i_@175i_sv, @i_@178i_3);
  if (%ne(%lobits32(@i_@175i_sv), 0)) { goto @i_280; }
  @i_@179i_279 = 0;
  goto @i_281; // targets annotation is missing
  @i_280:
  if (%eq(%and(bits32[%add(@i_@175i_sv,8)],262144), 0)) { goto @i_282; }
  @i_@186i_4 = bits32[@i_PL_Xpv];
  @i_@187i_5 = bits32[@i_@175i_sv];
  bits32[@i_@186i_4] = @i_@187i_5;
  if (%eq(%lobits32(@i_@187i_5), 0)) { goto @i_284; }
  @i_@188i_6 = bits32[@i_@186i_4];
  @i_@189i_7 = %sx32(bits8[bits32[@i_@188i_6]]);
  @i_@190i_8 = 48;
  if (%gt(@i_@189i_7, @i_@190i_8)) { goto @i_287; }
  @i_@191i_9 = bits32[%add(@i_@188i_6,4)];
  if (%gtu(@i_@191i_9, 1)) { goto @i_287; }
  if (%eq(@i_@191i_9, 0)) { goto @i_284; }
  if (%eq(@i_@189i_7, @i_@190i_8)) { goto @i_284; }
  @i_287:
  @i_@181i_273 = 1;
  goto @i_285; // targets annotation is missing
  @i_284:
  @i_@181i_273 = 0;
  @i_285:
  @i_@180i_278 = @i_@181i_273;
  goto @i_283; // targets annotation is missing
  @i_282:
  if (%eq(%and(bits32[%add(@i_@175i_sv,8)],65536), 0)) { goto @i_288; }
  if (%eq(bits32[%add(bits32[@i_@175i_sv],12)], 0)) { goto @i_290; }
  @i_@183i_277 = 1;
  goto @i_291; // targets annotation is missing
  @i_290:
  @i_@183i_277 = 0;
  @i_291:
  @i_@182i_276 = @i_@183i_277;
  goto @i_289; // targets annotation is missing
  @i_288:
  if (%eq(%and(bits32[%add(@i_@175i_sv,8)],131072), 0)) { goto @i_292; }
  if (%eq(%fcmp(bits32[%add(bits32[@i_@175i_sv],16)],bits32[bits32[@f_296]]),%float_eq())) { goto @i_294; }
  @i_@185i_275 = 1;
  goto @i_295; // targets annotation is missing
  @i_294:
  @i_@185i_275 = 0;
  @i_295:
  @i_@184i_274 = @i_@185i_275;
  goto @i_293; // targets annotation is missing
  @i_292:
  @i_@192i_10 = (bits32[@i_Perl_sv_2bool])(@i_@175i_sv);
  @i_@184i_274 = @i_@192i_10;
  @i_293:
  @i_@182i_276 = @i_@184i_274;
  @i_289:
  @i_@180i_278 = @i_@182i_276;
  @i_283:
  @i_@179i_279 = @i_@180i_278;
  @i_281:
  return (@i_@179i_279);
  goto @i_266; // targets annotation is missing
  @i_271:
  @i_269:
  @i_@172i_xhv = bits32[@i_hv];
  if (%ne(%lobits32(bits32[@i_@172i_xhv]), 0)) { goto @i_297; }
  return (0);
  goto @i_266; // targets annotation is missing
  @i_297:
  @i_299:
  @i_@193i_s_PeRlHaSh = @i_key;
  @i_@194i_i_PeRlHaSh = %lobits32(@i_klen);
  @i_@195i_hash_PeRlHaSh = 0;
  goto @i_303; // targets annotation is missing
  @i_302:
  @i_@196i_11 = @i_@193i_s_PeRlHaSh;
  @i_@193i_s_PeRlHaSh = %add(@i_@196i_11,1);
  @i_@195i_hash_PeRlHaSh = %add(%mul(33,@i_@195i_hash_PeRlHaSh),%lobits32(%sx32(bits8[@i_@196i_11])));
  @i_303:
  @i_@197i_12 = @i_@194i_i_PeRlHaSh;
  @i_@194i_i_PeRlHaSh = %sub(@i_@197i_12,1);
  if (%ne(@i_@197i_12, 0)) { goto @i_302; }
  @i_@173i_hash = @i_@195i_hash_PeRlHaSh;
  @i_300:
  @i_@174i_entry = bits32[%add(%shl(%and(@i_@173i_hash,%lobits32(%lobits32(bits32[%add(@i_@172i_xhv,8)]))),2),bits32[@i_@172i_xhv])];
  goto @i_308; // targets annotation is missing
  @i_305:
  if (%eq(bits32[bits32[%add(@i_@174i_entry,4)]], @i_@173i_hash)) { goto @i_309; }
  goto @i_306; // targets annotation is missing
  @i_309:
  @i_@199i_14 = 4;
  if (%eq(%lobits32(bits32[%add(bits32[%add(@i_@174i_entry,@i_@199i_14)],@i_@199i_14)]), @i_klen)) { goto @i_311; }
  goto @i_306; // targets annotation is missing
  @i_311:
  @i_@200i_15 = (bits32[@i_Perl_my_memcmp])(%add(bits32[%add(@i_@174i_entry,4)],8), @i_key, %lobits32(@i_klen));
  if (%eq(@i_@200i_15, 0)) { goto @i_313; }
  goto @i_306; // targets annotation is missing
  @i_313:
  return (1);
  goto @i_266; // targets annotation is missing
  @i_306:
  @i_@174i_entry = bits32[@i_@174i_entry];
  @i_308:
  if (%ne(%lobits32(@i_@174i_entry), 0)) { goto @i_305; }
  return (0);
  @i_266:
return();
}
export @i_Perl_hv_exists_ent as "_Perl_hv_exists_ent";
@i_Perl_hv_exists_ent(bits32 @i_hv, bits32 @i_keysv, bits32 @i_hash, ) {
  bits32 @i_@201i_xhv;
  bits32 @i_@202i_key;
  bits32 @i_@203i_entry;
  stackdata {
    align 4;
    @i_@204i_klen: bits32;
  }
  bits32 @i_@205i_sv;
  bits32 @i_@206i_1;
  bits32 @i_@207i_2;
  bits32 @i_@208i_3;
  bits32 @i_@209i_4;
  bits32 @i_@210i_5;
  bits32 @i_@211i_328;
  bits32 @i_@212i_327;
  bits32 @i_@213i_322;
  bits32 @i_@214i_325;
  bits32 @i_@215i_326;
  bits32 @i_@216i_323;
  bits32 @i_@217i_324;
  bits32 @i_@218i_6;
  bits32 @i_@219i_7;
  bits32 @i_@220i_8;
  bits32 @i_@221i_9;
  bits32 @i_@222i_10;
  bits32 @i_@223i_11;
  bits32 @i_@224i_12;
  bits32 @i_@225i_347;
  bits32 @i_@226i_13;
  bits32 @i_@227i_14;
  bits32 @i_@228i_s_PeRlHaSh;
  bits32 @i_@229i_i_PeRlHaSh;
  bits32 @i_@230i_hash_PeRlHaSh;
  bits32 @i_@231i_15;
  bits32 @i_@232i_16;
  bits32 @i_@233i_17;
  bits32 @i_@234i_18;
  bits32 @i_@235i_19;
  if (%ne(%lobits32(@i_hv), 0)) { goto @i_316; }
  return (0);
  goto @i_315; // targets annotation is missing
  @i_316:
  if (%eq(%and(bits32[%add(@i_hv,8)],32768), 0)) { goto @i_318; }
  @i_@206i_1 = (bits32[@i_Perl_mg_find])(@i_hv, 80);
  if (%eq(%lobits32(@i_@206i_1), 0)) { goto @i_320; }
  @i_@207i_2 = (bits32[@i_Perl_sv_newmortal])();
  @i_@205i_sv = @i_@207i_2;
  @i_@208i_3 = (bits32[@i_Perl_newSVsv])(@i_keysv);
  @i_@209i_4 = (bits32[@i_Perl_sv_2mortal])(@i_@208i_3);
  @i_keysv = @i_@209i_4;
  (bits32[@i_Perl_mg_copy])(@i_hv, @i_@205i_sv, @i_keysv, -2);
  @i_@210i_5 = (bits32[@i_Perl_mg_find])(@i_@205i_sv, 112);
  (bits32[@i_Perl_magic_existspack])(@i_@205i_sv, @i_@210i_5);
  if (%ne(%lobits32(@i_@205i_sv), 0)) { goto @i_329; }
  @i_@211i_328 = 0;
  goto @i_330; // targets annotation is missing
  @i_329:
  if (%eq(%and(bits32[%add(@i_@205i_sv,8)],262144), 0)) { goto @i_331; }
  @i_@218i_6 = bits32[@i_PL_Xpv];
  @i_@219i_7 = bits32[@i_@205i_sv];
  bits32[@i_@218i_6] = @i_@219i_7;
  if (%eq(%lobits32(@i_@219i_7), 0)) { goto @i_333; }
  @i_@220i_8 = bits32[@i_@218i_6];
  @i_@221i_9 = %sx32(bits8[bits32[@i_@220i_8]]);
  @i_@222i_10 = 48;
  if (%gt(@i_@221i_9, @i_@222i_10)) { goto @i_336; }
  @i_@223i_11 = bits32[%add(@i_@220i_8,4)];
  if (%gtu(@i_@223i_11, 1)) { goto @i_336; }
  if (%eq(@i_@223i_11, 0)) { goto @i_333; }
  if (%eq(@i_@221i_9, @i_@222i_10)) { goto @i_333; }
  @i_336:
  @i_@213i_322 = 1;
  goto @i_334; // targets annotation is missing
  @i_333:
  @i_@213i_322 = 0;
  @i_334:
  @i_@212i_327 = @i_@213i_322;
  goto @i_332; // targets annotation is missing
  @i_331:
  if (%eq(%and(bits32[%add(@i_@205i_sv,8)],65536), 0)) { goto @i_337; }
  if (%eq(bits32[%add(bits32[@i_@205i_sv],12)], 0)) { goto @i_339; }
  @i_@215i_326 = 1;
  goto @i_340; // targets annotation is missing
  @i_339:
  @i_@215i_326 = 0;
  @i_340:
  @i_@214i_325 = @i_@215i_326;
  goto @i_338; // targets annotation is missing
  @i_337:
  if (%eq(%and(bits32[%add(@i_@205i_sv,8)],131072), 0)) { goto @i_341; }
  if (%eq(%fcmp(bits32[%add(bits32[@i_@205i_sv],16)],bits32[bits32[@f_296]]),%float_eq())) { goto @i_343; }
  @i_@217i_324 = 1;
  goto @i_344; // targets annotation is missing
  @i_343:
  @i_@217i_324 = 0;
  @i_344:
  @i_@216i_323 = @i_@217i_324;
  goto @i_342; // targets annotation is missing
  @i_341:
  @i_@224i_12 = (bits32[@i_Perl_sv_2bool])(@i_@205i_sv);
  @i_@216i_323 = @i_@224i_12;
  @i_342:
  @i_@214i_325 = @i_@216i_323;
  @i_338:
  @i_@212i_327 = @i_@214i_325;
  @i_332:
  @i_@211i_328 = @i_@212i_327;
  @i_330:
  return (@i_@211i_328);
  goto @i_315; // targets annotation is missing
  @i_320:
  @i_318:
  @i_@201i_xhv = bits32[@i_hv];
  if (%ne(%lobits32(bits32[@i_@201i_xhv]), 0)) { goto @i_345; }
  return (0);
  goto @i_315; // targets annotation is missing
  @i_345:
  if (%eq(%and(bits32[%add(@i_keysv,8)],262144), 0)) { goto @i_348; }
  @i_@226i_13 = @i_keysv;
  bits32[@i_@204i_klen] = bits32[%add(bits32[@i_@226i_13],4)];
  @i_@225i_347 = bits32[bits32[@i_@226i_13]];
  goto @i_349; // targets annotation is missing
  @i_348:
  @i_@227i_14 = (bits32[@i_Perl_sv_2pv])(@i_keysv, bits32[@i_@204i_klen]);
  @i_@225i_347 = @i_@227i_14;
  @i_349:
  @i_@202i_key = @i_@225i_347;
  if (%ne(@i_hash, 0)) { goto @i_350; }
  @i_352:
  @i_@228i_s_PeRlHaSh = @i_@202i_key;
  @i_@229i_i_PeRlHaSh = %lobits32(bits32[bits32[@i_@204i_klen]]);
  @i_@230i_hash_PeRlHaSh = 0;
  goto @i_356; // targets annotation is missing
  @i_355:
  @i_@231i_15 = @i_@228i_s_PeRlHaSh;
  @i_@228i_s_PeRlHaSh = %add(@i_@231i_15,1);
  @i_@230i_hash_PeRlHaSh = %add(%mul(33,@i_@230i_hash_PeRlHaSh),%lobits32(%sx32(bits8[@i_@231i_15])));
  @i_356:
  @i_@232i_16 = @i_@229i_i_PeRlHaSh;
  @i_@229i_i_PeRlHaSh = %sub(@i_@232i_16,1);
  if (%ne(@i_@232i_16, 0)) { goto @i_355; }
  @i_hash = @i_@230i_hash_PeRlHaSh;
  @i_353:
  @i_350:
  @i_@203i_entry = bits32[%add(%shl(%and(@i_hash,%lobits32(%lobits32(bits32[%add(@i_@201i_xhv,8)]))),2),bits32[@i_@201i_xhv])];
  goto @i_361; // targets annotation is missing
  @i_358:
  if (%eq(bits32[bits32[%add(@i_@203i_entry,4)]], @i_hash)) { goto @i_362; }
  goto @i_359; // targets annotation is missing
  @i_362:
  @i_@234i_18 = 4;
  if (%eq(%lobits32(bits32[%add(bits32[%add(@i_@203i_entry,@i_@234i_18)],@i_@234i_18)]), bits32[bits32[@i_@204i_klen]])) { goto @i_364; }
  goto @i_359; // targets annotation is missing
  @i_364:
  @i_@235i_19 = (bits32[@i_Perl_my_memcmp])(%add(bits32[%add(@i_@203i_entry,4)],8), @i_@202i_key, %lobits32(bits32[bits32[@i_@204i_klen]]));
  if (%eq(@i_@235i_19, 0)) { goto @i_366; }
  goto @i_359; // targets annotation is missing
  @i_366:
  return (1);
  goto @i_315; // targets annotation is missing
  @i_359:
  @i_@203i_entry = bits32[@i_@203i_entry];
  @i_361:
  if (%ne(%lobits32(@i_@203i_entry), 0)) { goto @i_358; }
  return (0);
  @i_315:
return();
}
@i_hsplit(bits32 @i_hv, ) {
  bits32 @i_@236i_xhv;
  bits32 @i_@237i_newsize;
  bits32 @i_@238i_i;
  bits32 @i_@239i_a;
  bits32 @i_@240i_aep;
  bits32 @i_@241i_bep;
  bits32 @i_@242i_entry;
  bits32 @i_@243i_oentry;
  bits32 @i_@244i_oldsize;
  bits32 @i_@245i_1;
  bits32 @i_@246i_2;
  bits32 @i_@247i_3;
  bits32 @i_@248i_4;
  bits32 @i_@249i_5;
  bits32 @i_@250i_6;
  bits32 @i_@251i_7;
  bits32 @i_@252i_8;
  bits32 @i_@253i_9;
  @i_@236i_xhv = bits32[@i_hv];
  @i_@244i_oldsize = %add(%lobits32(bits32[%add(@i_@236i_xhv,8)]),1);
  @i_@237i_newsize = %shl(@i_@244i_oldsize,1);
  @i_@239i_a = bits32[@i_@236i_xhv];
  @i_@245i_1 = 1;
  bits32[@i_PL_nomemok] = @i_@245i_1;
  @i_@246i_2 = (bits32[@i_Perl_safemalloc])(%mul(1,%sub(%shl(%shl(%lobits32(@i_@237i_newsize),2),@i_@245i_1),16)));
  @i_@239i_a = @i_@246i_2;
  if (%ne(%lobits32(@i_@239i_a), 0)) { goto @i_369; }
  bits32[@i_PL_nomemok] = 0;
  goto @i_368; // targets annotation is missing
  @i_369:
  (bits32[@i_Perl_my_bcopy])(bits32[@i_@236i_xhv], @i_@239i_a, %lobits32(%mul(1,%shl(%lobits32(@i_@244i_oldsize),2))));
  if (%lt(@i_@244i_oldsize, 64)) { goto @i_371; }
  @i_373:
  if (%ne(%lobits32(bits32[bits32[@i_PL_nice_chunk]]), 0)) { goto @i_376; }
  bits32[@i_PL_nice_chunk] = bits32[@i_@236i_xhv];
  bits32[@i_PL_nice_chunk_size] = %sub(%shl(%shl(%lobits32(@i_@244i_oldsize),2),1),16);
  goto @i_372; // targets annotation is missing
  @i_376:
  (bits32[@i_Perl_safefree])(bits32[@i_@236i_xhv]);
  goto @i_372; // targets annotation is missing
  @i_371:
  (bits32[@i_Perl_safefree])(bits32[@i_@236i_xhv]);
  @i_372:
  @i_@247i_3 = 0;
  bits32[@i_PL_nomemok] = @i_@247i_3;
  @i_@249i_5 = 2;
  (bits32[@i_memset])(%add(%shl(%lobits32(@i_@244i_oldsize),@i_@249i_5),@i_@239i_a), @i_@247i_3, %mul(1,%shl(%lobits32(%sub(@i_@237i_newsize,@i_@244i_oldsize)),@i_@249i_5)));
  @i_@250i_6 = %sub(@i_@237i_newsize,1);
  @i_@237i_newsize = @i_@250i_6;
  bits32[%add(@i_@236i_xhv,8)] = %lobits32(@i_@250i_6);
  bits32[@i_@236i_xhv] = @i_@239i_a;
  @i_@240i_aep = @i_@239i_a;
  @i_@238i_i = 0;
  goto @i_381; // targets annotation is missing
  @i_378:
  if (%ne(%lobits32(bits32[@i_@240i_aep]), 0)) { goto @i_382; }
  goto @i_379; // targets annotation is missing
  @i_382:
  @i_@241i_bep = %add(%shl(@i_@244i_oldsize,2),@i_@240i_aep);
  @i_@243i_oentry = @i_@240i_aep;
  @i_@242i_entry = bits32[@i_@240i_aep];
  goto @i_387; // targets annotation is missing
  @i_384:
  if (%eq(%and(bits32[bits32[%add(@i_@242i_entry,4)]],%lobits32(@i_@237i_newsize)), %lobits32(@i_@238i_i))) { goto @i_388; }
  bits32[@i_@243i_oentry] = bits32[@i_@242i_entry];
  bits32[@i_@242i_entry] = bits32[@i_@241i_bep];
  if (%ne(%lobits32(bits32[@i_@241i_bep]), 0)) { goto @i_390; }
  @i_@252i_8 = %add(@i_@236i_xhv,4);
  bits32[@i_@252i_8] = %add(bits32[@i_@252i_8],1);
  @i_390:
  bits32[@i_@241i_bep] = @i_@242i_entry;
  goto @i_385; // targets annotation is missing
  @i_388:
  @i_@243i_oentry = @i_@242i_entry;
  @i_385:
  @i_@242i_entry = bits32[@i_@243i_oentry];
  @i_387:
  if (%ne(%lobits32(@i_@242i_entry), 0)) { goto @i_384; }
  if (%ne(%lobits32(bits32[@i_@240i_aep]), 0)) { goto @i_392; }
  @i_@253i_9 = %add(@i_@236i_xhv,4);
  bits32[@i_@253i_9] = %sub(bits32[@i_@253i_9],1);
  @i_392:
  @i_379:
  @i_@238i_i = %add(@i_@238i_i,1);
  @i_@240i_aep = %add(@i_@240i_aep,4);
  @i_381:
  if (%lt(@i_@238i_i, @i_@244i_oldsize)) { goto @i_378; }
  @i_368:
return();
}
export @i_Perl_hv_ksplit as "_Perl_hv_ksplit";
@i_Perl_hv_ksplit(bits32 @i_hv, bits32 @i_newmax, ) {
  bits32 @i_@254i_xhv;
  bits32 @i_@255i_newsize;
  bits32 @i_@256i_i;
  bits32 @i_@257i_j;
  bits32 @i_@258i_a;
  bits32 @i_@259i_aep;
  bits32 @i_@260i_entry;
  bits32 @i_@261i_oentry;
  bits32 @i_@262i_oldsize;
  bits32 @i_@263i_1;
  bits32 @i_@264i_2;
  bits32 @i_@265i_3;
  bits32 @i_@266i_4;
  bits32 @i_@267i_5;
  bits32 @i_@268i_6;
  bits32 @i_@269i_7;
  bits32 @i_@270i_8;
  bits32 @i_@271i_9;
  bits32 @i_@272i_10;
  bits32 @i_@273i_11;
  bits32 @i_@274i_12;
  bits32 @i_@275i_13;
  bits32 @i_@276i_14;
  bits32 @i_@277i_15;
  @i_@254i_xhv = bits32[@i_hv];
  @i_@262i_oldsize = %add(%lobits32(bits32[%add(@i_@254i_xhv,8)]),1);
  @i_@255i_newsize = @i_newmax;
  @i_@263i_1 = @i_newmax;
  if (%ne(@i_@255i_newsize, @i_@263i_1)) { goto @i_397; }
  if (%gt(@i_@263i_1, @i_@262i_oldsize)) { goto @i_399; }
  @i_397:
  goto @i_394; // targets annotation is missing
  @i_398:
  @i_@255i_newsize = %and(@i_@255i_newsize,%com(%and(@i_@255i_newsize,%add(%com(@i_@255i_newsize),1))));
  @i_399:
  if (%ne(%and(@i_@255i_newsize,%add(%com(@i_@255i_newsize),1)), @i_@255i_newsize)) { goto @i_398; }
  if (%ge(@i_@255i_newsize, @i_newmax)) { goto @i_401; }
  @i_@255i_newsize = %shl(@i_@255i_newsize,1);
  @i_401:
  if (%ge(@i_@255i_newsize, @i_newmax)) { goto @i_403; }
  goto @i_394; // targets annotation is missing
  @i_403:
  @i_@258i_a = bits32[@i_@254i_xhv];
  if (%eq(%lobits32(@i_@258i_a), 0)) { goto @i_405; }
  @i_@266i_4 = 1;
  bits32[@i_PL_nomemok] = @i_@266i_4;
  @i_@267i_5 = (bits32[@i_Perl_safemalloc])(%mul(1,%sub(%shl(%shl(%lobits32(@i_@255i_newsize),2),@i_@266i_4),16)));
  @i_@258i_a = @i_@267i_5;
  if (%ne(%lobits32(@i_@258i_a), 0)) { goto @i_407; }
  bits32[@i_PL_nomemok] = 0;
  goto @i_394; // targets annotation is missing
  @i_407:
  (bits32[@i_Perl_my_bcopy])(bits32[@i_@254i_xhv], @i_@258i_a, %lobits32(%mul(1,%shl(%lobits32(@i_@262i_oldsize),2))));
  if (%lt(@i_@262i_oldsize, 64)) { goto @i_409; }
  @i_411:
  if (%ne(%lobits32(bits32[bits32[@i_PL_nice_chunk]]), 0)) { goto @i_414; }
  bits32[@i_PL_nice_chunk] = bits32[@i_@254i_xhv];
  bits32[@i_PL_nice_chunk_size] = %sub(%shl(%shl(%lobits32(@i_@262i_oldsize),2),1),16);
  goto @i_410; // targets annotation is missing
  @i_414:
  (bits32[@i_Perl_safefree])(bits32[@i_@254i_xhv]);
  goto @i_410; // targets annotation is missing
  @i_409:
  (bits32[@i_Perl_safefree])(bits32[@i_@254i_xhv]);
  @i_410:
  @i_@268i_6 = 0;
  bits32[@i_PL_nomemok] = @i_@268i_6;
  @i_@270i_8 = 2;
  (bits32[@i_memset])(%add(%shl(%lobits32(@i_@262i_oldsize),@i_@270i_8),@i_@258i_a), @i_@268i_6, %mul(1,%shl(%lobits32(%sub(@i_@255i_newsize,@i_@262i_oldsize)),@i_@270i_8)));
  goto @i_406; // targets annotation is missing
  @i_405:
  @i_@271i_9 = (bits32[@i_Perl_safemalloc])(%mul(1,%sub(%shl(%shl(%lobits32(@i_@255i_newsize),2),1),16)));
  @i_@258i_a = @i_@271i_9;
  (bits32[@i_memset])(@i_@258i_a, 0, %mul(1,%sub(%shl(%shl(%lobits32(@i_@255i_newsize),2),1),16)));
  @i_406:
  @i_@272i_10 = %sub(@i_@255i_newsize,1);
  @i_@255i_newsize = @i_@272i_10;
  bits32[%add(@i_@254i_xhv,8)] = %lobits32(@i_@272i_10);
  bits32[@i_@254i_xhv] = @i_@258i_a;
  if (%ne(bits32[%add(@i_@254i_xhv,4)], 0)) { goto @i_416; }
  goto @i_394; // targets annotation is missing
  @i_416:
  @i_@259i_aep = @i_@258i_a;
  @i_@256i_i = 0;
  goto @i_421; // targets annotation is missing
  @i_418:
  if (%ne(%lobits32(bits32[@i_@259i_aep]), 0)) { goto @i_422; }
  goto @i_419; // targets annotation is missing
  @i_422:
  @i_@261i_oentry = @i_@259i_aep;
  @i_@260i_entry = bits32[@i_@259i_aep];
  goto @i_427; // targets annotation is missing
  @i_424:
  @i_@274i_12 = %lobits32(%and(bits32[bits32[%add(@i_@260i_entry,4)]],%lobits32(@i_@255i_newsize)));
  @i_@257i_j = @i_@274i_12;
  if (%eq(@i_@274i_12, @i_@256i_i)) { goto @i_428; }
  @i_@257i_j = %sub(@i_@257i_j,@i_@256i_i);
  bits32[@i_@261i_oentry] = bits32[@i_@260i_entry];
  @i_@275i_13 = bits32[%add(%shl(@i_@257i_j,2),@i_@259i_aep)];
  bits32[@i_@260i_entry] = @i_@275i_13;
  if (%ne(%lobits32(@i_@275i_13), 0)) { goto @i_430; }
  @i_@276i_14 = %add(@i_@254i_xhv,4);
  bits32[@i_@276i_14] = %add(bits32[@i_@276i_14],1);
  @i_430:
  bits32[%add(%shl(@i_@257i_j,2),@i_@259i_aep)] = @i_@260i_entry;
  goto @i_425; // targets annotation is missing
  @i_428:
  @i_@261i_oentry = @i_@260i_entry;
  @i_425:
  @i_@260i_entry = bits32[@i_@261i_oentry];
  @i_427:
  if (%ne(%lobits32(@i_@260i_entry), 0)) { goto @i_424; }
  if (%ne(%lobits32(bits32[@i_@259i_aep]), 0)) { goto @i_432; }
  @i_@277i_15 = %add(@i_@254i_xhv,4);
  bits32[@i_@277i_15] = %sub(bits32[@i_@277i_15],1);
  @i_432:
  @i_419:
  @i_@256i_i = %add(@i_@256i_i,1);
  @i_@259i_aep = %add(@i_@259i_aep,4);
  @i_421:
  if (%lt(@i_@256i_i, @i_@262i_oldsize)) { goto @i_418; }
  @i_394:
return();
}
export @i_Perl_newHV as "_Perl_newHV";
@i_Perl_newHV() {
  bits32 @i_@278i_hv;
  bits32 @i_@279i_xhv;
  bits32 @i_@280i_1;
  bits32 @i_@281i_2;
  bits32 @i_@282i_3;
  bits32 @i_@283i_4;
  bits32 @i_@284i_5;
  @i_@280i_1 = (bits32[@i_Perl_newSV])(0);
  @i_@278i_hv = @i_@280i_1;
  (bits32[@i_Perl_sv_upgrade])(@i_@278i_hv, 11);
  @i_@279i_xhv = bits32[@i_@278i_hv];
  @i_@282i_3 = %add(@i_@278i_hv,8);
  bits32[@i_@282i_3] = %and(bits32[@i_@282i_3],-67371009);
  @i_@283i_4 = %add(@i_@278i_hv,8);
  bits32[@i_@283i_4] = %and(bits32[@i_@283i_4],-33685505);
  @i_@284i_5 = %add(@i_@278i_hv,8);
  bits32[@i_@284i_5] = %or(bits32[@i_@284i_5],536870912);
  bits32[%add(@i_@279i_xhv,8)] = 7;
  bits32[%add(@i_@279i_xhv,4)] = 0;
  bits32[%add(@i_@279i_xhv,36)] = 0;
  (bits32[@i_Perl_hv_iterinit])(@i_@278i_hv);
  return (@i_@278i_hv);
  @i_434:
return();
}
export @i_Perl_newHVhv as "_Perl_newHVhv";
@i_Perl_newHVhv(bits32 @i_ohv, ) {
  bits32 @i_@285i_hv;
  bits32 @i_@286i_hv_max;
  bits32 @i_@287i_hv_fill;
  bits32 @i_@288i_436;
  bits32 @i_@289i_439;
  bits32 @i_@290i_1;
  bits32 @i_@291i_2;
  bits32 @i_@292i_entry;
  bits32 @i_@293i_hv_riter;
  bits32 @i_@294i_hv_eiter;
  bits32 @i_@295i_3;
  bits32 @i_@296i_4;
  bits32 @i_@297i_5;
  bits32 @i_@298i_6;
  bits32 @i_@299i_7;
  bits32 @i_@300i_8;
  bits32 @i_@301i_9;
  if (%eq(%lobits32(@i_ohv), 0)) { goto @i_437; }
  @i_@288i_436 = bits32[%add(bits32[@i_ohv],8)];
  goto @i_438; // targets annotation is missing
  @i_437:
  @i_@288i_436 = 0;
  @i_438:
  @i_@286i_hv_max = @i_@288i_436;
  if (%eq(%lobits32(@i_ohv), 0)) { goto @i_440; }
  @i_@289i_439 = bits32[%add(bits32[@i_ohv],4)];
  goto @i_441; // targets annotation is missing
  @i_440:
  @i_@289i_439 = 0;
  @i_441:
  @i_@287i_hv_fill = @i_@289i_439;
  @i_@290i_1 = (bits32[@i_Perl_newHV])();
  @i_@285i_hv = @i_@290i_1;
  goto @i_443; // targets annotation is missing
  @i_442:
  @i_@286i_hv_max = %shrl(@i_@286i_hv_max,1);
  @i_443:
  if (%eq(@i_@286i_hv_max, 0)) { goto @i_445; }
  if (%geu(%add(@i_@286i_hv_max,1), %shl(@i_@287i_hv_fill,1))) { goto @i_442; }
  @i_445:
  bits32[%add(bits32[@i_@285i_hv],8)] = @i_@286i_hv_max;
  if (%ne(@i_@287i_hv_fill, 0)) { goto @i_446; }
  return (@i_@285i_hv);
  goto @i_435; // targets annotation is missing
  @i_446:
  @i_@293i_hv_riter = bits32[%add(bits32[@i_ohv],28)];
  @i_@294i_hv_eiter = bits32[%add(bits32[@i_ohv],32)];
  (bits32[@i_Perl_hv_iterinit])(@i_ohv);
  goto @i_449; // targets annotation is missing
  @i_448:
  @i_@296i_4 = 4;
  @i_@297i_5 = bits32[%add(@i_@292i_entry,@i_@296i_4)];
  @i_@298i_6 = 8;
  bits32[@i_PL_Sv] = bits32[%add(@i_@292i_entry,@i_@298i_6)];
  @i_@299i_7 = bits32[bits32[@i_PL_Sv]];
  if (%eq(%lobits32(@i_@299i_7), 0)) { goto @i_452; }
  @i_@300i_8 = %add(@i_@299i_7,4);
  bits32[@i_@300i_8] = %add(bits32[@i_@300i_8],1);
  @i_452:
  (bits32[@i_Perl_hv_store])(@i_@285i_hv, %add(@i_@297i_5,@i_@298i_6), %lobits32(bits32[%add(@i_@297i_5,@i_@296i_4)]), bits32[bits32[@i_PL_Sv]], bits32[bits32[%add(@i_@292i_entry,4)]]);
  @i_449:
  @i_@301i_9 = (bits32[@i_Perl_hv_iternext])(@i_ohv);
  @i_@292i_entry = @i_@301i_9;
  if (%ne(%lobits32(@i_@301i_9), 0)) { goto @i_448; }
  bits32[%add(bits32[@i_ohv],28)] = @i_@293i_hv_riter;
  bits32[%add(bits32[@i_ohv],32)] = @i_@294i_hv_eiter;
  return (@i_@285i_hv);
  @i_435:
return();
}
export @i_Perl_hv_free_ent as "_Perl_hv_free_ent";
@i_Perl_hv_free_ent(bits32 @i_hv, bits32 @i_entry, ) {
  bits32 @i_@302i_val;
  bits32 @i_@303i_458;
  bits32 @i_@304i_1;
  bits32 @i_@305i_2;
  bits32 @i_@306i_3;
  bits32 @i_@307i_4;
  bits32 @i_@308i_5;
  @i_entry = @i_entry;
  if (%ne(%lobits32(@i_entry), 0)) { goto @i_454; }
  goto @i_453; // targets annotation is missing
  @i_454:
  @i_@302i_val = bits32[%add(@i_entry,8)];
  if (%eq(%lobits32(@i_@302i_val), 0)) { goto @i_456; }
  if (%ne(%and(bits32[%add(@i_@302i_val,8)],255), 13)) { goto @i_456; }
  if (%eq(bits32[%add(bits32[%add(bits32[@i_@302i_val],28)],32)], 0)) { goto @i_459; }
  @i_@303i_458 = 0;
  goto @i_460; // targets annotation is missing
  @i_459:
  @i_@305i_2 = 28;
  @i_@303i_458 = bits32[%add(bits32[%add(bits32[@i_@302i_val],@i_@305i_2)],@i_@305i_2)];
  @i_460:
  @i_@306i_3 = 0;
  if (%eq(%lobits32(@i_@303i_458), @i_@306i_3)) { goto @i_456; }
  if (%eq(%lobits32(bits32[%add(bits32[@i_hv],40)]), @i_@306i_3)) { goto @i_456; }
  @i_@307i_4 = bits32[@i_PL_sub_generation];
  bits32[@i_@307i_4] = %add(bits32[@i_@307i_4],1);
  @i_456:
  (bits32[@i_Perl_sv_free])(@i_@302i_val);
  @i_@308i_5 = 4;
  if (%ne(bits32[%add(bits32[%add(@i_entry,@i_@308i_5)],@i_@308i_5)], -2)) { goto @i_461; }
  (bits32[@i_Perl_sv_free])(bits32[%add(bits32[%add(@i_entry,4)],8)]);
  (bits32[@i_Perl_safefree])(bits32[%add(@i_entry,4)]);
  goto @i_462; // targets annotation is missing
  @i_461:
  if (%eq(%and(bits32[%add(@i_hv,8)],536870912), 0)) { goto @i_463; }
  (bits32[@i_Perl_unshare_hek])(bits32[%add(@i_entry,4)]);
  goto @i_464; // targets annotation is missing
  @i_463:
  (bits32[@i_Perl_safefree])(bits32[%add(@i_entry,4)]);
  @i_464:
  @i_462:
  (bits32[@i_del_he])(@i_entry);
  @i_453:
return();
}
export @i_Perl_hv_delayfree_ent as "_Perl_hv_delayfree_ent";
@i_Perl_hv_delayfree_ent(bits32 @i_hv, bits32 @i_entry, ) {
  bits32 @i_@309i_470;
  bits32 @i_@310i_1;
  bits32 @i_@311i_2;
  bits32 @i_@312i_3;
  bits32 @i_@313i_4;
  bits32 @i_@314i_5;
  bits32 @i_@315i_6;
  @i_entry = @i_entry;
  if (%ne(%lobits32(@i_entry), 0)) { goto @i_466; }
  goto @i_465; // targets annotation is missing
  @i_466:
  @i_@310i_1 = 8;
  @i_@311i_2 = bits32[%add(@i_entry,@i_@310i_1)];
  if (%ne(%and(bits32[%add(@i_@311i_2,@i_@310i_1)],255), 13)) { goto @i_468; }
  if (%eq(bits32[%add(bits32[%add(bits32[@i_@311i_2],28)],32)], 0)) { goto @i_471; }
  @i_@309i_470 = 0;
  goto @i_472; // targets annotation is missing
  @i_471:
  @i_@312i_3 = 28;
  @i_@309i_470 = bits32[%add(bits32[%add(bits32[bits32[%add(@i_entry,8)]],@i_@312i_3)],@i_@312i_3)];
  @i_472:
  @i_@313i_4 = 0;
  if (%eq(%lobits32(@i_@309i_470), @i_@313i_4)) { goto @i_468; }
  if (%eq(%lobits32(bits32[%add(bits32[@i_hv],40)]), @i_@313i_4)) { goto @i_468; }
  @i_@314i_5 = bits32[@i_PL_sub_generation];
  bits32[@i_@314i_5] = %add(bits32[@i_@314i_5],1);
  @i_468:
  (bits32[@i_Perl_sv_2mortal])(bits32[%add(@i_entry,8)]);
  @i_@315i_6 = 4;
  if (%ne(bits32[%add(bits32[%add(@i_entry,@i_@315i_6)],@i_@315i_6)], -2)) { goto @i_473; }
  (bits32[@i_Perl_sv_2mortal])(bits32[%add(bits32[%add(@i_entry,4)],8)]);
  (bits32[@i_Perl_safefree])(bits32[%add(@i_entry,4)]);
  goto @i_474; // targets annotation is missing
  @i_473:
  if (%eq(%and(bits32[%add(@i_hv,8)],536870912), 0)) { goto @i_475; }
  (bits32[@i_Perl_unshare_hek])(bits32[%add(@i_entry,4)]);
  goto @i_476; // targets annotation is missing
  @i_475:
  (bits32[@i_Perl_safefree])(bits32[%add(@i_entry,4)]);
  @i_476:
  @i_474:
  (bits32[@i_del_he])(@i_entry);
  @i_465:
return();
}
export @i_Perl_hv_clear as "_Perl_hv_clear";
@i_Perl_hv_clear(bits32 @i_hv, ) {
  bits32 @i_@316i_xhv;
  bits32 @i_@317i_1;
  bits32 @i_@318i_2;
  if (%ne(%lobits32(@i_hv), 0)) { goto @i_478; }
  goto @i_477; // targets annotation is missing
  @i_478:
  @i_@317i_1 = @i_hv;
  @i_@316i_xhv = bits32[@i_@317i_1];
  (bits32[@i_hfreeentries])(@i_@317i_1);
  bits32[%add(@i_@316i_xhv,4)] = 0;
  bits32[%add(@i_@316i_xhv,12)] = 0;
  if (%eq(%lobits32(bits32[@i_@316i_xhv]), 0)) { goto @i_480; }
  (bits32[@i_memset])(bits32[@i_@316i_xhv], 0, %shl(%add(bits32[%add(@i_@316i_xhv,8)],1),2));
  @i_480:
  if (%eq(%and(bits32[%add(@i_hv,8)],32768), 0)) { goto @i_482; }
  (bits32[@i_Perl_mg_clear])(@i_hv);
  @i_482:
  @i_477:
return();
}
@i_hfreeentries(bits32 @i_hv, ) {
  bits32 @i_@319i_array;
  bits32 @i_@320i_entry;
  bits32 @i_@321i_oentry;
  bits32 @i_@322i_riter;
  bits32 @i_@323i_max;
  bits32 @i_@324i_1;
  bits32 @i_@325i_2;
  bits32 @i_@326i_3;
  @i_@321i_oentry = 0;
  if (%ne(%lobits32(@i_hv), 0)) { goto @i_485; }
  goto @i_484; // targets annotation is missing
  @i_485:
  if (%ne(%lobits32(bits32[bits32[@i_hv]]), 0)) { goto @i_487; }
  goto @i_484; // targets annotation is missing
  @i_487:
  @i_@322i_riter = 0;
  @i_@324i_1 = @i_hv;
  @i_@323i_max = %lobits32(bits32[%add(bits32[@i_@324i_1],8)]);
  @i_@319i_array = bits32[bits32[@i_@324i_1]];
  @i_@320i_entry = bits32[@i_@319i_array];
  @i_489:
  if (%eq(%lobits32(@i_@320i_entry), 0)) { goto @i_493; }
  @i_@321i_oentry = @i_@320i_entry;
  @i_@320i_entry = bits32[@i_@320i_entry];
  (bits32[@i_Perl_hv_free_ent])(@i_hv, @i_@321i_oentry);
  @i_493:
  if (%ne(%lobits32(@i_@320i_entry), 0)) { goto @i_489; }
  @i_@326i_3 = %add(@i_@322i_riter,1);
  @i_@322i_riter = @i_@326i_3;
  if (%le(@i_@326i_3, @i_@323i_max)) { goto @i_497; }
  goto @i_491; // targets annotation is missing
  @i_497:
  @i_@320i_entry = bits32[%add(%shl(@i_@322i_riter,2),@i_@319i_array)];
  goto @i_489; // targets annotation is missing
  @i_491:
  (bits32[@i_Perl_hv_iterinit])(@i_hv);
  @i_484:
return();
}
export @i_Perl_hv_undef as "_Perl_hv_undef";
@i_Perl_hv_undef(bits32 @i_hv, ) {
  bits32 @i_@327i_xhv;
  bits32 @i_@328i_1;
  if (%ne(%lobits32(@i_hv), 0)) { goto @i_500; }
  goto @i_499; // targets annotation is missing
  @i_500:
  @i_@328i_1 = @i_hv;
  @i_@327i_xhv = bits32[@i_@328i_1];
  (bits32[@i_hfreeentries])(@i_@328i_1);
  (bits32[@i_Perl_safefree])(bits32[@i_@327i_xhv]);
  if (%eq(%lobits32(bits32[%add(bits32[@i_hv],40)]), 0)) { goto @i_502; }
  (bits32[@i_Perl_safefree])(bits32[%add(bits32[@i_hv],40)]);
  bits32[%add(bits32[@i_hv],40)] = 0;
  @i_502:
  bits32[@i_@327i_xhv] = 0;
  bits32[%add(@i_@327i_xhv,8)] = 7;
  bits32[%add(@i_@327i_xhv,4)] = 0;
  bits32[%add(@i_@327i_xhv,12)] = 0;
  if (%eq(%and(bits32[%add(@i_hv,8)],32768), 0)) { goto @i_504; }
  (bits32[@i_Perl_mg_clear])(@i_hv);
  @i_504:
  @i_499:
return();
}
export @i_Perl_hv_iterinit as "_Perl_hv_iterinit";
@i_Perl_hv_iterinit(bits32 @i_hv, ) {
  bits32 @i_@329i_xhv;
  bits32 @i_@330i_entry;
  bits32 @i_@331i_1;
  if (%ne(%lobits32(@i_hv), 0)) { goto @i_507; }
  (bits32[@i_Perl_croak])(bits32[@i_509]);
  @i_507:
  @i_@329i_xhv = bits32[@i_hv];
  @i_@330i_entry = bits32[%add(@i_@329i_xhv,32)];
  if (%eq(%lobits32(@i_@330i_entry), 0)) { goto @i_510; }
  if (%eq(%and(bits32[%add(@i_hv,8)],1073741824), 0)) { goto @i_510; }
  @i_@331i_1 = %add(@i_hv,8);
  bits32[@i_@331i_1] = %and(bits32[@i_@331i_1],-1073741825);
  (bits32[@i_Perl_hv_free_ent])(@i_hv, @i_@330i_entry);
  @i_510:
  bits32[%add(@i_@329i_xhv,28)] = -1;
  bits32[%add(@i_@329i_xhv,32)] = 0;
  return (bits32[%add(@i_@329i_xhv,12)]);
  @i_506:
return();
}
export @i_Perl_hv_iternext as "_Perl_hv_iternext";
@i_Perl_hv_iternext(bits32 @i_hv, ) {
  bits32 @i_@332i_xhv;
  bits32 @i_@333i_entry;
  bits32 @i_@334i_oldentry;
  bits32 @i_@335i_mg;
  bits32 @i_@336i_517;
  bits32 @i_@337i_1;
  bits32 @i_@338i_2;
  bits32 @i_@339i_3;
  bits32 @i_@340i_4;
  bits32 @i_@341i_key;
  bits32 @i_@342i_5;
  bits32 @i_@343i_523;
  bits32 @i_@344i_522;
  bits32 @i_@345i_6;
  bits32 @i_@346i_7;
  bits32 @i_@347i_8;
  bits32 @i_@348i_9;
  bits32 @i_@349i_10;
  bits32 @i_@350i_528;
  bits32 @i_@351i_11;
  bits32 @i_@352i_12;
  bits32 @i_@353i_k;
  bits32 @i_@354i_hek;
  bits32 @i_@355i_13;
  bits32 @i_@356i_14;
  bits32 @i_@357i_15;
  bits32 @i_@358i_16;
  bits32 @i_@359i_17;
  bits32 @i_@360i_18;
  bits32 @i_@361i_19;
  bits32 @i_@362i_20;
  bits32 @i_@363i_21;
  bits32 @i_@364i_22;
  bits32 @i_@365i_23;
  bits32 @i_@366i_24;
  bits32 @i_@367i_25;
  if (%ne(%lobits32(@i_hv), 0)) { goto @i_513; }
  (bits32[@i_Perl_croak])(bits32[@i_509]);
  @i_513:
  @i_@337i_1 = @i_hv;
  @i_@332i_xhv = bits32[@i_@337i_1];
  @i_@338i_2 = bits32[%add(@i_@332i_xhv,32)];
  @i_@333i_entry = @i_@338i_2;
  @i_@334i_oldentry = @i_@338i_2;
  if (%eq(%and(bits32[%add(@i_@337i_1,8)],32768), 0)) { goto @i_518; }
  @i_@339i_3 = (bits32[@i_Perl_mg_find])(@i_hv, 80);
  @i_@336i_517 = @i_@339i_3;
  goto @i_519; // targets annotation is missing
  @i_518:
  @i_@336i_517 = 0;
  @i_519:
  @i_@335i_mg = @i_@336i_517;
  if (%eq(%lobits32(@i_@336i_517), 0)) { goto @i_515; }
  @i_@342i_5 = (bits32[@i_Perl_sv_newmortal])();
  @i_@341i_key = @i_@342i_5;
  if (%eq(%lobits32(@i_@333i_entry), 0)) { goto @i_520; }
  if (%eq(%lobits32(%add(bits32[%add(@i_@333i_entry,4)],8)), 0)) { goto @i_524; }
  @i_@345i_6 = 4;
  if (%ne(bits32[%add(bits32[%add(@i_@333i_entry,@i_@345i_6)],@i_@345i_6)], -2)) { goto @i_526; }
  @i_@344i_522 = bits32[%add(bits32[%add(@i_@333i_entry,4)],8)];
  goto @i_527; // targets annotation is missing
  @i_526:
  @i_@346i_7 = 4;
  @i_@347i_8 = bits32[%add(@i_@333i_entry,@i_@346i_7)];
  @i_@348i_9 = (bits32[@i_Perl_newSVpv])(%add(@i_@347i_8,8), %lobits32(bits32[%add(@i_@347i_8,@i_@346i_7)]));
  @i_@349i_10 = (bits32[@i_Perl_sv_2mortal])(@i_@348i_9);
  @i_@344i_522 = @i_@349i_10;
  @i_527:
  @i_@343i_523 = @i_@344i_522;
  goto @i_525; // targets annotation is missing
  @i_524:
  @i_@343i_523 = bits32[@i_PL_sv_undef];
  @i_525:
  (bits32[@i_Perl_sv_setsv])(@i_@341i_key, @i_@343i_523);
  @i_@351i_11 = 4;
  @i_@352i_12 = bits32[%add(@i_@333i_entry,@i_@351i_11)];
  if (%eq(%lobits32(%add(@i_@352i_12,8)), 0)) { goto @i_529; }
  if (%ne(bits32[%add(@i_@352i_12,@i_@351i_11)], -2)) { goto @i_529; }
  @i_@350i_528 = bits32[%add(bits32[%add(@i_@333i_entry,4)],8)];
  goto @i_530; // targets annotation is missing
  @i_529:
  @i_@350i_528 = 0;
  @i_530:
  (bits32[@i_Perl_sv_free])(@i_@350i_528);
  goto @i_521; // targets annotation is missing
  @i_520:
  @i_@355i_13 = (bits32[@i_new_he])();
  @i_@333i_entry = @i_@355i_13;
  bits32[%add(@i_@332i_xhv,32)] = @i_@355i_13;
  (bits32[@i_memset])(@i_@333i_entry, 0, 12);
  @i_@356i_14 = (bits32[@i_Perl_safemalloc])(12);
  @i_@353i_k = @i_@356i_14;
  (bits32[@i_memset])(@i_@353i_k, 0, 12);
  @i_@354i_hek = @i_@353i_k;
  bits32[%add(@i_@333i_entry,4)] = @i_@354i_hek;
  @i_@357i_15 = 4;
  bits32[%add(bits32[%add(@i_@333i_entry,@i_@357i_15)],@i_@357i_15)] = -2;
  @i_521:
  (bits32[@i_Perl_magic_nextpack])(@i_hv, @i_@335i_mg, @i_@341i_key);
  if (%eq(%and(bits32[%add(@i_@341i_key,8)],118423552), 0)) { goto @i_531; }
  @i_@358i_16 = 4;
  bits32[%add(bits32[%add(@i_@333i_entry,@i_@358i_16)],@i_@358i_16)] = -2;
  bits32[@i_PL_Sv] = @i_@341i_key;
  @i_@359i_17 = bits32[bits32[@i_PL_Sv]];
  if (%eq(%lobits32(@i_@359i_17), 0)) { goto @i_534; }
  @i_@360i_18 = %add(@i_@359i_17,4);
  bits32[@i_@360i_18] = %add(bits32[@i_@360i_18],1);
  @i_534:
  bits32[%add(bits32[%add(@i_@333i_entry,4)],8)] = bits32[bits32[@i_PL_Sv]];
  return (@i_@333i_entry);
  goto @i_512; // targets annotation is missing
  @i_531:
  if (%eq(%lobits32(bits32[%add(@i_@333i_entry,8)]), 0)) { goto @i_535; }
  (bits32[@i_Perl_sv_free])(bits32[%add(@i_@333i_entry,8)]);
  @i_535:
  (bits32[@i_Perl_safefree])(bits32[%add(@i_@333i_entry,4)]);
  (bits32[@i_del_he])(@i_@333i_entry);
  bits32[%add(@i_@332i_xhv,32)] = 0;
  return (0);
  goto @i_512; // targets annotation is missing
  @i_515:
  if (%ne(%lobits32(bits32[@i_@332i_xhv]), 0)) { goto @i_537; }
  @i_@362i_20 = (bits32[@i_Perl_safemalloc])(%mul(1,%sub(%shl(%shl(%add(bits32[%add(@i_@332i_xhv,8)],1),2),1),16)));
  bits32[@i_@332i_xhv] = @i_@362i_20;
  (bits32[@i_memset])(bits32[@i_@332i_xhv], 0, %mul(1,%sub(%shl(%shl(%add(bits32[%add(@i_@332i_xhv,8)],1),2),1),16)));
  @i_537:
  if (%eq(%lobits32(@i_@333i_entry), 0)) { goto @i_542; }
  @i_@333i_entry = bits32[@i_@333i_entry];
  goto @i_542; // targets annotation is missing
  @i_541:
  @i_@364i_22 = %add(@i_@332i_xhv,28);
  bits32[@i_@364i_22] = %add(bits32[@i_@364i_22],1);
  if (%leu(%lobits32(bits32[%add(@i_@332i_xhv,28)]), bits32[%add(@i_@332i_xhv,8)])) { goto @i_544; }
  bits32[%add(@i_@332i_xhv,28)] = -1;
  goto @i_543; // targets annotation is missing
  @i_544:
  @i_@333i_entry = bits32[%add(%shl(bits32[%add(@i_@332i_xhv,28)],2),bits32[@i_@332i_xhv])];
  @i_542:
  if (%eq(%lobits32(@i_@333i_entry), 0)) { goto @i_541; }
  @i_543:
  if (%eq(%lobits32(@i_@334i_oldentry), 0)) { goto @i_546; }
  if (%eq(%and(bits32[%add(@i_hv,8)],1073741824), 0)) { goto @i_546; }
  @i_@367i_25 = %add(@i_hv,8);
  bits32[@i_@367i_25] = %and(bits32[@i_@367i_25],-1073741825);
  (bits32[@i_Perl_hv_free_ent])(@i_hv, @i_@334i_oldentry);
  @i_546:
  bits32[%add(@i_@332i_xhv,32)] = @i_@333i_entry;
  return (@i_@333i_entry);
  @i_512:
return();
}
export @i_Perl_hv_iterkey as "_Perl_hv_iterkey";
@i_Perl_hv_iterkey(bits32 @i_entry, bits32 @i_retlen, ) {
  bits32 @i_@368i_1;
  stackdata {
    align 4;
    @i_@369i_len: bits32;
  }
  bits32 @i_@370i_p;
  bits32 @i_@371i_551;
  bits32 @i_@372i_2;
  bits32 @i_@373i_3;
  bits32 @i_@374i_4;
  bits32 @i_@375i_5;
  bits32 @i_@376i_6;
  bits32 @i_@377i_7;
  @i_entry = @i_entry;
  @i_@368i_1 = 4;
  if (%ne(bits32[%add(bits32[%add(@i_entry,@i_@368i_1)],@i_@368i_1)], -2)) { goto @i_549; }
  @i_@372i_2 = 8;
  if (%eq(%and(bits32[%add(bits32[%add(bits32[%add(@i_entry,4)],@i_@372i_2)],@i_@372i_2)],262144), 0)) { goto @i_552; }
  @i_@373i_3 = 4;
  @i_@374i_4 = %add(@i_entry,@i_@373i_3);
  @i_@375i_5 = 8;
  bits32[@i_@369i_len] = bits32[%add(bits32[bits32[%add(bits32[@i_@374i_4],@i_@375i_5)]],@i_@373i_3)];
  @i_@371i_551 = bits32[bits32[bits32[%add(bits32[@i_@374i_4],@i_@375i_5)]]];
  goto @i_553; // targets annotation is missing
  @i_552:
  @i_@376i_6 = (bits32[@i_Perl_sv_2pv])(bits32[%add(bits32[%add(@i_entry,4)],8)], bits32[@i_@369i_len]);
  @i_@371i_551 = @i_@376i_6;
  @i_553:
  @i_@370i_p = @i_@371i_551;
  bits32[@i_retlen] = %lobits32(bits32[bits32[@i_@369i_len]]);
  return (@i_@370i_p);
  goto @i_548; // targets annotation is missing
  @i_549:
  @i_@377i_7 = 4;
  bits32[@i_retlen] = bits32[%add(bits32[%add(@i_entry,@i_@377i_7)],@i_@377i_7)];
  return (%add(bits32[%add(@i_entry,4)],8));
  @i_548:
return();
}
export @i_Perl_hv_iterkeysv as "_Perl_hv_iterkeysv";
@i_Perl_hv_iterkeysv(bits32 @i_entry, ) {
  bits32 @i_@378i_1;
  bits32 @i_@379i_2;
  bits32 @i_@380i_558;
  bits32 @i_@381i_3;
  bits32 @i_@382i_4;
  bits32 @i_@383i_5;
  bits32 @i_@384i_6;
  @i_entry = @i_entry;
  @i_@378i_1 = 4;
  if (%ne(bits32[%add(bits32[%add(@i_entry,@i_@378i_1)],@i_@378i_1)], -2)) { goto @i_555; }
  @i_@379i_2 = (bits32[@i_Perl_sv_mortalcopy])(bits32[%add(bits32[%add(@i_entry,4)],8)]);
  return (@i_@379i_2);
  goto @i_554; // targets annotation is missing
  @i_555:
  @i_@381i_3 = 4;
  if (%eq(bits32[%add(bits32[%add(@i_entry,@i_@381i_3)],@i_@381i_3)], 0)) { goto @i_559; }
  @i_@380i_558 = %add(bits32[%add(@i_entry,4)],8);
  goto @i_560; // targets annotation is missing
  @i_559:
  @i_@380i_558 = bits32[@i_557];
  @i_560:
  @i_@382i_4 = 4;
  @i_@383i_5 = (bits32[@i_Perl_newSVpv])(@i_@380i_558, %lobits32(bits32[%add(bits32[%add(@i_entry,@i_@382i_4)],@i_@382i_4)]));
  @i_@384i_6 = (bits32[@i_Perl_sv_2mortal])(@i_@383i_5);
  return (@i_@384i_6);
  @i_554:
return();
}
export @i_Perl_hv_iterval as "_Perl_hv_iterval";
@i_Perl_hv_iterval(bits32 @i_hv, bits32 @i_entry, ) {
  bits32 @i_@385i_1;
  bits32 @i_@386i_sv;
  bits32 @i_@387i_2;
  bits32 @i_@388i_3;
  bits32 @i_@389i_4;
  bits32 @i_@390i_5;
  @i_entry = @i_entry;
  if (%eq(%and(bits32[%add(@i_hv,8)],32768), 0)) { goto @i_562; }
  @i_@385i_1 = (bits32[@i_Perl_mg_find])(@i_hv, 80);
  if (%eq(%lobits32(@i_@385i_1), 0)) { goto @i_564; }
  @i_@387i_2 = (bits32[@i_Perl_sv_newmortal])();
  @i_@386i_sv = @i_@387i_2;
  @i_@388i_3 = 4;
  if (%ne(bits32[%add(bits32[%add(@i_entry,@i_@388i_3)],@i_@388i_3)], -2)) { goto @i_566; }
  (bits32[@i_Perl_mg_copy])(@i_hv, @i_@386i_sv, bits32[%add(bits32[%add(@i_entry,4)],8)], -2);
  goto @i_567; // targets annotation is missing
  @i_566:
  @i_@389i_4 = 4;
  @i_@390i_5 = bits32[%add(@i_entry,@i_@389i_4)];
  (bits32[@i_Perl_mg_copy])(@i_hv, @i_@386i_sv, %add(@i_@390i_5,8), bits32[%add(@i_@390i_5,@i_@389i_4)]);
  @i_567:
  return (@i_@386i_sv);
  goto @i_561; // targets annotation is missing
  @i_564:
  @i_562:
  return (bits32[%add(@i_entry,8)]);
  @i_561:
return();
}
export @i_Perl_hv_iternextsv as "_Perl_hv_iternextsv";
@i_Perl_hv_iternextsv(bits32 @i_hv, bits32 @i_key, bits32 @i_retlen, ) {
  bits32 @i_@391i_he;
  bits32 @i_@392i_1;
  bits32 @i_@393i_2;
  bits32 @i_@394i_3;
  @i_@392i_1 = (bits32[@i_Perl_hv_iternext])(@i_hv);
  @i_@391i_he = @i_@392i_1;
  if (%ne(%lobits32(@i_@392i_1), 0)) { goto @i_569; }
  return (0);
  goto @i_568; // targets annotation is missing
  @i_569:
  @i_@393i_2 = (bits32[@i_Perl_hv_iterkey])(@i_@391i_he, @i_retlen);
  bits32[@i_key] = @i_@393i_2;
  @i_@394i_3 = (bits32[@i_Perl_hv_iterval])(@i_hv, @i_@391i_he);
  return (@i_@394i_3);
  @i_568:
return();
}
export @i_Perl_hv_magic as "_Perl_hv_magic";
@i_Perl_hv_magic(bits32 @i_hv, bits32 @i_gv, bits32 @i_how, ) {
  (bits32[@i_Perl_sv_magic])(@i_hv, @i_gv, @i_how, 0, 0);
  @i_571:
return();
}
export @i_Perl_sharepvn as "_Perl_sharepvn";
@i_Perl_sharepvn(bits32 @i_sv, bits32 @i_len, bits32 @i_hash, ) {
  bits32 @i_@395i_1;
  @i_@395i_1 = (bits32[@i_Perl_share_hek])(@i_sv, @i_len, @i_hash);
  return (%add(@i_@395i_1,8));
  @i_572:
return();
}
export @i_Perl_unsharepvn as "_Perl_unsharepvn";
@i_Perl_unsharepvn(bits32 @i_str, bits32 @i_len, bits32 @i_hash, ) {
  bits32 @i_@396i_xhv;
  bits32 @i_@397i_entry;
  bits32 @i_@398i_oentry;
  bits32 @i_@399i_i;
  bits32 @i_@400i_found;
  bits32 @i_@401i_1;
  bits32 @i_@402i_2;
  bits32 @i_@403i_3;
  bits32 @i_@404i_4;
  bits32 @i_@405i_5;
  bits32 @i_@406i_6;
  bits32 @i_@407i_7;
  @i_@399i_i = 1;
  @i_@400i_found = 0;
  @i_@396i_xhv = bits32[bits32[bits32[@i_PL_strtab]]];
  @i_@398i_oentry = %add(%shl(%and(@i_hash,%lobits32(%lobits32(bits32[%add(@i_@396i_xhv,8)]))),2),bits32[@i_@396i_xhv]);
  @i_@397i_entry = bits32[@i_@398i_oentry];
  goto @i_577; // targets annotation is missing
  @i_574:
  if (%eq(bits32[bits32[%add(@i_@397i_entry,4)]], @i_hash)) { goto @i_578; }
  goto @i_575; // targets annotation is missing
  @i_578:
  @i_@402i_2 = 4;
  if (%eq(bits32[%add(bits32[%add(@i_@397i_entry,@i_@402i_2)],@i_@402i_2)], @i_len)) { goto @i_580; }
  goto @i_575; // targets annotation is missing
  @i_580:
  @i_@403i_3 = (bits32[@i_Perl_my_memcmp])(%add(bits32[%add(@i_@397i_entry,4)],8), @i_str, @i_len);
  if (%eq(@i_@403i_3, 0)) { goto @i_582; }
  goto @i_575; // targets annotation is missing
  @i_582:
  @i_@400i_found = 1;
  @i_@404i_4 = %add(@i_@397i_entry,8);
  @i_@405i_5 = %add(bits32[@i_@404i_4],-12);
  bits32[@i_@404i_4] = @i_@405i_5;
  if (%ne(%lobits32(@i_@405i_5), 0)) { goto @i_576; }
  bits32[@i_@398i_oentry] = bits32[@i_@397i_entry];
  if (%eq(@i_@399i_i, 0)) { goto @i_586; }
  if (%ne(%lobits32(bits32[@i_@398i_oentry]), 0)) { goto @i_586; }
  @i_@406i_6 = %add(@i_@396i_xhv,4);
  bits32[@i_@406i_6] = %sub(bits32[@i_@406i_6],1);
  @i_586:
  (bits32[@i_Perl_safefree])(bits32[%add(@i_@397i_entry,4)]);
  (bits32[@i_del_he])(@i_@397i_entry);
  @i_@407i_7 = %add(@i_@396i_xhv,12);
  bits32[@i_@407i_7] = %sub(bits32[@i_@407i_7],1);
  goto @i_576; // targets annotation is missing
  @i_575:
  @i_@399i_i = 0;
  @i_@398i_oentry = @i_@397i_entry;
  @i_@397i_entry = bits32[@i_@398i_oentry];
  @i_577:
  if (%ne(%lobits32(@i_@397i_entry), 0)) { goto @i_574; }
  @i_576:
  if (%ne(@i_@400i_found, 0)) { goto @i_588; }
  (bits32[@i_Perl_warn])(bits32[@i_590]);
  @i_588:
  @i_573:
return();
}
export @i_Perl_share_hek as "_Perl_share_hek";
@i_Perl_share_hek(bits32 @i_str, bits32 @i_len, bits32 @i_hash, ) {
  bits32 @i_@408i_xhv;
  bits32 @i_@409i_entry;
  bits32 @i_@410i_oentry;
  bits32 @i_@411i_i;
  bits32 @i_@412i_found;
  bits32 @i_@413i_1;
  bits32 @i_@414i_2;
  bits32 @i_@415i_3;
  bits32 @i_@416i_4;
  bits32 @i_@417i_5;
  bits32 @i_@418i_6;
  bits32 @i_@419i_7;
  bits32 @i_@420i_8;
  bits32 @i_@421i_9;
  @i_hash = @i_hash;
  @i_@411i_i = 1;
  @i_@412i_found = 0;
  @i_@408i_xhv = bits32[bits32[bits32[@i_PL_strtab]]];
  @i_@410i_oentry = %add(%shl(%and(@i_hash,%lobits32(%lobits32(bits32[%add(@i_@408i_xhv,8)]))),2),bits32[@i_@408i_xhv]);
  @i_@409i_entry = bits32[@i_@410i_oentry];
  goto @i_595; // targets annotation is missing
  @i_592:
  if (%eq(bits32[bits32[%add(@i_@409i_entry,4)]], @i_hash)) { goto @i_596; }
  goto @i_593; // targets annotation is missing
  @i_596:
  @i_@414i_2 = 4;
  if (%eq(bits32[%add(bits32[%add(@i_@409i_entry,@i_@414i_2)],@i_@414i_2)], @i_len)) { goto @i_598; }
  goto @i_593; // targets annotation is missing
  @i_598:
  @i_@415i_3 = (bits32[@i_Perl_my_memcmp])(%add(bits32[%add(@i_@409i_entry,4)],8), @i_str, @i_len);
  if (%eq(@i_@415i_3, 0)) { goto @i_600; }
  goto @i_593; // targets annotation is missing
  @i_600:
  @i_@412i_found = 1;
  goto @i_594; // targets annotation is missing
  @i_593:
  @i_@411i_i = 0;
  @i_@409i_entry = bits32[@i_@409i_entry];
  @i_595:
  if (%ne(%lobits32(@i_@409i_entry), 0)) { goto @i_592; }
  @i_594:
  if (%ne(@i_@412i_found, 0)) { goto @i_602; }
  @i_@416i_4 = (bits32[@i_new_he])();
  @i_@409i_entry = @i_@416i_4;
  @i_@417i_5 = (bits32[@i_save_hek])(@i_str, @i_len, @i_hash);
  bits32[%add(@i_@409i_entry,4)] = @i_@417i_5;
  bits32[%add(@i_@409i_entry,8)] = 0;
  bits32[@i_@409i_entry] = bits32[@i_@410i_oentry];
  bits32[@i_@410i_oentry] = @i_@409i_entry;
  @i_@418i_6 = %add(@i_@408i_xhv,12);
  bits32[@i_@418i_6] = %add(bits32[@i_@418i_6],1);
  if (%eq(@i_@411i_i, 0)) { goto @i_604; }
  @i_@419i_7 = %add(@i_@408i_xhv,4);
  bits32[@i_@419i_7] = %add(bits32[@i_@419i_7],1);
  if (%leu(%lobits32(bits32[%add(@i_@408i_xhv,12)]), bits32[%add(@i_@408i_xhv,8)])) { goto @i_606; }
  (bits32[@i_hsplit])(bits32[bits32[@i_PL_strtab]]);
  @i_606:
  @i_604:
  @i_602:
  @i_@421i_9 = %add(@i_@409i_entry,8);
  bits32[@i_@421i_9] = %add(bits32[@i_@421i_9],12);
  return (bits32[%add(@i_@409i_entry,4)]);
  @i_591:
return();
}
import bits32 "_Perl_AMG_names" as @i_Perl_AMG_names;
import bits32 "_Perl_vtbl_amagicelem" as @i_Perl_vtbl_amagicelem;
import bits32 "_Perl_vtbl_amagic" as @i_Perl_vtbl_amagic;
import bits32 "_Perl_vtbl_regexp" as @i_Perl_vtbl_regexp;
import bits32 "_Perl_vtbl_defelem" as @i_Perl_vtbl_defelem;
import bits32 "_Perl_vtbl_uvar" as @i_Perl_vtbl_uvar;
import bits32 "_Perl_vtbl_fm" as @i_Perl_vtbl_fm;
import bits32 "_Perl_vtbl_bm" as @i_Perl_vtbl_bm;
import bits32 "_Perl_vtbl_pos" as @i_Perl_vtbl_pos;
import bits32 "_Perl_vtbl_vec" as @i_Perl_vtbl_vec;
import bits32 "_Perl_vtbl_substr" as @i_Perl_vtbl_substr;
import bits32 "_Perl_vtbl_taint" as @i_Perl_vtbl_taint;
import bits32 "_Perl_vtbl_nkeys" as @i_Perl_vtbl_nkeys;
import bits32 "_Perl_vtbl_mglob" as @i_Perl_vtbl_mglob;
import bits32 "_Perl_vtbl_glob" as @i_Perl_vtbl_glob;
import bits32 "_Perl_vtbl_arylen" as @i_Perl_vtbl_arylen;
import bits32 "_Perl_vtbl_isaelem" as @i_Perl_vtbl_isaelem;
import bits32 "_Perl_vtbl_isa" as @i_Perl_vtbl_isa;
import bits32 "_Perl_vtbl_dbline" as @i_Perl_vtbl_dbline;
import bits32 "_Perl_vtbl_packelem" as @i_Perl_vtbl_packelem;
import bits32 "_Perl_vtbl_pack" as @i_Perl_vtbl_pack;
import bits32 "_Perl_vtbl_sigelem" as @i_Perl_vtbl_sigelem;
import bits32 "_Perl_vtbl_sig" as @i_Perl_vtbl_sig;
import bits32 "_Perl_vtbl_envelem" as @i_Perl_vtbl_envelem;
import bits32 "_Perl_vtbl_env" as @i_Perl_vtbl_env;
import bits32 "_Perl_vtbl_sv" as @i_Perl_vtbl_sv;
import bits32 "_PL_reginterp_cnt" as @i_PL_reginterp_cnt;
import bits32 "_PL_regexecp" as @i_PL_regexecp;
import bits32 "_PL_regcompp" as @i_PL_regcompp;
import bits32 "_PL_regcc" as @i_PL_regcc;
import bits32 "_PL_regindent" as @i_PL_regindent;
import bits32 "_PL_regprogram" as @i_PL_regprogram;
import bits32 "_PL_regnarrate" as @i_PL_regnarrate;
import bits32 "_PL_reg_eval_set" as @i_PL_reg_eval_set;
import bits32 "_PL_reg_flags" as @i_PL_reg_flags;
import bits32 "_PL_bostr" as @i_PL_bostr;
import bits32 "_PL_regdata" as @i_PL_regdata;
import bits32 "_PL_reg_start_tmpl" as @i_PL_reg_start_tmpl;
import bits32 "_PL_reg_start_tmp" as @i_PL_reg_start_tmp;
import bits32 "_PL_regprev" as @i_PL_regprev;
import bits32 "_PL_regtill" as @i_PL_regtill;
import bits32 "_PL_reglastparen" as @i_PL_reglastparen;
import bits32 "_PL_regendp" as @i_PL_regendp;
import bits32 "_PL_regstartp" as @i_PL_regstartp;
import bits32 "_PL_regeol" as @i_PL_regeol;
import bits32 "_PL_regbol" as @i_PL_regbol;
import bits32 "_PL_reginput" as @i_PL_reginput;
import bits32 "_PL_colors" as @i_PL_colors;
import bits32 "_PL_colorset" as @i_PL_colorset;
import bits32 "_PL_extralen" as @i_PL_extralen;
import bits32 "_PL_regcomp_rx" as @i_PL_regcomp_rx;
import bits32 "_PL_seen_evals" as @i_PL_seen_evals;
import bits32 "_PL_seen_zerolen" as @i_PL_seen_zerolen;
import bits32 "_PL_regseen" as @i_PL_regseen;
import bits32 "_PL_regflags" as @i_PL_regflags;
import bits32 "_PL_regsize" as @i_PL_regsize;
import bits32 "_PL_regnpar" as @i_PL_regnpar;
import bits32 "_PL_regprecomp" as @i_PL_regprecomp;
import bits32 "_PL_regsawback" as @i_PL_regsawback;
import bits32 "_PL_regnaughty" as @i_PL_regnaughty;
import bits32 "_PL_regcode" as @i_PL_regcode;
import bits32 "_PL_regxend" as @i_PL_regxend;
import bits32 "_PL_regcomp_parse" as @i_PL_regcomp_parse;
import bits32 "_PL_regdummy" as @i_PL_regdummy;
import bits32 "_PL_lastscream" as @i_PL_lastscream;
import bits32 "_PL_maxscream" as @i_PL_maxscream;
import bits32 "_PL_screamnext" as @i_PL_screamnext;
import bits32 "_PL_screamfirst" as @i_PL_screamfirst;
import bits32 "_PL_sortcxix" as @i_PL_sortcxix;
import bits32 "_PL_secondgv" as @i_PL_secondgv;
import bits32 "_PL_firstgv" as @i_PL_firstgv;
import bits32 "_PL_sortstash" as @i_PL_sortstash;
import bits32 "_PL_sortcop" as @i_PL_sortcop;
import bits32 "_PL_lastgotoprobe" as @i_PL_lastgotoprobe;
import bits32 "_PL_modcount" as @i_PL_modcount;
import bits32 "_PL_hv_fetch_ent_mh" as @i_PL_hv_fetch_ent_mh;
import bits32 "_PL_hv_fetch_sv" as @i_PL_hv_fetch_sv;
import bits32 "_PL_av_fetch_sv" as @i_PL_av_fetch_sv;
import bits32 "_PL_start_env" as @i_PL_start_env;
import bits32 "_PL_top_env" as @i_PL_top_env;
import bits32 "_PL_mainstack" as @i_PL_mainstack;
import bits32 "_PL_curstackinfo" as @i_PL_curstackinfo;
import bits32 "_PL_curstack" as @i_PL_curstack;
import bits32 "_PL_localizing" as @i_PL_localizing;
import bits32 "_PL_dirty" as @i_PL_dirty;
import bits32 "_PL_delaymagic" as @i_PL_delaymagic;
import bits32 "_PL_in_eval" as @i_PL_in_eval;
import bits32 "_PL_curcop" as @i_PL_curcop;
import bits32 "_PL_restartop" as @i_PL_restartop;
import bits32 "_PL_curstash" as @i_PL_curstash;
import bits32 "_PL_defstash" as @i_PL_defstash;
import bits32 "_PL_toptarget" as @i_PL_toptarget;
import bits32 "_PL_bodytarget" as @i_PL_bodytarget;
import bits32 "_PL_formtarget" as @i_PL_formtarget;
import bits32 "_PL_chopset" as @i_PL_chopset;
import bits32 "_PL_defoutgv" as @i_PL_defoutgv;
import bits32 "_PL_ofslen" as @i_PL_ofslen;
import bits32 "_PL_ofs" as @i_PL_ofs;
import bits32 "_PL_last_in_gv" as @i_PL_last_in_gv;
import bits32 "_PL_rs" as @i_PL_rs;
import bits32 "_PL_nrs" as @i_PL_nrs;
import bits32 "_PL_curpm" as @i_PL_curpm;
import bits32 "_PL_tainted" as @i_PL_tainted;
import bits32 "_PL_timesbuf" as @i_PL_timesbuf;
import bits32 "_PL_statname" as @i_PL_statname;
import bits32 "_PL_statgv" as @i_PL_statgv;
import bits32 "_PL_statcache" as @i_PL_statcache;
import bits32 "_PL_statbuf" as @i_PL_statbuf;
import bits32 "_PL_Xpv" as @i_PL_Xpv;
import bits32 "_PL_Sv" as @i_PL_Sv;
import bits32 "_PL_retstack_max" as @i_PL_retstack_max;
import bits32 "_PL_retstack_ix" as @i_PL_retstack_ix;
import bits32 "_PL_retstack" as @i_PL_retstack;
import bits32 "_PL_markstack_max" as @i_PL_markstack_max;
import bits32 "_PL_markstack_ptr" as @i_PL_markstack_ptr;
import bits32 "_PL_markstack" as @i_PL_markstack;
import bits32 "_PL_tmps_max" as @i_PL_tmps_max;
import bits32 "_PL_tmps_floor" as @i_PL_tmps_floor;
import bits32 "_PL_tmps_ix" as @i_PL_tmps_ix;
import bits32 "_PL_tmps_stack" as @i_PL_tmps_stack;
import bits32 "_PL_savestack_max" as @i_PL_savestack_max;
import bits32 "_PL_savestack_ix" as @i_PL_savestack_ix;
import bits32 "_PL_savestack" as @i_PL_savestack;
import bits32 "_PL_scopestack_max" as @i_PL_scopestack_max;
import bits32 "_PL_scopestack_ix" as @i_PL_scopestack_ix;
import bits32 "_PL_scopestack" as @i_PL_scopestack;
import bits32 "_PL_stack_max" as @i_PL_stack_max;
import bits32 "_PL_stack_base" as @i_PL_stack_base;
import bits32 "_PL_curpad" as @i_PL_curpad;
import bits32 "_PL_op" as @i_PL_op;
import bits32 "_PL_stack_sp" as @i_PL_stack_sp;
import bits32 "_PL_bytecode_obj_list_fill" as @i_PL_bytecode_obj_list_fill;
import bits32 "_PL_bytecode_obj_list" as @i_PL_bytecode_obj_list;
import bits32 "_PL_bytecode_pv" as @i_PL_bytecode_pv;
import bits32 "_PL_bytecode_sv" as @i_PL_bytecode_sv;
import bits32 "_PL_bytecode_iv_overflows" as @i_PL_bytecode_iv_overflows;
import bits32 "_PL_sublex_info" as @i_PL_sublex_info;
import bits32 "_PL_pending_ident" as @i_PL_pending_ident;
import bits32 "_PL_linestart" as @i_PL_linestart;
import bits32 "_PL_in_clean_all" as @i_PL_in_clean_all;
import bits32 "_PL_in_clean_objs" as @i_PL_in_clean_objs;
import bits32 "_PL_archpat_auto" as @i_PL_archpat_auto;
import bits32 "_PL_DBcv" as @i_PL_DBcv;
import bits32 "_PL_generation" as @i_PL_generation;
import bits32 "_PL_comppad_name_floor" as @i_PL_comppad_name_floor;
import bits32 "_PL_comppad_name_fill" as @i_PL_comppad_name_fill;
import bits32 "_PL_comppad_name" as @i_PL_comppad_name;
import bits32 "_PL_comppad" as @i_PL_comppad;
import bits32 "_PL_compcv" as @i_PL_compcv;
import bits32 "_PL_compiling" as @i_PL_compiling;
import bits32 "_PL_rsfp_filters" as @i_PL_rsfp_filters;
import bits32 "_PL_rsfp" as @i_PL_rsfp;
import bits32 "_PL_profiledata" as @i_PL_profiledata;
import bits32 "_PL_modglobal" as @i_PL_modglobal;
import bits32 "_PL_exitlistlen" as @i_PL_exitlistlen;
import bits32 "_PL_exitlist" as @i_PL_exitlist;
import bits32 "_PL_ofmt" as @i_PL_ofmt;
import bits32 "_PL_orslen" as @i_PL_orslen;
import bits32 "_PL_ors" as @i_PL_ors;
import bits32 "_PL_mess_sv" as @i_PL_mess_sv;
import bits32 "_PL_laststype" as @i_PL_laststype;
import bits32 "_PL_laststatval" as @i_PL_laststatval;
import bits32 "_PL_preambleav" as @i_PL_preambleav;
import bits32 "_PL_preambled" as @i_PL_preambled;
import bits32 "_PL_gensym" as @i_PL_gensym;
import bits32 "_PL_oldlastpm" as @i_PL_oldlastpm;
import bits32 "_PL_dumplvl" as @i_PL_dumplvl;
import bits32 "_PL_mystrk" as @i_PL_mystrk;
import bits32 "_PL_Cmd" as @i_PL_Cmd;
import bits32 "_PL_Argv" as @i_PL_Argv;
import bits32 "_PL_oldname" as @i_PL_oldname;
import bits32 "_PL_lastfd" as @i_PL_lastfd;
import bits32 "_PL_filemode" as @i_PL_filemode;
import bits32 "_PL_strchop" as @i_PL_strchop;
import bits32 "_PL_copline" as @i_PL_copline;
import bits32 "_PL_curcopdb" as @i_PL_curcopdb;
import bits32 "_PL_eval_start" as @i_PL_eval_start;
import bits32 "_PL_eval_root" as @i_PL_eval_root;
import bits32 "_PL_main_start" as @i_PL_main_start;
import bits32 "_PL_main_root" as @i_PL_main_root;
import bits32 "_PL_main_cv" as @i_PL_main_cv;
import bits32 "_PL_debdelim" as @i_PL_debdelim;
import bits32 "_PL_debname" as @i_PL_debname;
import bits32 "_PL_dlmax" as @i_PL_dlmax;
import bits32 "_PL_dlevel" as @i_PL_dlevel;
import bits32 "_PL_last_proto" as @i_PL_last_proto;
import bits32 "_PL_op_mask" as @i_PL_op_mask;
import bits32 "_PL_tainting" as @i_PL_tainting;
import bits32 "_PL_fdpid" as @i_PL_fdpid;
import bits32 "_PL_forkprocess" as @i_PL_forkprocess;
import bits32 "_PL_lastsize" as @i_PL_lastsize;
import bits32 "_PL_lastspbase" as @i_PL_lastspbase;
import bits32 "_PL_sv_arenaroot" as @i_PL_sv_arenaroot;
import bits32 "_PL_sv_root" as @i_PL_sv_root;
import bits32 "_PL_sv_objcount" as @i_PL_sv_objcount;
import bits32 "_PL_sv_count" as @i_PL_sv_count;
import bits32 "_PL_sub_generation" as @i_PL_sub_generation;
import bits32 "_PL_strtab" as @i_PL_strtab;
import bits32 "_PL_initav" as @i_PL_initav;
import bits32 "_PL_endav" as @i_PL_endav;
import bits32 "_PL_beginav" as @i_PL_beginav;
import bits32 "_PL_curstname" as @i_PL_curstname;
import bits32 "_PL_globalstash" as @i_PL_globalstash;
import bits32 "_PL_debstash" as @i_PL_debstash;
import bits32 "_PL_dbargs" as @i_PL_dbargs;
import bits32 "_PL_lineary" as @i_PL_lineary;
import bits32 "_PL_DBsignal" as @i_PL_DBsignal;
import bits32 "_PL_DBtrace" as @i_PL_DBtrace;
import bits32 "_PL_DBsingle" as @i_PL_DBsingle;
import bits32 "_PL_DBsub" as @i_PL_DBsub;
import bits32 "_PL_DBline" as @i_PL_DBline;
import bits32 "_PL_DBgv" as @i_PL_DBgv;
import bits32 "_PL_errgv" as @i_PL_errgv;
import bits32 "_PL_replgv" as @i_PL_replgv;
import bits32 "_PL_rightgv" as @i_PL_rightgv;
import bits32 "_PL_ampergv" as @i_PL_ampergv;
import bits32 "_PL_leftgv" as @i_PL_leftgv;
import bits32 "_PL_argvoutgv" as @i_PL_argvoutgv;
import bits32 "_PL_argvgv" as @i_PL_argvgv;
import bits32 "_PL_defgv" as @i_PL_defgv;
import bits32 "_PL_stdingv" as @i_PL_stdingv;
import bits32 "_PL_statusvalue" as @i_PL_statusvalue;
import bits32 "_PL_multiline" as @i_PL_multiline;
import bits32 "_PL_maxsysfd" as @i_PL_maxsysfd;
import bits32 "_PL_formfeed" as @i_PL_formfeed;
import bits32 "_PL_basetime" as @i_PL_basetime;
import bits32 "_PL_perl_destruct_level" as @i_PL_perl_destruct_level;
import bits32 "_PL_perldb" as @i_PL_perldb;
import bits32 "_PL_e_script" as @i_PL_e_script;
import bits32 "_PL_inplace" as @i_PL_inplace;
import bits32 "_PL_unsafe" as @i_PL_unsafe;
import bits32 "_PL_sawvec" as @i_PL_sawvec;
import bits32 "_PL_sawstudy" as @i_PL_sawstudy;
import bits32 "_PL_sawampersand" as @i_PL_sawampersand;
import bits32 "_PL_doextract" as @i_PL_doextract;
import bits32 "_PL_dowarn" as @i_PL_dowarn;
import bits32 "_PL_doswitches" as @i_PL_doswitches;
import bits32 "_PL_minus_F" as @i_PL_minus_F;
import bits32 "_PL_minus_a" as @i_PL_minus_a;
import bits32 "_PL_minus_l" as @i_PL_minus_l;
import bits32 "_PL_minus_p" as @i_PL_minus_p;
import bits32 "_PL_minus_n" as @i_PL_minus_n;
import bits32 "_PL_preprocess" as @i_PL_preprocess;
import bits32 "_PL_splitstr" as @i_PL_splitstr;
import bits32 "_PL_localpatches" as @i_PL_localpatches;
import bits32 "_PL_patchlevel" as @i_PL_patchlevel;
import bits32 "_PL_minus_c" as @i_PL_minus_c;
import bits32 "_PL_cddir" as @i_PL_cddir;
import bits32 "_PL_parsehook" as @i_PL_parsehook;
import bits32 "_PL_warnhook" as @i_PL_warnhook;
import bits32 "_PL_diehook" as @i_PL_diehook;
import bits32 "_PL_origfilename" as @i_PL_origfilename;
import bits32 "_PL_hintgv" as @i_PL_hintgv;
import bits32 "_PL_incgv" as @i_PL_incgv;
import bits32 "_PL_siggv" as @i_PL_siggv;
import bits32 "_PL_envgv" as @i_PL_envgv;
import bits32 "_PL_origargv" as @i_PL_origargv;
import bits32 "_PL_origargc" as @i_PL_origargc;
import bits32 "_PL_specialsv_list" as @i_PL_specialsv_list;
import bits32 "_PL_patleave" as @i_PL_patleave;
import bits32 "_PL_hexdigit" as @i_PL_hexdigit;
import bits32 "_PL_No" as @i_PL_No;
import bits32 "_PL_Yes" as @i_PL_Yes;
import bits32 "_PL_amagic_generation" as @i_PL_amagic_generation;
import bits32 "_PL_debug" as @i_PL_debug;
import bits32 "_PL_do_undump" as @i_PL_do_undump;
import bits32 "_PL_hints" as @i_PL_hints;
import bits32 "_PL_in_my_stash" as @i_PL_in_my_stash;
import bits32 "_PL_in_my" as @i_PL_in_my;
import bits32 "_PL_last_lop_op" as @i_PL_last_lop_op;
import bits32 "_PL_last_lop" as @i_PL_last_lop;
import bits32 "_PL_last_uni" as @i_PL_last_uni;
import bits32 "_PL_thisexpr" as @i_PL_thisexpr;
import bits32 "_PL_pad_reset_pending" as @i_PL_pad_reset_pending;
import bits32 "_PL_padix_floor" as @i_PL_padix_floor;
import bits32 "_PL_padix" as @i_PL_padix;
import bits32 "_PL_max_intro_pending" as @i_PL_max_intro_pending;
import bits32 "_PL_min_intro_pending" as @i_PL_min_intro_pending;
import bits32 "_PL_subname" as @i_PL_subname;
import bits32 "_PL_subline" as @i_PL_subline;
import bits32 "_PL_error_count" as @i_PL_error_count;
import bits32 "_PL_multi_close" as @i_PL_multi_close;
import bits32 "_PL_multi_open" as @i_PL_multi_open;
import bits32 "_PL_multi_end" as @i_PL_multi_end;
import bits32 "_PL_multi_start" as @i_PL_multi_start;
import bits32 "_PL_expect" as @i_PL_expect;
import bits32 "_PL_bufend" as @i_PL_bufend;
import bits32 "_PL_oldoldbufptr" as @i_PL_oldoldbufptr;
import bits32 "_PL_oldbufptr" as @i_PL_oldbufptr;
import bits32 "_PL_bufptr" as @i_PL_bufptr;
import bits32 "_PL_linestr" as @i_PL_linestr;
import bits32 "_PL_nexttoke" as @i_PL_nexttoke;
import bits32 "_PL_nexttype" as @i_PL_nexttype;
import bits32 "_PL_nextval" as @i_PL_nextval;
import bits32 "_PL_lex_casestack" as @i_PL_lex_casestack;
import bits32 "_PL_lex_brackstack" as @i_PL_lex_brackstack;
import bits32 "_PL_lex_inwhat" as @i_PL_lex_inwhat;
import bits32 "_PL_lex_inpat" as @i_PL_lex_inpat;
import bits32 "_PL_lex_op" as @i_PL_lex_op;
import bits32 "_PL_lex_repl" as @i_PL_lex_repl;
import bits32 "_PL_lex_stuff" as @i_PL_lex_stuff;
import bits32 "_PL_lex_starts" as @i_PL_lex_starts;
import bits32 "_PL_lex_dojoin" as @i_PL_lex_dojoin;
import bits32 "_PL_lex_casemods" as @i_PL_lex_casemods;
import bits32 "_PL_lex_fakebrack" as @i_PL_lex_fakebrack;
import bits32 "_PL_lex_formbrack" as @i_PL_lex_formbrack;
import bits32 "_PL_lex_brackets" as @i_PL_lex_brackets;
import bits32 "_PL_lex_expect" as @i_PL_lex_expect;
import bits32 "_PL_lex_defer" as @i_PL_lex_defer;
import bits32 "_PL_lex_state" as @i_PL_lex_state;
import bits32 "_PL_sv_yes" as @i_PL_sv_yes;
import bits32 "_PL_sv_no" as @i_PL_sv_no;
import bits32 "_PL_sv_undef" as @i_PL_sv_undef;
import bits32 "_PL_na" as @i_PL_na;
import bits32 "_PL_tokenbuf" as @i_PL_tokenbuf;
import bits32 "_PL_runops" as @i_PL_runops;
import bits32 "_PL_nice_chunk_size" as @i_PL_nice_chunk_size;
import bits32 "_PL_nice_chunk" as @i_PL_nice_chunk;
import bits32 "_PL_he_root" as @i_PL_he_root;
import bits32 "_PL_xpv_root" as @i_PL_xpv_root;
import bits32 "_PL_xrv_root" as @i_PL_xrv_root;
import bits32 "_PL_xnv_root" as @i_PL_xnv_root;
import bits32 "_PL_xiv_root" as @i_PL_xiv_root;
import bits32 "_PL_xiv_arenaroot" as @i_PL_xiv_arenaroot;
import bits32 "_PL_sighandlerp" as @i_PL_sighandlerp;
import bits32 "_PL_sh_path" as @i_PL_sh_path;
import bits32 "_PL_osname" as @i_PL_osname;
import bits32 "_PL_maxo" as @i_PL_maxo;
import bits32 "_PL_pidstatus" as @i_PL_pidstatus;
import bits32 "_PL_origalen" as @i_PL_origalen;
import bits32 "_PL_origenviron" as @i_PL_origenviron;
import bits32 "_PL_evalseq" as @i_PL_evalseq;
import bits32 "_PL_op_seqmax" as @i_PL_op_seqmax;
import bits32 "_PL_cop_seqmax" as @i_PL_cop_seqmax;
import bits32 "_PL_an" as @i_PL_an;
import bits32 "_PL_nomemok" as @i_PL_nomemok;
import bits32 "_PL_egid" as @i_PL_egid;
import bits32 "_PL_gid" as @i_PL_gid;
import bits32 "_PL_euid" as @i_PL_euid;
import bits32 "_PL_uid" as @i_PL_uid;
import bits32 "_PL_ninterps" as @i_PL_ninterps;
import bits32 "_PL_curinterp" as @i_PL_curinterp;
import bits32 "_Perl_save_generic_svref" as @i_Perl_save_generic_svref;
import bits32 "_Perl_dofile" as @i_Perl_dofile;
import bits32 "_Perl_get_vtbl" as @i_Perl_get_vtbl;
import bits32 "_Perl_sv_usepvn_mg" as @i_Perl_sv_usepvn_mg;
import bits32 "_Perl_sv_setsv_mg" as @i_Perl_sv_setsv_mg;
import bits32 "_Perl_sv_setpvn_mg" as @i_Perl_sv_setpvn_mg;
import bits32 "_Perl_sv_setpv_mg" as @i_Perl_sv_setpv_mg;
import bits32 "_Perl_sv_setnv_mg" as @i_Perl_sv_setnv_mg;
import bits32 "_Perl_sv_setuv_mg" as @i_Perl_sv_setuv_mg;
import bits32 "_Perl_sv_setpviv_mg" as @i_Perl_sv_setpviv_mg;
import bits32 "_Perl_sv_setiv_mg" as @i_Perl_sv_setiv_mg;
import bits32 "_Perl_sv_setpvf_mg" as @i_Perl_sv_setpvf_mg;
import bits32 "_Perl_sv_catsv_mg" as @i_Perl_sv_catsv_mg;
import bits32 "_Perl_sv_catpvn_mg" as @i_Perl_sv_catpvn_mg;
import bits32 "_Perl_sv_catpv_mg" as @i_Perl_sv_catpv_mg;
import bits32 "_Perl_sv_catpvf_mg" as @i_Perl_sv_catpvf_mg;
import bits32 "_Perl_byterun" as @i_Perl_byterun;
import bits32 "_Perl_safefree" as @i_Perl_safefree;
import bits32 "_Perl_saferealloc" as @i_Perl_saferealloc;
import bits32 "_Perl_safecalloc" as @i_Perl_safecalloc;
import bits32 "_Perl_safemalloc" as @i_Perl_safemalloc;
import bits32 "_Perl_yywarn" as @i_Perl_yywarn;
import bits32 "_Perl_yyparse" as @i_Perl_yyparse;
import bits32 "_Perl_yylex" as @i_Perl_yylex;
import bits32 "_Perl_yyerror" as @i_Perl_yyerror;
import bits32 "_Perl_whichsig" as @i_Perl_whichsig;
import bits32 "_Perl_watch" as @i_Perl_watch;
import bits32 "_Perl_warn" as @i_Perl_warn;
import bits32 "_Perl_wait4pid" as @i_Perl_wait4pid;
import bits32 "_Perl_vivify_ref" as @i_Perl_vivify_ref;
import bits32 "_Perl_vivify_defelem" as @i_Perl_vivify_defelem;
import bits32 "_Perl_utilize" as @i_Perl_utilize;
import bits32 "_Perl_taint_proper" as @i_Perl_taint_proper;
import bits32 "_Perl_taint_env" as @i_Perl_taint_env;
import bits32 "_Perl_sv_vsetpvfn" as @i_Perl_sv_vsetpvfn;
import bits32 "_Perl_sv_vcatpvfn" as @i_Perl_sv_vcatpvfn;
import bits32 "_Perl_sv_usepvn" as @i_Perl_sv_usepvn;
import bits32 "_Perl_sv_upgrade" as @i_Perl_sv_upgrade;
import bits32 "_Perl_sv_untaint" as @i_Perl_sv_untaint;
import bits32 "_Perl_sv_unref" as @i_Perl_sv_unref;
import bits32 "_Perl_sv_unmagic" as @i_Perl_sv_unmagic;
import bits32 "_Perl_sv_tainted" as @i_Perl_sv_tainted;
import bits32 "_Perl_sv_taint" as @i_Perl_sv_taint;
import bits32 "_Perl_sv_setsv" as @i_Perl_sv_setsv;
import bits32 "_Perl_sv_setpvn" as @i_Perl_sv_setpvn;
import bits32 "_Perl_sv_setpv" as @i_Perl_sv_setpv;
import bits32 "_Perl_sv_setref_pvn" as @i_Perl_sv_setref_pvn;
import bits32 "_Perl_sv_setref_pv" as @i_Perl_sv_setref_pv;
import bits32 "_Perl_sv_setref_nv" as @i_Perl_sv_setref_nv;
import bits32 "_Perl_sv_setref_iv" as @i_Perl_sv_setref_iv;
import bits32 "_Perl_sv_setnv" as @i_Perl_sv_setnv;
import bits32 "_Perl_sv_setuv" as @i_Perl_sv_setuv;
import bits32 "_Perl_sv_setpviv" as @i_Perl_sv_setpviv;
import bits32 "_Perl_sv_setiv" as @i_Perl_sv_setiv;
import bits32 "_Perl_sv_setpvf" as @i_Perl_sv_setpvf;
import bits32 "_Perl_sv_reset" as @i_Perl_sv_reset;
import bits32 "_Perl_sv_report_used" as @i_Perl_sv_report_used;
import bits32 "_Perl_sv_replace" as @i_Perl_sv_replace;
import bits32 "_Perl_sv_reftype" as @i_Perl_sv_reftype;
import bits32 "_Perl_sv_pvn_force" as @i_Perl_sv_pvn_force;
import bits32 "_Perl_sv_peek" as @i_Perl_sv_peek;
import bits32 "_Perl_sv_newref" as @i_Perl_sv_newref;
import bits32 "_Perl_sv_newmortal" as @i_Perl_sv_newmortal;
import bits32 "_Perl_sv_mortalcopy" as @i_Perl_sv_mortalcopy;
import bits32 "_Perl_sv_magic" as @i_Perl_sv_magic;
import bits32 "_Perl_sv_len" as @i_Perl_sv_len;
import bits32 "_Perl_sv_isobject" as @i_Perl_sv_isobject;
import bits32 "_Perl_sv_isa" as @i_Perl_sv_isa;
import bits32 "_Perl_sv_insert" as @i_Perl_sv_insert;
import bits32 "_Perl_sv_inc" as @i_Perl_sv_inc;
import bits32 "_Perl_sv_grow" as @i_Perl_sv_grow;
import bits32 "_Perl_sv_gets" as @i_Perl_sv_gets;
import bits32 "_Perl_sv_free_arenas" as @i_Perl_sv_free_arenas;
import bits32 "_Perl_sv_free" as @i_Perl_sv_free;
import bits32 "_Perl_sv_eq" as @i_Perl_sv_eq;
import bits32 "_Perl_sv_derived_from" as @i_Perl_sv_derived_from;
import bits32 "_Perl_sv_dump" as @i_Perl_sv_dump;
import bits32 "_Perl_sv_dec" as @i_Perl_sv_dec;
import bits32 "_Perl_sv_compile_2op" as @i_Perl_sv_compile_2op;
import bits32 "_Perl_sv_cmp_locale" as @i_Perl_sv_cmp_locale;
import bits32 "_Perl_sv_cmp" as @i_Perl_sv_cmp;
import bits32 "_Perl_sv_clear" as @i_Perl_sv_clear;
import bits32 "_Perl_sv_clean_objs" as @i_Perl_sv_clean_objs;
import bits32 "_Perl_sv_clean_all" as @i_Perl_sv_clean_all;
import bits32 "_Perl_sv_chop" as @i_Perl_sv_chop;
import bits32 "_Perl_sv_catsv" as @i_Perl_sv_catsv;
import bits32 "_Perl_sv_catpvn" as @i_Perl_sv_catpvn;
import bits32 "_Perl_sv_catpv" as @i_Perl_sv_catpv;
import bits32 "_Perl_sv_catpvf" as @i_Perl_sv_catpvf;
import bits32 "_Perl_sv_bless" as @i_Perl_sv_bless;
import bits32 "_Perl_sv_backoff" as @i_Perl_sv_backoff;
import bits32 "_Perl_sv_add_arena" as @i_Perl_sv_add_arena;
import bits32 "_Perl_sv_true" as @i_Perl_sv_true;
import bits32 "_Perl_sv_pvn" as @i_Perl_sv_pvn;
import bits32 "_Perl_sv_nv" as @i_Perl_sv_nv;
import bits32 "_Perl_sv_uv" as @i_Perl_sv_uv;
import bits32 "_Perl_sv_iv" as @i_Perl_sv_iv;
import bits32 "_Perl_sv_2uv" as @i_Perl_sv_2uv;
import bits32 "_Perl_sv_2pv" as @i_Perl_sv_2pv;
import bits32 "_Perl_sv_2nv" as @i_Perl_sv_2nv;
import bits32 "_Perl_sv_2mortal" as @i_Perl_sv_2mortal;
import bits32 "_Perl_sv_2iv" as @i_Perl_sv_2iv;
import bits32 "_Perl_sv_2io" as @i_Perl_sv_2io;
import bits32 "_Perl_sv_2cv" as @i_Perl_sv_2cv;
import bits32 "_Perl_sv_2bool" as @i_Perl_sv_2bool;
import bits32 "_Perl_sub_crush_depth" as @i_Perl_sub_crush_depth;
import bits32 "_Perl_start_subparse" as @i_Perl_start_subparse;
import bits32 "_Perl_stack_grow" as @i_Perl_stack_grow;
import bits32 "_Perl_sighandler" as @i_Perl_sighandler;
import bits32 "_Perl_setdefout" as @i_Perl_setdefout;
import bits32 "_Perl_setenv_getix" as @i_Perl_setenv_getix;
import bits32 "_Perl_screaminstr" as @i_Perl_screaminstr;
import bits32 "_Perl_scope" as @i_Perl_scope;
import bits32 "_Perl_scan_oct" as @i_Perl_scan_oct;
import bits32 "_Perl_scan_num" as @i_Perl_scan_num;
import bits32 "_Perl_scan_hex" as @i_Perl_scan_hex;
import bits32 "_Perl_scalarvoid" as @i_Perl_scalarvoid;
import bits32 "_Perl_scalarseq" as @i_Perl_scalarseq;
import bits32 "_Perl_scalarkids" as @i_Perl_scalarkids;
import bits32 "_Perl_scalar" as @i_Perl_scalar;
import bits32 "_Perl_sawparens" as @i_Perl_sawparens;
import bits32 "_Perl_save_threadsv" as @i_Perl_save_threadsv;
import bits32 "_Perl_save_svref" as @i_Perl_save_svref;
import bits32 "_Perl_save_sptr" as @i_Perl_save_sptr;
import bits32 "_Perl_save_pptr" as @i_Perl_save_pptr;
import bits32 "_Perl_save_scalar" as @i_Perl_save_scalar;
import bits32 "_Perl_save_op" as @i_Perl_save_op;
import bits32 "_Perl_save_nogv" as @i_Perl_save_nogv;
import bits32 "_Perl_save_long" as @i_Perl_save_long;
import bits32 "_Perl_save_list" as @i_Perl_save_list;
import bits32 "_Perl_save_iv" as @i_Perl_save_iv;
import bits32 "_Perl_save_item" as @i_Perl_save_item;
import bits32 "_Perl_save_int" as @i_Perl_save_int;
import bits32 "_Perl_save_I32" as @i_Perl_save_I32;
import bits32 "_Perl_save_I16" as @i_Perl_save_I16;
import bits32 "_Perl_save_hptr" as @i_Perl_save_hptr;
import bits32 "_Perl_save_hints" as @i_Perl_save_hints;
import bits32 "_Perl_save_helem" as @i_Perl_save_helem;
import bits32 "_Perl_save_hash" as @i_Perl_save_hash;
import bits32 "_Perl_save_gp" as @i_Perl_save_gp;
import bits32 "_Perl_save_freepv" as @i_Perl_save_freepv;
import bits32 "_Perl_save_freeop" as @i_Perl_save_freeop;
import bits32 "_Perl_save_freesv" as @i_Perl_save_freesv;
import bits32 "_Perl_save_destructor" as @i_Perl_save_destructor;
import bits32 "_Perl_save_delete" as @i_Perl_save_delete;
import bits32 "_Perl_save_clearsv" as @i_Perl_save_clearsv;
import bits32 "_Perl_save_ary" as @i_Perl_save_ary;
import bits32 "_Perl_save_aptr" as @i_Perl_save_aptr;
import bits32 "_Perl_save_aelem" as @i_Perl_save_aelem;
import bits32 "_Perl_savestack_grow" as @i_Perl_savestack_grow;
import bits32 "_Perl_savepvn" as @i_Perl_savepvn;
import bits32 "_Perl_savepv" as @i_Perl_savepv;
import bits32 "_Perl_rxres_save" as @i_Perl_rxres_save;
import bits32 "_Perl_rxres_restore" as @i_Perl_rxres_restore;
import bits32 "_Perl_rxres_free" as @i_Perl_rxres_free;
import bits32 "_Perl_rsignal_state" as @i_Perl_rsignal_state;
import bits32 "_Perl_rsignal_save" as @i_Perl_rsignal_save;
import bits32 "_Perl_rsignal_restore" as @i_Perl_rsignal_restore;
import bits32 "_Perl_rsignal" as @i_Perl_rsignal;
import bits32 "_Perl_rninstr" as @i_Perl_rninstr;
import bits32 "_Perl_repeatcpy" as @i_Perl_repeatcpy;
import bits32 "_Perl_regprop" as @i_Perl_regprop;
import bits32 "_Perl_regnext" as @i_Perl_regnext;
import bits32 "_Perl_regexec_flags" as @i_Perl_regexec_flags;
import bits32 "_Perl_pregcomp" as @i_Perl_pregcomp;
import bits32 "_Perl_pregfree" as @i_Perl_pregfree;
import bits32 "_Perl_pregexec" as @i_Perl_pregexec;
import bits32 "_Perl_regdump" as @i_Perl_regdump;
import bits32 "_Perl_refkids" as @i_Perl_refkids;
import bits32 "_Perl_ref" as @i_Perl_ref;
import bits32 "_Perl_push_scope" as @i_Perl_push_scope;
import bits32 "_Perl_push_return" as @i_Perl_push_return;
import bits32 "_Perl_prepend_elem" as @i_Perl_prepend_elem;
import bits32 "_Perl_pop_scope" as @i_Perl_pop_scope;
import bits32 "_Perl_pop_return" as @i_Perl_pop_return;
import bits32 "_Perl_pmtrans" as @i_Perl_pmtrans;
import bits32 "_Perl_pmruntime" as @i_Perl_pmruntime;
import bits32 "_Perl_pmflag" as @i_Perl_pmflag;
import bits32 "_Perl_pidgone" as @i_Perl_pidgone;
import bits32 "_perl_run" as @i_perl_run;
import bits32 "_perl_require_pv" as @i_perl_require_pv;
import bits32 "_perl_parse" as @i_perl_parse;
import bits32 "_perl_set_numeric_standard" as @i_perl_set_numeric_standard;
import bits32 "_perl_set_numeric_local" as @i_perl_set_numeric_local;
import bits32 "_perl_new_numeric" as @i_perl_new_numeric;
import bits32 "_perl_new_ctype" as @i_perl_new_ctype;
import bits32 "_perl_new_collate" as @i_perl_new_collate;
import bits32 "_perl_init_i18nl14n" as @i_perl_init_i18nl14n;
import bits32 "_perl_init_i18nl10n" as @i_perl_init_i18nl10n;
import bits32 "_perl_get_cv" as @i_perl_get_cv;
import bits32 "_perl_get_hv" as @i_perl_get_hv;
import bits32 "_perl_get_av" as @i_perl_get_av;
import bits32 "_perl_get_sv" as @i_perl_get_sv;
import bits32 "_perl_free" as @i_perl_free;
import bits32 "_perl_eval_sv" as @i_perl_eval_sv;
import bits32 "_perl_eval_pv" as @i_perl_eval_pv;
import bits32 "_perl_destruct" as @i_perl_destruct;
import bits32 "_perl_construct" as @i_perl_construct;
import bits32 "_perl_call_sv" as @i_perl_call_sv;
import bits32 "_perl_call_pv" as @i_perl_call_pv;
import bits32 "_perl_call_method" as @i_perl_call_method;
import bits32 "_perl_call_argv" as @i_perl_call_argv;
import bits32 "_perl_atexit" as @i_perl_atexit;
import bits32 "_perl_alloc" as @i_perl_alloc;
import bits32 "_Perl_peep" as @i_Perl_peep;
import bits32 "_Perl_pad_swipe" as @i_Perl_pad_swipe;
import bits32 "_Perl_pad_reset" as @i_Perl_pad_reset;
import bits32 "_Perl_pad_free" as @i_Perl_pad_free;
import bits32 "_Perl_pad_sv" as @i_Perl_pad_sv;
import bits32 "_Perl_pad_leavemy" as @i_Perl_pad_leavemy;
import bits32 "_Perl_oopsHV" as @i_Perl_oopsHV;
import bits32 "_Perl_oopsAV" as @i_Perl_oopsAV;
import bits32 "_Perl_pad_findmy" as @i_Perl_pad_findmy;
import bits32 "_Perl_pad_allocmy" as @i_Perl_pad_allocmy;
import bits32 "_Perl_pad_alloc" as @i_Perl_pad_alloc;
import bits32 "_Perl_package" as @i_Perl_package;
import bits32 "_Perl_op_free" as @i_Perl_op_free;
import bits32 "_Perl_oopsCV" as @i_Perl_oopsCV;
import bits32 "_Perl_ninstr" as @i_Perl_ninstr;
import bits32 "_Perl_nextargv" as @i_Perl_nextargv;
import bits32 "_Perl_new_stackinfo" as @i_Perl_new_stackinfo;
import bits32 "_Perl_newWHILEOP" as @i_Perl_newWHILEOP;
import bits32 "_Perl_newUNOP" as @i_Perl_newUNOP;
import bits32 "_Perl_newSVsv" as @i_Perl_newSVsv;
import bits32 "_Perl_newSVrv" as @i_Perl_newSVrv;
import bits32 "_Perl_newSVpvf" as @i_Perl_newSVpvf;
import bits32 "_Perl_newSVpvn" as @i_Perl_newSVpvn;
import bits32 "_Perl_newSVpv" as @i_Perl_newSVpv;
import bits32 "_Perl_newSVnv" as @i_Perl_newSVnv;
import bits32 "_Perl_newSViv" as @i_Perl_newSViv;
import bits32 "_Perl_newSVOP" as @i_Perl_newSVOP;
import bits32 "_Perl_newSVREF" as @i_Perl_newSVREF;
import bits32 "_Perl_newSV" as @i_Perl_newSV;
import bits32 "_Perl_newRV_noinc" as @i_Perl_newRV_noinc;
import bits32 "_Perl_newRV" as @i_Perl_newRV;
import bits32 "_Perl_newPVOP" as @i_Perl_newPVOP;
import bits32 "_Perl_newPMOP" as @i_Perl_newPMOP;
import bits32 "_Perl_newLISTOP" as @i_Perl_newLISTOP;
import bits32 "_Perl_newIO" as @i_Perl_newIO;
import bits32 "_Perl_newHVREF" as @i_Perl_newHVREF;
import bits32 "_Perl_newGVREF" as @i_Perl_newGVREF;
import bits32 "_Perl_newGVgen" as @i_Perl_newGVgen;
import bits32 "_Perl_newGVOP" as @i_Perl_newGVOP;
import bits32 "_Perl_newCVREF" as @i_Perl_newCVREF;
import bits32 "_Perl_newBINOP" as @i_Perl_newBINOP;
import bits32 "_Perl_newAVREF" as @i_Perl_newAVREF;
import bits32 "_Perl_newAV" as @i_Perl_newAV;
import bits32 "_Perl_newXS" as @i_Perl_newXS;
import bits32 "_Perl_newSUB" as @i_Perl_newSUB;
import bits32 "_Perl_newSTATEOP" as @i_Perl_newSTATEOP;
import bits32 "_Perl_newSLICEOP" as @i_Perl_newSLICEOP;
import bits32 "_Perl_newRANGE" as @i_Perl_newRANGE;
import bits32 "_Perl_newPROG" as @i_Perl_newPROG;
import bits32 "_Perl_newOP" as @i_Perl_newOP;
import bits32 "_Perl_newNULLLIST" as @i_Perl_newNULLLIST;
import bits32 "_Perl_newLOOPOP" as @i_Perl_newLOOPOP;
import bits32 "_Perl_newLOOPEX" as @i_Perl_newLOOPEX;
import bits32 "_Perl_newLOGOP" as @i_Perl_newLOGOP;
import bits32 "_Perl_newFOROP" as @i_Perl_newFOROP;
import bits32 "_Perl_newFORM" as @i_Perl_newFORM;
import bits32 "_Perl_newCONSTSUB" as @i_Perl_newCONSTSUB;
import bits32 "_Perl_newCONDOP" as @i_Perl_newCONDOP;
import bits32 "_Perl_newASSIGNOP" as @i_Perl_newASSIGNOP;
import bits32 "_Perl_newANONSUB" as @i_Perl_newANONSUB;
import bits32 "_Perl_newANONHASH" as @i_Perl_newANONHASH;
import bits32 "_Perl_newANONLIST" as @i_Perl_newANONLIST;
import bits32 "_Perl_my_unexec" as @i_Perl_my_unexec;
import bits32 "_Perl_my_ntohl" as @i_Perl_my_ntohl;
import bits32 "_Perl_my_htonl" as @i_Perl_my_htonl;
import bits32 "_Perl_my_swap" as @i_Perl_my_swap;
import bits32 "_Perl_my_stat" as @i_Perl_my_stat;
import bits32 "_Perl_my_setenv" as @i_Perl_my_setenv;
import bits32 "_Perl_my_popen" as @i_Perl_my_popen;
import bits32 "_Perl_my_pclose" as @i_Perl_my_pclose;
import bits32 "_Perl_my_memcmp" as @i_Perl_my_memcmp;
import bits32 "_Perl_my_lstat" as @i_Perl_my_lstat;
import bits32 "_Perl_my_failure_exit" as @i_Perl_my_failure_exit;
import bits32 "_Perl_my_exit" as @i_Perl_my_exit;
import bits32 "_Perl_my_bcopy" as @i_Perl_my_bcopy;
import bits32 "_Perl_my" as @i_Perl_my;
import bits32 "_Perl_moreswitches" as @i_Perl_moreswitches;
import bits32 "_Perl_mod" as @i_Perl_mod;
import bits32 "_Perl_mg_size" as @i_Perl_mg_size;
import bits32 "_Perl_mg_set" as @i_Perl_mg_set;
import bits32 "_Perl_mg_magical" as @i_Perl_mg_magical;
import bits32 "_Perl_mg_length" as @i_Perl_mg_length;
import bits32 "_Perl_mg_get" as @i_Perl_mg_get;
import bits32 "_Perl_mg_free" as @i_Perl_mg_free;
import bits32 "_Perl_mg_find" as @i_Perl_mg_find;
import bits32 "_Perl_mg_copy" as @i_Perl_mg_copy;
import bits32 "_Perl_mg_clear" as @i_Perl_mg_clear;
import bits32 "_Perl_mess" as @i_Perl_mess;
import bits32 "_Perl_markstack_grow" as @i_Perl_markstack_grow;
import bits32 "_main" as @i_main;
import bits32 "_Perl_magicname" as @i_Perl_magicname;
import bits32 "_Perl_magic_wipepack" as @i_Perl_magic_wipepack;
import bits32 "_Perl_magic_sizepack" as @i_Perl_magic_sizepack;
import bits32 "_Perl_magic_set_all_env" as @i_Perl_magic_set_all_env;
import bits32 "_Perl_magic_setvec" as @i_Perl_magic_setvec;
import bits32 "_Perl_magic_setuvar" as @i_Perl_magic_setuvar;
import bits32 "_Perl_magic_settaint" as @i_Perl_magic_settaint;
import bits32 "_Perl_magic_setsubstr" as @i_Perl_magic_setsubstr;
import bits32 "_Perl_magic_setsig" as @i_Perl_magic_setsig;
import bits32 "_Perl_magic_setpos" as @i_Perl_magic_setpos;
import bits32 "_Perl_magic_setpack" as @i_Perl_magic_setpack;
import bits32 "_Perl_magic_setnkeys" as @i_Perl_magic_setnkeys;
import bits32 "_Perl_magic_setmglob" as @i_Perl_magic_setmglob;
import bits32 "_Perl_magic_setglob" as @i_Perl_magic_setglob;
import bits32 "_Perl_magic_setisa" as @i_Perl_magic_setisa;
import bits32 "_Perl_magic_setfm" as @i_Perl_magic_setfm;
import bits32 "_Perl_magic_setenv" as @i_Perl_magic_setenv;
import bits32 "_Perl_magic_setdefelem" as @i_Perl_magic_setdefelem;
import bits32 "_Perl_magic_setdbline" as @i_Perl_magic_setdbline;
import bits32 "_Perl_magic_setbm" as @i_Perl_magic_setbm;
import bits32 "_Perl_magic_setarylen" as @i_Perl_magic_setarylen;
import bits32 "_Perl_magic_setamagic" as @i_Perl_magic_setamagic;
import bits32 "_Perl_magic_set" as @i_Perl_magic_set;
import bits32 "_Perl_magic_nextpack" as @i_Perl_magic_nextpack;
import bits32 "_Perl_magic_len" as @i_Perl_magic_len;
import bits32 "_Perl_magic_getvec" as @i_Perl_magic_getvec;
import bits32 "_Perl_magic_getuvar" as @i_Perl_magic_getuvar;
import bits32 "_Perl_magic_gettaint" as @i_Perl_magic_gettaint;
import bits32 "_Perl_magic_getsubstr" as @i_Perl_magic_getsubstr;
import bits32 "_Perl_magic_getsig" as @i_Perl_magic_getsig;
import bits32 "_Perl_magic_getpos" as @i_Perl_magic_getpos;
import bits32 "_Perl_magic_getpack" as @i_Perl_magic_getpack;
import bits32 "_Perl_magic_getnkeys" as @i_Perl_magic_getnkeys;
import bits32 "_Perl_magic_getglob" as @i_Perl_magic_getglob;
import bits32 "_Perl_magic_getdefelem" as @i_Perl_magic_getdefelem;
import bits32 "_Perl_magic_getarylen" as @i_Perl_magic_getarylen;
import bits32 "_Perl_magic_get" as @i_Perl_magic_get;
import bits32 "_Perl_magic_freeregexp" as @i_Perl_magic_freeregexp;
import bits32 "_Perl_magic_existspack" as @i_Perl_magic_existspack;
import bits32 "_Perl_magic_clearsig" as @i_Perl_magic_clearsig;
import bits32 "_Perl_magic_clearpack" as @i_Perl_magic_clearpack;
import bits32 "_Perl_magic_clear_all_env" as @i_Perl_magic_clear_all_env;
import bits32 "_Perl_magic_clearenv" as @i_Perl_magic_clearenv;
import bits32 "_Perl_looks_like_number" as @i_Perl_looks_like_number;
import bits32 "_Perl_localize" as @i_Perl_localize;
import bits32 "_Perl_listkids" as @i_Perl_listkids;
import bits32 "_Perl_list" as @i_Perl_list;
import bits32 "_Perl_linklist" as @i_Perl_linklist;
import bits32 "_Perl_lex_start" as @i_Perl_lex_start;
import bits32 "_Perl_lex_end" as @i_Perl_lex_end;
import bits32 "_Perl_leave_scope" as @i_Perl_leave_scope;
import bits32 "_Perl_keyword" as @i_Perl_keyword;
import bits32 "_Perl_jmaybe" as @i_Perl_jmaybe;
import bits32 "_Perl_invert" as @i_Perl_invert;
import bits32 "_Perl_io_close" as @i_Perl_io_close;
import bits32 "_Perl_instr" as @i_Perl_instr;
import bits32 "_Perl_intro_my" as @i_Perl_intro_my;
import bits32 "_Perl_init_stacks" as @i_Perl_init_stacks;
import bits32 "_Perl_ingroup" as @i_Perl_ingroup;
import bits32 "_Perl_ibcmp_locale" as @i_Perl_ibcmp_locale;
import bits32 "_Perl_ibcmp" as @i_Perl_ibcmp;
import bits32 "_Perl_gv_stashsv" as @i_Perl_gv_stashsv;
import bits32 "_Perl_gv_stashpvn" as @i_Perl_gv_stashpvn;
import bits32 "_Perl_gv_stashpv" as @i_Perl_gv_stashpv;
import bits32 "_Perl_gv_init" as @i_Perl_gv_init;
import bits32 "_Perl_gv_fullname3" as @i_Perl_gv_fullname3;
import bits32 "_Perl_gv_fullname" as @i_Perl_gv_fullname;
import bits32 "_Perl_gv_fetchpv" as @i_Perl_gv_fetchpv;
import bits32 "_Perl_gv_fetchmethod_autoload" as @i_Perl_gv_fetchmethod_autoload;
import bits32 "_Perl_gv_fetchmethod" as @i_Perl_gv_fetchmethod;
import bits32 "_Perl_gv_fetchmeth" as @i_Perl_gv_fetchmeth;
import bits32 "_Perl_gv_fetchfile" as @i_Perl_gv_fetchfile;
import bits32 "_Perl_gv_efullname3" as @i_Perl_gv_efullname3;
import bits32 "_Perl_gv_efullname" as @i_Perl_gv_efullname;
import bits32 "_Perl_gv_check" as @i_Perl_gv_check;
import bits32 "_Perl_gv_autoload4" as @i_Perl_gv_autoload4;
import bits32 "_Perl_gv_IOadd" as @i_Perl_gv_IOadd;
import bits32 "_Perl_gv_HVadd" as @i_Perl_gv_HVadd;
import bits32 "_Perl_gv_AVadd" as @i_Perl_gv_AVadd;
import bits32 "_Perl_gp_ref" as @i_Perl_gp_ref;
import bits32 "_Perl_gp_free" as @i_Perl_gp_free;
import bits32 "_Perl_gen_constant_list" as @i_Perl_gen_constant_list;
import bits32 "_Perl_free_tmps" as @i_Perl_free_tmps;
import bits32 "_Perl_form" as @i_Perl_form;
import bits32 "_Perl_fold_constants" as @i_Perl_fold_constants;
import bits32 "_Perl_force_list" as @i_Perl_force_list;
import bits32 "_Perl_find_script" as @i_Perl_find_script;
import bits32 "_Perl_fbm_instr" as @i_Perl_fbm_instr;
import bits32 "_Perl_fbm_compile" as @i_Perl_fbm_compile;
import bits32 "_Perl_dump_sub" as @i_Perl_dump_sub;
import bits32 "_Perl_dump_packsubs" as @i_Perl_dump_packsubs;
import bits32 "_Perl_dump_pm" as @i_Perl_dump_pm;
import bits32 "_Perl_dump_op" as @i_Perl_dump_op;
import bits32 "_Perl_dump_gv" as @i_Perl_dump_gv;
import bits32 "_Perl_dump_form" as @i_Perl_dump_form;
import bits32 "_Perl_dump_eval" as @i_Perl_dump_eval;
import bits32 "_Perl_dump_all" as @i_Perl_dump_all;
import bits32 "_Perl_dowantarray" as @i_Perl_dowantarray;
import bits32 "_Perl_do_vop" as @i_Perl_do_vop;
import bits32 "_Perl_do_vecset" as @i_Perl_do_vecset;
import bits32 "_Perl_do_trans" as @i_Perl_do_trans;
import bits32 "_Perl_do_tell" as @i_Perl_do_tell;
import bits32 "_Perl_do_sysseek" as @i_Perl_do_sysseek;
import bits32 "_Perl_do_sprintf" as @i_Perl_do_sprintf;
import bits32 "_Perl_do_seek" as @i_Perl_do_seek;
import bits32 "_Perl_do_chomp" as @i_Perl_do_chomp;
import bits32 "_Perl_do_readline" as @i_Perl_do_readline;
import bits32 "_Perl_do_print" as @i_Perl_do_print;
import bits32 "_Perl_do_pipe" as @i_Perl_do_pipe;
import bits32 "_Perl_do_open" as @i_Perl_do_open;
import bits32 "_Perl_do_kv" as @i_Perl_do_kv;
import bits32 "_Perl_do_join" as @i_Perl_do_join;
import bits32 "_Perl_do_execfree" as @i_Perl_do_execfree;
import bits32 "_Perl_do_exec" as @i_Perl_do_exec;
import bits32 "_Perl_do_eof" as @i_Perl_do_eof;
import bits32 "_Perl_do_close" as @i_Perl_do_close;
import bits32 "_Perl_do_chop" as @i_Perl_do_chop;
import bits32 "_Perl_do_binmode" as @i_Perl_do_binmode;
import bits32 "_Perl_do_aexec" as @i_Perl_do_aexec;
import bits32 "_Perl_dounwind" as @i_Perl_dounwind;
import bits32 "_Perl_die_where" as @i_Perl_die_where;
import bits32 "_Perl_die" as @i_Perl_die;
import bits32 "_Perl_deprecate" as @i_Perl_deprecate;
import bits32 "_Perl_delimcpy" as @i_Perl_delimcpy;
import bits32 "_Perl_debstackptrs" as @i_Perl_debstackptrs;
import bits32 "_Perl_debstack" as @i_Perl_debstack;
import bits32 "_Perl_debop" as @i_Perl_debop;
import bits32 "_Perl_debprofdump" as @i_Perl_debprofdump;
import bits32 "_Perl_deb_growlevel" as @i_Perl_deb_growlevel;
import bits32 "_Perl_deb" as @i_Perl_deb;
import bits32 "_Perl_cxinc" as @i_Perl_cxinc;
import bits32 "_Perl_get_opargs" as @i_Perl_get_opargs;
import bits32 "_Perl_get_no_modify" as @i_Perl_get_no_modify;
import bits32 "_Perl_get_op_names" as @i_Perl_get_op_names;
import bits32 "_Perl_get_op_descs" as @i_Perl_get_op_descs;
import bits32 "_Perl_filter_read" as @i_Perl_filter_read;
import bits32 "_Perl_filter_del" as @i_Perl_filter_del;
import bits32 "_Perl_filter_add" as @i_Perl_filter_add;
import bits32 "_Perl_cx_dump" as @i_Perl_cx_dump;
import bits32 "_Perl_cv_undef" as @i_Perl_cv_undef;
import bits32 "_Perl_op_const_sv" as @i_Perl_op_const_sv;
import bits32 "_Perl_cv_const_sv" as @i_Perl_cv_const_sv;
import bits32 "_Perl_cv_clone" as @i_Perl_cv_clone;
import bits32 "_Perl_cv_ckproto" as @i_Perl_cv_ckproto;
import bits32 "_Perl_croak" as @i_Perl_croak;
import bits32 "_Perl_convert" as @i_Perl_convert;
import bits32 "_Perl_ck_retarget" as @i_Perl_ck_retarget;
import bits32 "_Perl_ck_gvconst" as @i_Perl_ck_gvconst;
import bits32 "_Perl_cando" as @i_Perl_cando;
import bits32 "_Perl_call_list" as @i_Perl_call_list;
import bits32 "_Perl_boot_core_UNIVERSAL" as @i_Perl_boot_core_UNIVERSAL;
import bits32 "_Perl_block_start" as @i_Perl_block_start;
import bits32 "_Perl_block_gimme" as @i_Perl_block_gimme;
import bits32 "_Perl_block_end" as @i_Perl_block_end;
import bits32 "_Perl_bind_match" as @i_Perl_bind_match;
import bits32 "_Perl_av_unshift" as @i_Perl_av_unshift;
import bits32 "_Perl_av_undef" as @i_Perl_av_undef;
import bits32 "_Perl_av_store" as @i_Perl_av_store;
import bits32 "_Perl_av_shift" as @i_Perl_av_shift;
import bits32 "_Perl_av_reify" as @i_Perl_av_reify;
import bits32 "_Perl_av_push" as @i_Perl_av_push;
import bits32 "_Perl_av_pop" as @i_Perl_av_pop;
import bits32 "_Perl_av_make" as @i_Perl_av_make;
import bits32 "_Perl_av_len" as @i_Perl_av_len;
import bits32 "_Perl_av_fill" as @i_Perl_av_fill;
import bits32 "_Perl_av_fetch" as @i_Perl_av_fetch;
import bits32 "_Perl_av_fake" as @i_Perl_av_fake;
import bits32 "_Perl_av_extend" as @i_Perl_av_extend;
import bits32 "_Perl_av_clear" as @i_Perl_av_clear;
import bits32 "_Perl_avhv_keys" as @i_Perl_avhv_keys;
import bits32 "_Perl_avhv_iterval" as @i_Perl_avhv_iterval;
import bits32 "_Perl_avhv_iternext" as @i_Perl_avhv_iternext;
import bits32 "_Perl_avhv_fetch_ent" as @i_Perl_avhv_fetch_ent;
import bits32 "_Perl_avhv_exists_ent" as @i_Perl_avhv_exists_ent;
import bits32 "_Perl_assertref" as @i_Perl_assertref;
import bits32 "_Perl_apply" as @i_Perl_apply;
import bits32 "_Perl_append_list" as @i_Perl_append_list;
import bits32 "_Perl_append_elem" as @i_Perl_append_elem;
import bits32 "_Perl_Gv_AMupdate" as @i_Perl_Gv_AMupdate;
import bits32 "_Perl_amagic_call" as @i_Perl_amagic_call;
import bits32 "_Perl_yylval" as @i_Perl_yylval;
import bits32 "_Perl_freq" as @i_Perl_freq;
import bits32 "_Perl_fold_locale" as @i_Perl_fold_locale;
import bits32 "_Perl_fold" as @i_Perl_fold;
import bits32 "_Perl_psig_name" as @i_Perl_psig_name;
import bits32 "_Perl_psig_ptr" as @i_Perl_psig_ptr;
import bits32 "_Perl_sig_num" as @i_Perl_sig_num;
import bits32 "_Perl_sig_name" as @i_Perl_sig_name;
import bits32 "_Perl_no_myglob" as @i_Perl_no_myglob;
import bits32 "_Perl_no_func" as @i_Perl_no_func;
import bits32 "_Perl_no_dir_func" as @i_Perl_no_dir_func;
import bits32 "_Perl_no_sock_func" as @i_Perl_no_sock_func;
import bits32 "_Perl_no_security" as @i_Perl_no_security;
import bits32 "_Perl_no_mem" as @i_Perl_no_mem;
import bits32 "_Perl_no_modify" as @i_Perl_no_modify;
import bits32 "_Perl_no_helem" as @i_Perl_no_helem;
import bits32 "_Perl_no_aelem" as @i_Perl_no_aelem;
import bits32 "_Perl_no_usym" as @i_Perl_no_usym;
import bits32 "_Perl_no_symref" as @i_Perl_no_symref;
import bits32 "_Perl_no_wrongref" as @i_Perl_no_wrongref;
import bits32 "_Perl_warn_nl" as @i_Perl_warn_nl;
import bits32 "_Perl_warn_reserved" as @i_Perl_warn_reserved;
import bits32 "_Perl_warn_nosemi" as @i_Perl_warn_nosemi;
import bits32 "_Perl_warn_uninit" as @i_Perl_warn_uninit;
import bits32 "_Perl_dc" as @i_Perl_dc;
import bits32 "_Perl_ds" as @i_Perl_ds;
import bits32 "_Perl_di" as @i_Perl_di;
import bits32 "_environ" as @i_environ;
import bits32 "_Perl_runops_standard" as @i_Perl_runops_standard;
import bits32 "_getlogin" as @i_getlogin;
import bits32 "_lseek" as @i_lseek;
import bits32 "_crypt" as @i_crypt;
import bits32 "_____isnan" as @i_____isnan;
import bits32 "___isnan" as @i___isnan;
import bits32 "___isinf" as @i___isinf;
import bits32 "___fmod" as @i___fmod;
import bits32 "_fmod" as @i_fmod;
import bits32 "___floor" as @i___floor;
import bits32 "_floor" as @i_floor;
import bits32 "___fabs" as @i___fabs;
import bits32 "_fabs" as @i_fabs;
import bits32 "___ceil" as @i___ceil;
import bits32 "_ceil" as @i_ceil;
import bits32 "___sqrt" as @i___sqrt;
import bits32 "_sqrt" as @i_sqrt;
import bits32 "___pow" as @i___pow;
import bits32 "_pow" as @i_pow;
import bits32 "___modf" as @i___modf;
import bits32 "_modf" as @i_modf;
import bits32 "___log10" as @i___log10;
import bits32 "_log10" as @i_log10;
import bits32 "___log" as @i___log;
import bits32 "_log" as @i_log;
import bits32 "___ldexp" as @i___ldexp;
import bits32 "_ldexp" as @i_ldexp;
import bits32 "___frexp" as @i___frexp;
import bits32 "_frexp" as @i_frexp;
import bits32 "___exp" as @i___exp;
import bits32 "_exp" as @i_exp;
import bits32 "___tanh" as @i___tanh;
import bits32 "_tanh" as @i_tanh;
import bits32 "___sinh" as @i___sinh;
import bits32 "_sinh" as @i_sinh;
import bits32 "___cosh" as @i___cosh;
import bits32 "_cosh" as @i_cosh;
import bits32 "___tan" as @i___tan;
import bits32 "_tan" as @i_tan;
import bits32 "___sin" as @i___sin;
import bits32 "_sin" as @i_sin;
import bits32 "___cos" as @i___cos;
import bits32 "_cos" as @i_cos;
import bits32 "___atan2" as @i___atan2;
import bits32 "_atan2" as @i_atan2;
import bits32 "___atan" as @i___atan;
import bits32 "_atan" as @i_atan;
import bits32 "___asin" as @i___asin;
import bits32 "_asin" as @i_asin;
import bits32 "___acos" as @i___acos;
import bits32 "_acos" as @i_acos;
import bits32 "_mktemp" as @i_mktemp;
import bits32 "_getegid" as @i_getegid;
import bits32 "_getgid" as @i_getgid;
import bits32 "_geteuid" as @i_geteuid;
import bits32 "_getuid" as @i_getuid;
import bits32 "_cast_uv" as @i_cast_uv;
import bits32 "_cast_iv" as @i_cast_iv;
import bits32 "_cast_i32" as @i_cast_i32;
import bits32 "_Perl_cast_ulong" as @i_Perl_cast_ulong;
import bits32 "_optype_size" as @i_optype_size;
import bits32 "_Perl_bset_obj_store" as @i_Perl_bset_obj_store;
import bits32 "_Perl_opargs" as @i_Perl_opargs;
import bits32 "_Perl_check" as @i_Perl_check;
import bits32 "_Perl_ppaddr" as @i_Perl_ppaddr;
import bits32 "_Perl_pp_threadsv" as @i_Perl_pp_threadsv;
import bits32 "_Perl_pp_lock" as @i_Perl_pp_lock;
import bits32 "_Perl_pp_syscall" as @i_Perl_pp_syscall;
import bits32 "_Perl_pp_getlogin" as @i_Perl_pp_getlogin;
import bits32 "_Perl_pp_egrent" as @i_Perl_pp_egrent;
import bits32 "_Perl_pp_sgrent" as @i_Perl_pp_sgrent;
import bits32 "_Perl_pp_ggrent" as @i_Perl_pp_ggrent;
import bits32 "_Perl_pp_ggrgid" as @i_Perl_pp_ggrgid;
import bits32 "_Perl_pp_ggrnam" as @i_Perl_pp_ggrnam;
import bits32 "_Perl_pp_epwent" as @i_Perl_pp_epwent;
import bits32 "_Perl_pp_spwent" as @i_Perl_pp_spwent;
import bits32 "_Perl_pp_gpwent" as @i_Perl_pp_gpwent;
import bits32 "_Perl_pp_gpwuid" as @i_Perl_pp_gpwuid;
import bits32 "_Perl_pp_gpwnam" as @i_Perl_pp_gpwnam;
import bits32 "_Perl_pp_eservent" as @i_Perl_pp_eservent;
import bits32 "_Perl_pp_eprotoent" as @i_Perl_pp_eprotoent;
import bits32 "_Perl_pp_enetent" as @i_Perl_pp_enetent;
import bits32 "_Perl_pp_ehostent" as @i_Perl_pp_ehostent;
import bits32 "_Perl_pp_sservent" as @i_Perl_pp_sservent;
import bits32 "_Perl_pp_sprotoent" as @i_Perl_pp_sprotoent;
import bits32 "_Perl_pp_snetent" as @i_Perl_pp_snetent;
import bits32 "_Perl_pp_shostent" as @i_Perl_pp_shostent;
import bits32 "_Perl_pp_gservent" as @i_Perl_pp_gservent;
import bits32 "_Perl_pp_gsbyport" as @i_Perl_pp_gsbyport;
import bits32 "_Perl_pp_gsbyname" as @i_Perl_pp_gsbyname;
import bits32 "_Perl_pp_gprotoent" as @i_Perl_pp_gprotoent;
import bits32 "_Perl_pp_gpbynumber" as @i_Perl_pp_gpbynumber;
import bits32 "_Perl_pp_gpbyname" as @i_Perl_pp_gpbyname;
import bits32 "_Perl_pp_gnetent" as @i_Perl_pp_gnetent;
import bits32 "_Perl_pp_gnbyaddr" as @i_Perl_pp_gnbyaddr;
import bits32 "_Perl_pp_gnbyname" as @i_Perl_pp_gnbyname;
import bits32 "_Perl_pp_ghostent" as @i_Perl_pp_ghostent;
import bits32 "_Perl_pp_ghbyaddr" as @i_Perl_pp_ghbyaddr;
import bits32 "_Perl_pp_ghbyname" as @i_Perl_pp_ghbyname;
import bits32 "_Perl_pp_leavetry" as @i_Perl_pp_leavetry;
import bits32 "_Perl_pp_entertry" as @i_Perl_pp_entertry;
import bits32 "_Perl_pp_leaveeval" as @i_Perl_pp_leaveeval;
import bits32 "_Perl_pp_entereval" as @i_Perl_pp_entereval;
import bits32 "_Perl_pp_dofile" as @i_Perl_pp_dofile;
import bits32 "_Perl_pp_require" as @i_Perl_pp_require;
import bits32 "_Perl_pp_semop" as @i_Perl_pp_semop;
import bits32 "_Perl_pp_semctl" as @i_Perl_pp_semctl;
import bits32 "_Perl_pp_semget" as @i_Perl_pp_semget;
import bits32 "_Perl_pp_msgrcv" as @i_Perl_pp_msgrcv;
import bits32 "_Perl_pp_msgsnd" as @i_Perl_pp_msgsnd;
import bits32 "_Perl_pp_msgctl" as @i_Perl_pp_msgctl;
import bits32 "_Perl_pp_msgget" as @i_Perl_pp_msgget;
import bits32 "_Perl_pp_shmwrite" as @i_Perl_pp_shmwrite;
import bits32 "_Perl_pp_shmread" as @i_Perl_pp_shmread;
import bits32 "_Perl_pp_shmctl" as @i_Perl_pp_shmctl;
import bits32 "_Perl_pp_shmget" as @i_Perl_pp_shmget;
import bits32 "_Perl_pp_sleep" as @i_Perl_pp_sleep;
import bits32 "_Perl_pp_alarm" as @i_Perl_pp_alarm;
import bits32 "_Perl_pp_gmtime" as @i_Perl_pp_gmtime;
import bits32 "_Perl_pp_localtime" as @i_Perl_pp_localtime;
import bits32 "_Perl_pp_tms" as @i_Perl_pp_tms;
import bits32 "_Perl_pp_time" as @i_Perl_pp_time;
import bits32 "_Perl_pp_setpriority" as @i_Perl_pp_setpriority;
import bits32 "_Perl_pp_getpriority" as @i_Perl_pp_getpriority;
import bits32 "_Perl_pp_setpgrp" as @i_Perl_pp_setpgrp;
import bits32 "_Perl_pp_getpgrp" as @i_Perl_pp_getpgrp;
import bits32 "_Perl_pp_getppid" as @i_Perl_pp_getppid;
import bits32 "_Perl_pp_kill" as @i_Perl_pp_kill;
import bits32 "_Perl_pp_exec" as @i_Perl_pp_exec;
import bits32 "_Perl_pp_system" as @i_Perl_pp_system;
import bits32 "_Perl_pp_waitpid" as @i_Perl_pp_waitpid;
import bits32 "_Perl_pp_wait" as @i_Perl_pp_wait;
import bits32 "_Perl_pp_fork" as @i_Perl_pp_fork;
import bits32 "_Perl_pp_closedir" as @i_Perl_pp_closedir;
import bits32 "_Perl_pp_rewinddir" as @i_Perl_pp_rewinddir;
import bits32 "_Perl_pp_seekdir" as @i_Perl_pp_seekdir;
import bits32 "_Perl_pp_telldir" as @i_Perl_pp_telldir;
import bits32 "_Perl_pp_readdir" as @i_Perl_pp_readdir;
import bits32 "_Perl_pp_open_dir" as @i_Perl_pp_open_dir;
import bits32 "_Perl_pp_rmdir" as @i_Perl_pp_rmdir;
import bits32 "_Perl_pp_mkdir" as @i_Perl_pp_mkdir;
import bits32 "_Perl_pp_readlink" as @i_Perl_pp_readlink;
import bits32 "_Perl_pp_symlink" as @i_Perl_pp_symlink;
import bits32 "_Perl_pp_link" as @i_Perl_pp_link;
import bits32 "_Perl_pp_rename" as @i_Perl_pp_rename;
import bits32 "_Perl_pp_utime" as @i_Perl_pp_utime;
import bits32 "_Perl_pp_chmod" as @i_Perl_pp_chmod;
import bits32 "_Perl_pp_unlink" as @i_Perl_pp_unlink;
import bits32 "_Perl_pp_chroot" as @i_Perl_pp_chroot;
import bits32 "_Perl_pp_chown" as @i_Perl_pp_chown;
import bits32 "_Perl_pp_chdir" as @i_Perl_pp_chdir;
import bits32 "_Perl_pp_ftbinary" as @i_Perl_pp_ftbinary;
import bits32 "_Perl_pp_fttext" as @i_Perl_pp_fttext;
import bits32 "_Perl_pp_fttty" as @i_Perl_pp_fttty;
import bits32 "_Perl_pp_ftsvtx" as @i_Perl_pp_ftsvtx;
import bits32 "_Perl_pp_ftsgid" as @i_Perl_pp_ftsgid;
import bits32 "_Perl_pp_ftsuid" as @i_Perl_pp_ftsuid;
import bits32 "_Perl_pp_ftlink" as @i_Perl_pp_ftlink;
import bits32 "_Perl_pp_ftpipe" as @i_Perl_pp_ftpipe;
import bits32 "_Perl_pp_ftdir" as @i_Perl_pp_ftdir;
import bits32 "_Perl_pp_ftfile" as @i_Perl_pp_ftfile;
import bits32 "_Perl_pp_ftblk" as @i_Perl_pp_ftblk;
import bits32 "_Perl_pp_ftchr" as @i_Perl_pp_ftchr;
import bits32 "_Perl_pp_ftsock" as @i_Perl_pp_ftsock;
import bits32 "_Perl_pp_ftctime" as @i_Perl_pp_ftctime;
import bits32 "_Perl_pp_ftatime" as @i_Perl_pp_ftatime;
import bits32 "_Perl_pp_ftmtime" as @i_Perl_pp_ftmtime;
import bits32 "_Perl_pp_ftsize" as @i_Perl_pp_ftsize;
import bits32 "_Perl_pp_ftzero" as @i_Perl_pp_ftzero;
import bits32 "_Perl_pp_ftrowned" as @i_Perl_pp_ftrowned;
import bits32 "_Perl_pp_fteowned" as @i_Perl_pp_fteowned;
import bits32 "_Perl_pp_ftis" as @i_Perl_pp_ftis;
import bits32 "_Perl_pp_fteexec" as @i_Perl_pp_fteexec;
import bits32 "_Perl_pp_ftewrite" as @i_Perl_pp_ftewrite;
import bits32 "_Perl_pp_fteread" as @i_Perl_pp_fteread;
import bits32 "_Perl_pp_ftrexec" as @i_Perl_pp_ftrexec;
import bits32 "_Perl_pp_ftrwrite" as @i_Perl_pp_ftrwrite;
import bits32 "_Perl_pp_ftrread" as @i_Perl_pp_ftrread;
import bits32 "_Perl_pp_stat" as @i_Perl_pp_stat;
import bits32 "_Perl_pp_lstat" as @i_Perl_pp_lstat;
import bits32 "_Perl_pp_getpeername" as @i_Perl_pp_getpeername;
import bits32 "_Perl_pp_getsockname" as @i_Perl_pp_getsockname;
import bits32 "_Perl_pp_ssockopt" as @i_Perl_pp_ssockopt;
import bits32 "_Perl_pp_gsockopt" as @i_Perl_pp_gsockopt;
import bits32 "_Perl_pp_shutdown" as @i_Perl_pp_shutdown;
import bits32 "_Perl_pp_accept" as @i_Perl_pp_accept;
import bits32 "_Perl_pp_listen" as @i_Perl_pp_listen;
import bits32 "_Perl_pp_connect" as @i_Perl_pp_connect;
import bits32 "_Perl_pp_bind" as @i_Perl_pp_bind;
import bits32 "_Perl_pp_sockpair" as @i_Perl_pp_sockpair;
import bits32 "_Perl_pp_socket" as @i_Perl_pp_socket;
import bits32 "_Perl_pp_flock" as @i_Perl_pp_flock;
import bits32 "_Perl_pp_ioctl" as @i_Perl_pp_ioctl;
import bits32 "_Perl_pp_fcntl" as @i_Perl_pp_fcntl;
import bits32 "_Perl_pp_truncate" as @i_Perl_pp_truncate;
import bits32 "_Perl_pp_seek" as @i_Perl_pp_seek;
import bits32 "_Perl_pp_tell" as @i_Perl_pp_tell;
import bits32 "_Perl_pp_eof" as @i_Perl_pp_eof;
import bits32 "_Perl_pp_recv" as @i_Perl_pp_recv;
import bits32 "_Perl_pp_send" as @i_Perl_pp_send;
import bits32 "_Perl_pp_syswrite" as @i_Perl_pp_syswrite;
import bits32 "_Perl_pp_sysread" as @i_Perl_pp_sysread;
import bits32 "_Perl_pp_sysseek" as @i_Perl_pp_sysseek;
import bits32 "_Perl_pp_sysopen" as @i_Perl_pp_sysopen;
import bits32 "_Perl_pp_print" as @i_Perl_pp_print;
import bits32 "_Perl_pp_prtf" as @i_Perl_pp_prtf;
import bits32 "_Perl_pp_leavewrite" as @i_Perl_pp_leavewrite;
import bits32 "_Perl_pp_enterwrite" as @i_Perl_pp_enterwrite;
import bits32 "_Perl_pp_read" as @i_Perl_pp_read;
import bits32 "_Perl_pp_getc" as @i_Perl_pp_getc;
import bits32 "_Perl_pp_select" as @i_Perl_pp_select;
import bits32 "_Perl_pp_sselect" as @i_Perl_pp_sselect;
import bits32 "_Perl_pp_dbmclose" as @i_Perl_pp_dbmclose;
import bits32 "_Perl_pp_dbmopen" as @i_Perl_pp_dbmopen;
import bits32 "_Perl_pp_tied" as @i_Perl_pp_tied;
import bits32 "_Perl_pp_untie" as @i_Perl_pp_untie;
import bits32 "_Perl_pp_tie" as @i_Perl_pp_tie;
import bits32 "_Perl_pp_binmode" as @i_Perl_pp_binmode;
import bits32 "_Perl_pp_umask" as @i_Perl_pp_umask;
import bits32 "_Perl_pp_fileno" as @i_Perl_pp_fileno;
import bits32 "_Perl_pp_pipe_op" as @i_Perl_pp_pipe_op;
import bits32 "_Perl_pp_close" as @i_Perl_pp_close;
import bits32 "_Perl_pp_open" as @i_Perl_pp_open;
import bits32 "_Perl_pp_exit" as @i_Perl_pp_exit;
import bits32 "_Perl_pp_goto" as @i_Perl_pp_goto;
import bits32 "_Perl_pp_dump" as @i_Perl_pp_dump;
import bits32 "_Perl_pp_redo" as @i_Perl_pp_redo;
import bits32 "_Perl_pp_next" as @i_Perl_pp_next;
import bits32 "_Perl_pp_last" as @i_Perl_pp_last;
import bits32 "_Perl_pp_return" as @i_Perl_pp_return;
import bits32 "_Perl_pp_leaveloop" as @i_Perl_pp_leaveloop;
import bits32 "_Perl_pp_enterloop" as @i_Perl_pp_enterloop;
import bits32 "_Perl_pp_iter" as @i_Perl_pp_iter;
import bits32 "_Perl_pp_enteriter" as @i_Perl_pp_enteriter;
import bits32 "_Perl_pp_scope" as @i_Perl_pp_scope;
import bits32 "_Perl_pp_leave" as @i_Perl_pp_leave;
import bits32 "_Perl_pp_enter" as @i_Perl_pp_enter;
import bits32 "_Perl_pp_unstack" as @i_Perl_pp_unstack;
import bits32 "_Perl_pp_dbstate" as @i_Perl_pp_dbstate;
import bits32 "_Perl_pp_nextstate" as @i_Perl_pp_nextstate;
import bits32 "_Perl_pp_lineseq" as @i_Perl_pp_lineseq;
import bits32 "_Perl_pp_reset" as @i_Perl_pp_reset;
import bits32 "_Perl_pp_die" as @i_Perl_pp_die;
import bits32 "_Perl_pp_warn" as @i_Perl_pp_warn;
import bits32 "_Perl_pp_caller" as @i_Perl_pp_caller;
import bits32 "_Perl_pp_leavesub" as @i_Perl_pp_leavesub;
import bits32 "_Perl_pp_entersub" as @i_Perl_pp_entersub;
import bits32 "_Perl_pp_method" as @i_Perl_pp_method;
import bits32 "_Perl_pp_orassign" as @i_Perl_pp_orassign;
import bits32 "_Perl_pp_andassign" as @i_Perl_pp_andassign;
import bits32 "_Perl_pp_cond_expr" as @i_Perl_pp_cond_expr;
import bits32 "_Perl_pp_xor" as @i_Perl_pp_xor;
import bits32 "_Perl_pp_or" as @i_Perl_pp_or;
import bits32 "_Perl_pp_and" as @i_Perl_pp_and;
import bits32 "_Perl_pp_flop" as @i_Perl_pp_flop;
import bits32 "_Perl_pp_flip" as @i_Perl_pp_flip;
import bits32 "_Perl_pp_range" as @i_Perl_pp_range;
import bits32 "_Perl_pp_mapwhile" as @i_Perl_pp_mapwhile;
import bits32 "_Perl_pp_mapstart" as @i_Perl_pp_mapstart;
import bits32 "_Perl_pp_grepwhile" as @i_Perl_pp_grepwhile;
import bits32 "_Perl_pp_grepstart" as @i_Perl_pp_grepstart;
import bits32 "_Perl_pp_reverse" as @i_Perl_pp_reverse;
import bits32 "_Perl_pp_sort" as @i_Perl_pp_sort;
import bits32 "_Perl_pp_unshift" as @i_Perl_pp_unshift;
import bits32 "_Perl_pp_shift" as @i_Perl_pp_shift;
import bits32 "_Perl_pp_pop" as @i_Perl_pp_pop;
import bits32 "_Perl_pp_push" as @i_Perl_pp_push;
import bits32 "_Perl_pp_splice" as @i_Perl_pp_splice;
import bits32 "_Perl_pp_anonhash" as @i_Perl_pp_anonhash;
import bits32 "_Perl_pp_anonlist" as @i_Perl_pp_anonlist;
import bits32 "_Perl_pp_lslice" as @i_Perl_pp_lslice;
import bits32 "_Perl_pp_list" as @i_Perl_pp_list;
import bits32 "_Perl_pp_join" as @i_Perl_pp_join;
import bits32 "_Perl_pp_split" as @i_Perl_pp_split;
import bits32 "_Perl_pp_pack" as @i_Perl_pp_pack;
import bits32 "_Perl_pp_unpack" as @i_Perl_pp_unpack;
import bits32 "_Perl_pp_hslice" as @i_Perl_pp_hslice;
import bits32 "_Perl_pp_helem" as @i_Perl_pp_helem;
import bits32 "_Perl_pp_rv2hv" as @i_Perl_pp_rv2hv;
import bits32 "_Perl_pp_exists" as @i_Perl_pp_exists;
import bits32 "_Perl_pp_delete" as @i_Perl_pp_delete;
import bits32 "_Perl_pp_keys" as @i_Perl_pp_keys;
import bits32 "_Perl_pp_values" as @i_Perl_pp_values;
import bits32 "_Perl_pp_each" as @i_Perl_pp_each;
import bits32 "_Perl_pp_aslice" as @i_Perl_pp_aslice;
import bits32 "_Perl_pp_aelem" as @i_Perl_pp_aelem;
import bits32 "_Perl_pp_aelemfast" as @i_Perl_pp_aelemfast;
import bits32 "_Perl_pp_rv2av" as @i_Perl_pp_rv2av;
import bits32 "_Perl_pp_quotemeta" as @i_Perl_pp_quotemeta;
import bits32 "_Perl_pp_lc" as @i_Perl_pp_lc;
import bits32 "_Perl_pp_uc" as @i_Perl_pp_uc;
import bits32 "_Perl_pp_lcfirst" as @i_Perl_pp_lcfirst;
import bits32 "_Perl_pp_ucfirst" as @i_Perl_pp_ucfirst;
import bits32 "_Perl_pp_crypt" as @i_Perl_pp_crypt;
import bits32 "_Perl_pp_chr" as @i_Perl_pp_chr;
import bits32 "_Perl_pp_ord" as @i_Perl_pp_ord;
import bits32 "_Perl_pp_formline" as @i_Perl_pp_formline;
import bits32 "_Perl_pp_sprintf" as @i_Perl_pp_sprintf;
import bits32 "_Perl_pp_rindex" as @i_Perl_pp_rindex;
import bits32 "_Perl_pp_index" as @i_Perl_pp_index;
import bits32 "_Perl_pp_vec" as @i_Perl_pp_vec;
import bits32 "_Perl_pp_substr" as @i_Perl_pp_substr;
import bits32 "_Perl_pp_length" as @i_Perl_pp_length;
import bits32 "_Perl_pp_abs" as @i_Perl_pp_abs;
import bits32 "_Perl_pp_oct" as @i_Perl_pp_oct;
import bits32 "_Perl_pp_hex" as @i_Perl_pp_hex;
import bits32 "_Perl_pp_int" as @i_Perl_pp_int;
import bits32 "_Perl_pp_sqrt" as @i_Perl_pp_sqrt;
import bits32 "_Perl_pp_log" as @i_Perl_pp_log;
import bits32 "_Perl_pp_exp" as @i_Perl_pp_exp;
import bits32 "_Perl_pp_srand" as @i_Perl_pp_srand;
import bits32 "_Perl_pp_rand" as @i_Perl_pp_rand;
import bits32 "_Perl_pp_cos" as @i_Perl_pp_cos;
import bits32 "_Perl_pp_sin" as @i_Perl_pp_sin;
import bits32 "_Perl_pp_atan2" as @i_Perl_pp_atan2;
import bits32 "_Perl_pp_complement" as @i_Perl_pp_complement;
import bits32 "_Perl_pp_not" as @i_Perl_pp_not;
import bits32 "_Perl_pp_i_negate" as @i_Perl_pp_i_negate;
import bits32 "_Perl_pp_negate" as @i_Perl_pp_negate;
import bits32 "_Perl_pp_bit_or" as @i_Perl_pp_bit_or;
import bits32 "_Perl_pp_bit_xor" as @i_Perl_pp_bit_xor;
import bits32 "_Perl_pp_bit_and" as @i_Perl_pp_bit_and;
import bits32 "_Perl_pp_scmp" as @i_Perl_pp_scmp;
import bits32 "_Perl_pp_sne" as @i_Perl_pp_sne;
import bits32 "_Perl_pp_seq" as @i_Perl_pp_seq;
import bits32 "_Perl_pp_sge" as @i_Perl_pp_sge;
import bits32 "_Perl_pp_sle" as @i_Perl_pp_sle;
import bits32 "_Perl_pp_sgt" as @i_Perl_pp_sgt;
import bits32 "_Perl_pp_slt" as @i_Perl_pp_slt;
import bits32 "_Perl_pp_i_ncmp" as @i_Perl_pp_i_ncmp;
import bits32 "_Perl_pp_ncmp" as @i_Perl_pp_ncmp;
import bits32 "_Perl_pp_i_ne" as @i_Perl_pp_i_ne;
import bits32 "_Perl_pp_ne" as @i_Perl_pp_ne;
import bits32 "_Perl_pp_i_eq" as @i_Perl_pp_i_eq;
import bits32 "_Perl_pp_eq" as @i_Perl_pp_eq;
import bits32 "_Perl_pp_i_ge" as @i_Perl_pp_i_ge;
import bits32 "_Perl_pp_ge" as @i_Perl_pp_ge;
import bits32 "_Perl_pp_i_le" as @i_Perl_pp_i_le;
import bits32 "_Perl_pp_le" as @i_Perl_pp_le;
import bits32 "_Perl_pp_i_gt" as @i_Perl_pp_i_gt;
import bits32 "_Perl_pp_gt" as @i_Perl_pp_gt;
import bits32 "_Perl_pp_i_lt" as @i_Perl_pp_i_lt;
import bits32 "_Perl_pp_lt" as @i_Perl_pp_lt;
import bits32 "_Perl_pp_right_shift" as @i_Perl_pp_right_shift;
import bits32 "_Perl_pp_left_shift" as @i_Perl_pp_left_shift;
import bits32 "_Perl_pp_stringify" as @i_Perl_pp_stringify;
import bits32 "_Perl_pp_concat" as @i_Perl_pp_concat;
import bits32 "_Perl_pp_i_subtract" as @i_Perl_pp_i_subtract;
import bits32 "_Perl_pp_subtract" as @i_Perl_pp_subtract;
import bits32 "_Perl_pp_i_add" as @i_Perl_pp_i_add;
import bits32 "_Perl_pp_add" as @i_Perl_pp_add;
import bits32 "_Perl_pp_repeat" as @i_Perl_pp_repeat;
import bits32 "_Perl_pp_i_modulo" as @i_Perl_pp_i_modulo;
import bits32 "_Perl_pp_modulo" as @i_Perl_pp_modulo;
import bits32 "_Perl_pp_i_divide" as @i_Perl_pp_i_divide;
import bits32 "_Perl_pp_divide" as @i_Perl_pp_divide;
import bits32 "_Perl_pp_i_multiply" as @i_Perl_pp_i_multiply;
import bits32 "_Perl_pp_multiply" as @i_Perl_pp_multiply;
import bits32 "_Perl_pp_pow" as @i_Perl_pp_pow;
import bits32 "_Perl_pp_postdec" as @i_Perl_pp_postdec;
import bits32 "_Perl_pp_postinc" as @i_Perl_pp_postinc;
import bits32 "_Perl_pp_predec" as @i_Perl_pp_predec;
import bits32 "_Perl_pp_preinc" as @i_Perl_pp_preinc;
import bits32 "_Perl_pp_pos" as @i_Perl_pp_pos;
import bits32 "_Perl_pp_study" as @i_Perl_pp_study;
import bits32 "_Perl_pp_undef" as @i_Perl_pp_undef;
import bits32 "_Perl_pp_defined" as @i_Perl_pp_defined;
import bits32 "_Perl_pp_schomp" as @i_Perl_pp_schomp;
import bits32 "_Perl_pp_chomp" as @i_Perl_pp_chomp;
import bits32 "_Perl_pp_schop" as @i_Perl_pp_schop;
import bits32 "_Perl_pp_chop" as @i_Perl_pp_chop;
import bits32 "_Perl_pp_aassign" as @i_Perl_pp_aassign;
import bits32 "_Perl_pp_sassign" as @i_Perl_pp_sassign;
import bits32 "_Perl_pp_trans" as @i_Perl_pp_trans;
import bits32 "_Perl_pp_substcont" as @i_Perl_pp_substcont;
import bits32 "_Perl_pp_subst" as @i_Perl_pp_subst;
import bits32 "_Perl_pp_qr" as @i_Perl_pp_qr;
import bits32 "_Perl_pp_match" as @i_Perl_pp_match;
import bits32 "_Perl_pp_regcomp" as @i_Perl_pp_regcomp;
import bits32 "_Perl_pp_regcreset" as @i_Perl_pp_regcreset;
import bits32 "_Perl_pp_regcmaybe" as @i_Perl_pp_regcmaybe;
import bits32 "_Perl_pp_rcatline" as @i_Perl_pp_rcatline;
import bits32 "_Perl_pp_readline" as @i_Perl_pp_readline;
import bits32 "_Perl_pp_glob" as @i_Perl_pp_glob;
import bits32 "_Perl_pp_backtick" as @i_Perl_pp_backtick;
import bits32 "_Perl_pp_bless" as @i_Perl_pp_bless;
import bits32 "_Perl_pp_ref" as @i_Perl_pp_ref;
import bits32 "_Perl_pp_srefgen" as @i_Perl_pp_srefgen;
import bits32 "_Perl_pp_refgen" as @i_Perl_pp_refgen;
import bits32 "_Perl_pp_prototype" as @i_Perl_pp_prototype;
import bits32 "_Perl_pp_anoncode" as @i_Perl_pp_anoncode;
import bits32 "_Perl_pp_rv2cv" as @i_Perl_pp_rv2cv;
import bits32 "_Perl_pp_av2arylen" as @i_Perl_pp_av2arylen;
import bits32 "_Perl_pp_rv2sv" as @i_Perl_pp_rv2sv;
import bits32 "_Perl_pp_rv2gv" as @i_Perl_pp_rv2gv;
import bits32 "_Perl_pp_pushre" as @i_Perl_pp_pushre;
import bits32 "_Perl_pp_padany" as @i_Perl_pp_padany;
import bits32 "_Perl_pp_padhv" as @i_Perl_pp_padhv;
import bits32 "_Perl_pp_padav" as @i_Perl_pp_padav;
import bits32 "_Perl_pp_padsv" as @i_Perl_pp_padsv;
import bits32 "_Perl_pp_gelem" as @i_Perl_pp_gelem;
import bits32 "_Perl_pp_gv" as @i_Perl_pp_gv;
import bits32 "_Perl_pp_gvsv" as @i_Perl_pp_gvsv;
import bits32 "_Perl_pp_const" as @i_Perl_pp_const;
import bits32 "_Perl_pp_wantarray" as @i_Perl_pp_wantarray;
import bits32 "_Perl_pp_pushmark" as @i_Perl_pp_pushmark;
import bits32 "_Perl_pp_scalar" as @i_Perl_pp_scalar;
import bits32 "_Perl_pp_stub" as @i_Perl_pp_stub;
import bits32 "_Perl_pp_null" as @i_Perl_pp_null;
import bits32 "_Perl_ck_trunc" as @i_Perl_ck_trunc;
import bits32 "_Perl_ck_svconst" as @i_Perl_ck_svconst;
import bits32 "_Perl_ck_subr" as @i_Perl_ck_subr;
import bits32 "_Perl_ck_split" as @i_Perl_ck_split;
import bits32 "_Perl_ck_spair" as @i_Perl_ck_spair;
import bits32 "_Perl_ck_sort" as @i_Perl_ck_sort;
import bits32 "_Perl_ck_shift" as @i_Perl_ck_shift;
import bits32 "_Perl_ck_select" as @i_Perl_ck_select;
import bits32 "_Perl_ck_scmp" as @i_Perl_ck_scmp;
import bits32 "_Perl_ck_rvconst" as @i_Perl_ck_rvconst;
import bits32 "_Perl_ck_rfun" as @i_Perl_ck_rfun;
import bits32 "_Perl_ck_require" as @i_Perl_ck_require;
import bits32 "_Perl_ck_repeat" as @i_Perl_ck_repeat;
import bits32 "_Perl_ck_null" as @i_Perl_ck_null;
import bits32 "_Perl_ck_match" as @i_Perl_ck_match;
import bits32 "_Perl_ck_listiob" as @i_Perl_ck_listiob;
import bits32 "_Perl_ck_lfun" as @i_Perl_ck_lfun;
import bits32 "_Perl_ck_lengthconst" as @i_Perl_ck_lengthconst;
import bits32 "_Perl_ck_index" as @i_Perl_ck_index;
import bits32 "_Perl_ck_grep" as @i_Perl_ck_grep;
import bits32 "_Perl_ck_glob" as @i_Perl_ck_glob;
import bits32 "_Perl_ck_fun_locale" as @i_Perl_ck_fun_locale;
import bits32 "_Perl_ck_fun" as @i_Perl_ck_fun;
import bits32 "_Perl_ck_ftst" as @i_Perl_ck_ftst;
import bits32 "_Perl_ck_exists" as @i_Perl_ck_exists;
import bits32 "_Perl_ck_exec" as @i_Perl_ck_exec;
import bits32 "_Perl_ck_eval" as @i_Perl_ck_eval;
import bits32 "_Perl_ck_eof" as @i_Perl_ck_eof;
import bits32 "_Perl_ck_delete" as @i_Perl_ck_delete;
import bits32 "_Perl_ck_concat" as @i_Perl_ck_concat;
import bits32 "_Perl_ck_bitop" as @i_Perl_ck_bitop;
import bits32 "_Perl_ck_anoncode" as @i_Perl_ck_anoncode;
import bits32 "_Perl_op_desc" as @i_Perl_op_desc;
import bits32 "_Perl_op_name" as @i_Perl_op_name;
import bits32 "___libc_current_sigrtmax" as @i___libc_current_sigrtmax;
import bits32 "___libc_current_sigrtmin" as @i___libc_current_sigrtmin;
import bits32 "_sigwait" as @i_sigwait;
import bits32 "_sigpending" as @i_sigpending;
import bits32 "_sigaction" as @i_sigaction;
import bits32 "___sigaction" as @i___sigaction;
import bits32 "_sigsuspend" as @i_sigsuspend;
import bits32 "_sigprocmask" as @i_sigprocmask;
import bits32 "_sigismember" as @i_sigismember;
import bits32 "_sigdelset" as @i_sigdelset;
import bits32 "_sigaddset" as @i_sigaddset;
import bits32 "_sigfillset" as @i_sigfillset;
import bits32 "_sigemptyset" as @i_sigemptyset;
import bits32 "___sigpause" as @i___sigpause;
import bits32 "_raise" as @i_raise;
import bits32 "_kill" as @i_kill;
import bits32 "___sysv_signal" as @i___sysv_signal;
import bits32 "___sigdelset" as @i___sigdelset;
import bits32 "___sigaddset" as @i___sigaddset;
import bits32 "___sigismember" as @i___sigismember;
import bits32 "_rewinddir" as @i_rewinddir;
import bits32 "_readdir_r" as @i_readdir_r;
import bits32 "_readdir" as @i_readdir;
import bits32 "_closedir" as @i_closedir;
import bits32 "_opendir" as @i_opendir;
import bits32 "_ioctl" as @i_ioctl;
import bits32 "___errno_location" as @i___errno_location;
import bits32 "_errno" as @i_errno;
import bits32 "_times" as @i_times;
import bits32 "_utimes" as @i_utimes;
import bits32 "_setitimer" as @i_setitimer;
import bits32 "_getitimer" as @i_getitimer;
import bits32 "_adjtime" as @i_adjtime;
import bits32 "_settimeofday" as @i_settimeofday;
import bits32 "_gettimeofday" as @i_gettimeofday;
import bits32 "_select" as @i_select;
import bits32 "___select" as @i___select;
import bits32 "_tzset" as @i_tzset;
import bits32 "_tzname" as @i_tzname;
import bits32 "___timezone" as @i___timezone;
import bits32 "___daylight" as @i___daylight;
import bits32 "___tzname" as @i___tzname;
import bits32 "_ctime_r" as @i_ctime_r;
import bits32 "_asctime_r" as @i_asctime_r;
import bits32 "_ctime" as @i_ctime;
import bits32 "_asctime" as @i_asctime;
import bits32 "_localtime_r" as @i_localtime_r;
import bits32 "_gmtime_r" as @i_gmtime_r;
import bits32 "___gmtime_r" as @i___gmtime_r;
import bits32 "_localtime" as @i_localtime;
import bits32 "_gmtime" as @i_gmtime;
import bits32 "_strftime" as @i_strftime;
import bits32 "_mktime" as @i_mktime;
import bits32 "_difftime" as @i_difftime;
import bits32 "_time" as @i_time;
import bits32 "_clock" as @i_clock;
import bits32 "___xmknod" as @i___xmknod;
import bits32 "___lxstat" as @i___lxstat;
import bits32 "___xstat" as @i___xstat;
import bits32 "___fxstat" as @i___fxstat;
import bits32 "_mkfifo" as @i_mkfifo;
import bits32 "_mkdir" as @i_mkdir;
import bits32 "_umask" as @i_umask;
import bits32 "_chmod" as @i_chmod;
import bits32 "_fstat" as @i_fstat;
import bits32 "_stat" as @i_stat;
import bits32 "___bzero" as @i___bzero;
import bits32 "_strerror" as @i_strerror;
import bits32 "_strlen" as @i_strlen;
import bits32 "_strtok_r" as @i_strtok_r;
import bits32 "___strtok_r" as @i___strtok_r;
import bits32 "_strtok" as @i_strtok;
import bits32 "_strstr" as @i_strstr;
import bits32 "_strpbrk" as @i_strpbrk;
import bits32 "_strspn" as @i_strspn;
import bits32 "_strcspn" as @i_strcspn;
import bits32 "_strrchr" as @i_strrchr;
import bits32 "_strchr" as @i_strchr;
import bits32 "_strxfrm" as @i_strxfrm;
import bits32 "_strcoll" as @i_strcoll;
import bits32 "_strncmp" as @i_strncmp;
import bits32 "_strcmp" as @i_strcmp;
import bits32 "_strncat" as @i_strncat;
import bits32 "_strcat" as @i_strcat;
import bits32 "_strncpy" as @i_strncpy;
import bits32 "_strcpy" as @i_strcpy;
import bits32 "_memchr" as @i_memchr;
import bits32 "_memcmp" as @i_memcmp;
import bits32 "_memset" as @i_memset;
import bits32 "_memmove" as @i_memmove;
import bits32 "_memcpy" as @i_memcpy;
import bits32 "_wcstombs" as @i_wcstombs;
import bits32 "_mbstowcs" as @i_mbstowcs;
import bits32 "_wctomb" as @i_wctomb;
import bits32 "_mbtowc" as @i_mbtowc;
import bits32 "_mblen" as @i_mblen;
import bits32 "_ldiv" as @i_ldiv;
import bits32 "_div" as @i_div;
import bits32 "_labs" as @i_labs;
import bits32 "_abs" as @i_abs;
import bits32 "_qsort" as @i_qsort;
import bits32 "_bsearch" as @i_bsearch;
import bits32 "_system" as @i_system;
import bits32 "___secure_getenv" as @i___secure_getenv;
import bits32 "_getenv" as @i_getenv;
import bits32 "_exit" as @i_exit;
import bits32 "_atexit" as @i_atexit;
import bits32 "_abort" as @i_abort;
import bits32 "_free" as @i_free;
import bits32 "_realloc" as @i_realloc;
import bits32 "_calloc" as @i_calloc;
import bits32 "_malloc" as @i_malloc;
import bits32 "_rand_r" as @i_rand_r;
import bits32 "_srand" as @i_srand;
import bits32 "_rand" as @i_rand;
import bits32 "___strtoul_internal" as @i___strtoul_internal;
import bits32 "___strtol_internal" as @i___strtol_internal;
import bits32 "___strtold_internal" as @i___strtold_internal;
import bits32 "___strtof_internal" as @i___strtof_internal;
import bits32 "___strtod_internal" as @i___strtod_internal;
import bits32 "_strtoul" as @i_strtoul;
import bits32 "_strtol" as @i_strtol;
import bits32 "_strtod" as @i_strtod;
import bits32 "_atol" as @i_atol;
import bits32 "_atoi" as @i_atoi;
import bits32 "_atof" as @i_atof;
import bits32 "___ctype_get_mb_cur_max" as @i___ctype_get_mb_cur_max;
import bits32 "_siglongjmp" as @i_siglongjmp;
import bits32 "_longjmp" as @i_longjmp;
import bits32 "___sigsetjmp" as @i___sigsetjmp;
import bits32 "_localeconv" as @i_localeconv;
import bits32 "_setlocale" as @i_setlocale;
import bits32 "_toupper" as @i_toupper;
import bits32 "_tolower" as @i_tolower;
import bits32 "_isxdigit" as @i_isxdigit;
import bits32 "_isupper" as @i_isupper;
import bits32 "_isspace" as @i_isspace;
import bits32 "_ispunct" as @i_ispunct;
import bits32 "_isprint" as @i_isprint;
import bits32 "_isgraph" as @i_isgraph;
import bits32 "_islower" as @i_islower;
import bits32 "_isdigit" as @i_isdigit;
import bits32 "_iscntrl" as @i_iscntrl;
import bits32 "_isalpha" as @i_isalpha;
import bits32 "_isalnum" as @i_isalnum;
import bits32 "___ctype_toupper" as @i___ctype_toupper;
import bits32 "___ctype_tolower" as @i___ctype_tolower;
import bits32 "___ctype_b" as @i___ctype_b;
import bits32 "_PerlIO_setpos" as @i_PerlIO_setpos;
import bits32 "_PerlIO_getpos" as @i_PerlIO_getpos;
import bits32 "_PerlIO_sprintf" as @i_PerlIO_sprintf;
import bits32 "_funlockfile" as @i_funlockfile;
import bits32 "_ftrylockfile" as @i_ftrylockfile;
import bits32 "_flockfile" as @i_flockfile;
import bits32 "_ctermid" as @i_ctermid;
import bits32 "_fileno" as @i_fileno;
import bits32 "_perror" as @i_perror;
import bits32 "_ferror" as @i_ferror;
import bits32 "_feof" as @i_feof;
import bits32 "_clearerr" as @i_clearerr;
import bits32 "_fsetpos" as @i_fsetpos;
import bits32 "_fgetpos" as @i_fgetpos;
import bits32 "_rewind" as @i_rewind;
import bits32 "_ftell" as @i_ftell;
import bits32 "_fseek" as @i_fseek;
import bits32 "_fwrite" as @i_fwrite;
import bits32 "_fread" as @i_fread;
import bits32 "_ungetc" as @i_ungetc;
import bits32 "_puts" as @i_puts;
import bits32 "_fputs" as @i_fputs;
import bits32 "_gets" as @i_gets;
import bits32 "_fgets" as @i_fgets;
import bits32 "_putchar_unlocked" as @i_putchar_unlocked;
import bits32 "_putc_unlocked" as @i_putc_unlocked;
import bits32 "_putchar" as @i_putchar;
import bits32 "_putc" as @i_putc;
import bits32 "_fputc" as @i_fputc;
import bits32 "_getchar_unlocked" as @i_getchar_unlocked;
import bits32 "_getc_unlocked" as @i_getc_unlocked;
import bits32 "_getchar" as @i_getchar;
import bits32 "_getc" as @i_getc;
import bits32 "_fgetc" as @i_fgetc;
import bits32 "_sscanf" as @i_sscanf;
import bits32 "_scanf" as @i_scanf;
import bits32 "_fscanf" as @i_fscanf;
import bits32 "_vsprintf" as @i_vsprintf;
import bits32 "_vprintf" as @i_vprintf;
import bits32 "_vfprintf" as @i_vfprintf;
import bits32 "_sprintf" as @i_sprintf;
import bits32 "_printf" as @i_printf;
import bits32 "_fprintf" as @i_fprintf;
import bits32 "_setvbuf" as @i_setvbuf;
import bits32 "_setbuf" as @i_setbuf;
import bits32 "_fdopen" as @i_fdopen;
import bits32 "_freopen" as @i_freopen;
import bits32 "_fopen" as @i_fopen;
import bits32 "_fflush" as @i_fflush;
import bits32 "_fclose" as @i_fclose;
import bits32 "_tmpnam" as @i_tmpnam;
import bits32 "_tmpfile" as @i_tmpfile;
import bits32 "_rename" as @i_rename;
import bits32 "_remove" as @i_remove;
import bits32 "_stderr" as @i_stderr;
import bits32 "_stdout" as @i_stdout;
import bits32 "_stdin" as @i_stdin;
import bits32 "__IO_free_backup_area" as @i__IO_free_backup_area;
import bits32 "__IO_seekpos" as @i__IO_seekpos;
import bits32 "__IO_seekoff" as @i__IO_seekoff;
import bits32 "__IO_sgetn" as @i__IO_sgetn;
import bits32 "__IO_padn" as @i__IO_padn;
import bits32 "__IO_vfprintf" as @i__IO_vfprintf;
import bits32 "__IO_vfscanf" as @i__IO_vfscanf;
import bits32 "__IO_ftrylockfile" as @i__IO_ftrylockfile;
import bits32 "__IO_funlockfile" as @i__IO_funlockfile;
import bits32 "__IO_flockfile" as @i__IO_flockfile;
import bits32 "__IO_peekc_locked" as @i__IO_peekc_locked;
import bits32 "__IO_ferror" as @i__IO_ferror;
import bits32 "__IO_feof" as @i__IO_feof;
import bits32 "__IO_putc" as @i__IO_putc;
import bits32 "__IO_getc" as @i__IO_getc;
import bits32 "___overflow" as @i___overflow;
import bits32 "___uflow" as @i___uflow;
import bits32 "___underflow" as @i___underflow;
import bits32 "__IO_2_1_stderr_" as @i__IO_2_1_stderr_;
import bits32 "__IO_2_1_stdout_" as @i__IO_2_1_stdout_;
import bits32 "__IO_2_1_stdin_" as @i__IO_2_1_stdin_;
import bits32 "_PerlIO_init" as @i_PerlIO_init;
}
section "data" {
@i_590:
bits8[] { 65::bits8, 116::bits8, 116::bits8, 101::bits8, 109::bits8, 112::bits8, 116::bits8, 32::bits8, 116::bits8, 111::bits8, 32::bits8, 102::bits8, 114::bits8, 101::bits8, 101::bits8, 32::bits8, 110::bits8, 111::bits8, 110::bits8, 45::bits8, 101::bits8, 120::bits8, 105::bits8, 115::bits8, 116::bits8, 101::bits8, 110::bits8, 116::bits8, 32::bits8, 115::bits8, 104::bits8, 97::bits8, 114::bits8, 101::bits8, 100::bits8, 32::bits8, 115::bits8, 116::bits8, 114::bits8, 105::bits8, 110::bits8, 103::bits8, 0::bits8, };
@i_557:
bits8[] { 0::bits8, };
@i_509:
bits8[] { 66::bits8, 97::bits8, 100::bits8, 32::bits8, 104::bits8, 97::bits8, 115::bits8, 104::bits8, 0::bits8, };
align 4;
@f_296:
bits32 {0.000000::bits32};
}
