target
	byteorder little
	memsize 8
	wordsize 32
	pointersize 32
	float "ieee754";

bits2 System.rounding_mode = "IEEE 754 rounding mode";
section "data" {
export i@main as "main";
}
section "text" {
foreign "C" i@main() {
  stackdata {
  }
  foreign "C" (i@exit)(0);
  return (0);
  L.1:
return();
}
export i@nested as "nested";
foreign "C" i@nested(bits32 i@a, bits32 i@b, ) {
  stackdata {
  }
  bits32 i@1.10;
  bits32 i@2.11;
  if (%ge(i@a, 4)) { goto L.6; }
  if (%eq(i@b, 114)) { goto L.9; }
  L.6:
  if (%ne(i@a, 1)) { goto L.8; }
  if (%eq(i@b, 104)) { goto L.9; }
  if (%eq(i@b, 105)) { goto L.9; }
  L.8:
  if (%ne(i@a, 2)) { goto L.3; }
  if (%eq(i@b, 111)) { goto L.9; }
  if (%ne(i@b, 121)) { goto L.3; }
  L.9:
  i@a = i@b;
  L.3:
  return (0);
  L.2:
return();
}
export i@s as "s";
foreign "C" i@s("address" bits32 i@d, ) {
  stackdata {
  }
  L.12:
return();
}
}
section "data" {
export i@Dy as "Dy";
align 4;
i@Dy:
bits32[] {0x0};
bits8[4];
export i@Dz as "Dz";
align 4;
i@Dz:
bits32[] {0x1};
bits8[4];
export i@Dfunc as "Dfunc";
}
section "text" {
foreign "C" i@Dfunc() {
  stackdata {
  }
return();
}
export i@f as "f";
foreign "C" i@f() {
  stackdata {
  }
return();
}
export i@f1 as "f1";
foreign "C" i@f1() {
  stackdata {
  }
return();
}
export i@f2 as "f2";
foreign "C" i@f2("address" bits32 i@a, "address" bits32 i@b, ) {
  stackdata {
  }
return();
}
export i@g as "g";
foreign "C" i@g("address" bits32 i@p, ) {
  stackdata {
  }
return();
}
export i@h as "h";
foreign "C" i@h("address" bits32 i@p, ) {
  stackdata {
  }
return();
}
export i@h1 as "h1";
foreign "C" i@h1(bits32 i@x.er, bits32 i@y, ) {
  stackdata {
  }
return();
}
export i@h2 as "h2";
foreign "C" i@h2() {
  stackdata {
  }
return();
}
}
section "data" {
align 4;
L.23:
bits32[] {0x1};
export i@set1 as "set1";
}
section "text" {
foreign "C" i@set1() {
  stackdata {
  }
return();
}
}
section "data" {
align 4;
L.25:
bits32[] {0x2};
export i@set2 as "set2";
}
section "text" {
foreign "C" i@set2() {
  stackdata {
  }
return();
}
foreign "C" i@goo() {
  stackdata {
  }
return();
}
export i@sss as "sss";
foreign "C" i@sss() {
  stackdata {
  }
return();
}
}
section "bss" {
align 4;
L.29:
bits8[4];
export i@rrr as "rrr";
}
section "text" {
foreign "C" i@rrr("address" bits32 i@p, ) {
  stackdata {
  }
return();
}
export i@setstatic as "setstatic";
foreign "C" i@setstatic() {
  stackdata {
  }
return();
}
export i@gx1 as "gx1";
foreign "C" i@gx1("float" bits64 f@x.er, ) {
  stackdata {
    align 4;
    f@x: bits64;
  }
return();
}
export i@ff1 as "ff1";
foreign "C" i@ff1("float" bits64 f@x.er, "address" bits32 i@y, ) {
  stackdata {
  }
return();
}
export i@gg1 as "gg1";
foreign "C" i@gg1(bits32 i@a, bits32 i@b, ) {
  stackdata {
  }
return();
}
export i@hh1 as "hh1";
foreign "C" i@hh1(bits32 i@a, ) {
  stackdata {
  }
return();
}
export i@cmp as "cmp";
foreign "C" i@cmp("address" bits32 i@a, "address" bits32 i@b, ) {
  stackdata {
  }
return();
}
export i@sort as "sort";
foreign "C" i@sort() {
  stackdata {
  }
return();
}
export i@onearg as "onearg";
foreign "C" i@onearg() {
  stackdata {
  }
return();
}
import bits32 "xr" as i@xr;
import bits32 "exit" as i@exit;
import bits32 "qsort" as i@qsort;
import bits32 "strcmp" as i@strcmp;
import bits32 "hx1" as i@hx1;
import bits32 "fx1" as i@fx1;
}
section "bss" {
export i@ss4 as "ss4";
align 4;
i@ss4:
bits8[4];
align 4;
i@ss2:
bits8[4];
align 4;
i@ss5:
bits8[4];
export i@ss3 as "ss3";
align 4;
i@ss3:
bits8[4];
align 4;
i@ss1:
bits8[4];
align 4;
i@yy:
bits8[4];
export i@z as "z";
align 4;
i@z:
bits8[4];
export i@y as "y";
align 4;
i@y:
bits8[4];
export i@x as "x";
align 4;
i@x:
bits8[4];
export i@b as "b";
align 4;
i@b:
bits8[4];
export i@a as "a";
align 4;
i@a:
bits8[4];
}
