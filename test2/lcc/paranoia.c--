target
	byteorder little
	memsize 8
	wordsize 32
	pointersize 32
	float "ieee754";

bits2 System.rounding_mode = "IEEE 754 rounding mode";
section "data" {
}
section "data" {
export i@Zero as "Zero";
align 4;
i@Zero:
bits32[] {0x0, 0x0};
export i@Half as "Half";
align 4;
i@Half:
bits32[] {0x0, 0x3fe00000};
export i@One as "One";
align 4;
i@One:
bits32[] {0x0, 0x3ff00000};
export i@Two as "Two";
align 4;
i@Two:
bits32[] {0x0, 0x40000000};
export i@Three as "Three";
align 4;
i@Three:
bits32[] {0x0, 0x40080000};
export i@Four as "Four";
align 4;
i@Four:
bits32[] {0x0, 0x40100000};
export i@Five as "Five";
align 4;
i@Five:
bits32[] {0x0, 0x40140000};
export i@Eight as "Eight";
align 4;
i@Eight:
bits32[] {0x0, 0x40200000};
export i@Nine as "Nine";
align 4;
i@Nine:
bits32[] {0x0, 0x40220000};
export i@TwentySeven as "TwentySeven";
align 4;
i@TwentySeven:
bits32[] {0x0, 0x403b0000};
export i@ThirtyTwo as "ThirtyTwo";
align 4;
i@ThirtyTwo:
bits32[] {0x0, 0x40400000};
export i@TwoForty as "TwoForty";
align 4;
i@TwoForty:
bits32[] {0x0, 0x406e0000};
export i@MinusOne as "MinusOne";
align 4;
i@MinusOne:
bits32[] {0x0, 0xbff00000};
export i@OneAndHalf as "OneAndHalf";
align 4;
i@OneAndHalf:
bits32[] {0x0, 0x3ff80000};
export i@NoTrials as "NoTrials";
align 4;
i@NoTrials:
bits32[] {0x14};
export i@sigfpe as "sigfpe";
}
section "text" {
foreign "C" i@sigfpe(bits32 i@i, ) {
  stackdata {
  }
  bits32 i@1.17;
  i@1.17 = i@fpecount;
  bits32[i@1.17] = %add(bits32[i@1.17],1);
  foreign "C" (i@printf)("address" i@14);
  foreign "C" (i@fflush)("address" bits32[i@stdout]);
  if (%eq(%lobits32(bits32[i@sigsave]), 0)) { goto L.15; }
  foreign "C" (i@__sysv_signal)(8, "address" bits32[i@sigsave]);
  bits32[i@sigsave] = 0;
  foreign "C" (i@longjmp)("address" i@ovfl_buf, 1);
  L.15:
  foreign "C" (i@abort)();
  L.13:
return();
}
}
section "data" {
align 4;
L.769:
bits32 {i@770};
bits32 {i@771};
bits32 {i@772};
bits32 {i@773};
export i@main as "main";
}
section "text" {
foreign "C" i@main() {
  stackdata {
  }
  bits32 i@1.833;
  bits32 i@2.834;
  bits64 f@3.835;
  bits32 i@4.836;
  bits64 f@5.837;
  bits32 i@6.838;
  bits64 f@7.839;
  bits32 i@8.840;
  bits64 f@9.841;
  bits32 i@10.842;
  bits32 i@11.843;
  bits32 i@12.844;
  bits32 i@13.845;
  bits32 i@25.846;
  bits64 f@14.847;
  bits64 f@15.848;
  bits32 i@16.849;
  bits32 i@17.850;
  bits32 i@33.851;
  bits64 f@18.852;
  bits64 f@19.853;
  bits64 f@20.854;
  bits64 f@21.855;
  bits64 f@22.856;
  bits32 i@37.857;
  bits64 f@23.858;
  bits64 f@24.859;
  bits64 f@25.860;
  bits64 f@26.861;
  bits64 f@27.862;
  bits64 f@28.863;
  bits32 i@41.864;
  bits64 f@29.865;
  bits32 i@45.866;
  bits64 f@30.867;
  bits64 f@31.868;
  bits64 f@32.869;
  bits64 f@33.870;
  bits64 f@34.871;
  bits64 f@35.872;
  bits32 i@49.873;
  bits64 f@36.874;
  bits64 f@37.875;
  bits64 f@38.876;
  bits64 f@39.877;
  bits64 f@40.878;
  bits32 i@41.879;
  bits64 f@42.880;
  bits32 i@43.881;
  bits64 f@44.882;
  bits64 f@45.883;
  bits32 i@46.884;
  bits64 f@47.885;
  bits32 i@48.886;
  bits64 f@49.887;
  bits32 i@50.888;
  bits64 f@51.889;
  bits32 i@52.890;
  bits64 f@53.891;
  bits32 i@54.892;
  bits32 i@55.893;
  bits64 f@56.894;
  bits32 i@57.895;
  bits32 i@58.896;
  bits32 i@59.897;
  bits64 f@60.898;
  bits64 f@61.899;
  bits64 f@62.900;
  bits32 i@63.901;
  bits32 i@64.902;
  bits32 i@65.903;
  bits64 f@66.904;
  bits64 f@67.905;
  bits64 f@68.906;
  bits32 i@69.907;
  bits32 i@70.908;
  bits64 f@71.909;
  bits32 i@72.910;
  bits64 f@73.911;
  bits64 f@74.912;
  bits32 i@75.913;
  bits32 i@76.914;
  bits32 i@77.915;
  bits64 f@78.916;
  bits64 f@79.917;
  bits64 f@80.918;
  bits64 f@81.919;
  bits64 f@82.920;
  bits64 f@83.921;
  bits32 i@95.922;
  bits64 f@84.923;
  bits32 i@99.924;
  bits64 f@85.925;
  bits32 i@106.926;
  bits64 f@86.927;
  bits32 i@110.928;
  bits32 i@87.929;
  bits32 i@88.930;
  bits64 f@89.931;
  bits64 f@90.932;
  bits64 f@91.933;
  bits32 i@92.934;
  bits64 f@93.935;
  bits64 f@94.936;
  bits64 f@95.937;
  bits64 f@96.938;
  bits64 f@97.939;
  bits32 i@98.940;
  bits64 f@99.941;
  bits64 f@100.942;
  bits64 f@101.943;
  bits64 f@102.944;
  bits32 i@130.945;
  bits64 f@103.946;
  bits64 f@104.947;
  bits64 f@105.948;
  bits64 f@106.949;
  bits64 f@107.950;
  bits64 f@108.951;
  bits32 i@109.952;
  bits32 i@110.953;
  bits64 f@111.954;
  bits64 f@112.955;
  bits64 f@113.956;
  bits64 f@114.957;
  bits64 f@115.958;
  bits64 f@116.959;
  bits32 i@117.960;
  bits32 i@118.961;
  bits64 f@119.962;
  bits64 f@120.963;
  bits64 f@121.964;
  bits32 i@122.965;
  bits32 i@123.966;
  bits64 f@124.967;
  bits64 f@125.968;
  bits64 f@126.969;
  bits32 i@127.970;
  bits32 i@128.971;
  bits64 f@129.972;
  bits64 f@130.973;
  bits64 f@131.974;
  bits64 f@132.975;
  bits64 f@133.976;
  bits64 f@134.977;
  bits64 f@135.978;
  bits64 f@136.979;
  bits64 f@137.980;
  bits32 i@138.981;
  bits32 i@139.982;
  bits64 f@140.983;
  bits64 f@141.984;
  bits64 f@142.985;
  bits32 i@190.986;
  bits32 i@143.987;
  bits64 f@144.988;
  bits32 i@145.989;
  bits64 f@146.990;
  bits32 i@147.991;
  bits32 i@148.992;
  bits64 f@149.993;
  bits64 f@150.994;
  bits32 i@151.995;
  bits64 f@152.996;
  bits64 f@153.997;
  bits32 i@154.998;
  bits32 i@155.999;
  bits64 f@156.1000;
  bits64 f@157.1001;
  bits64 f@158.1002;
  bits32 i@159.1003;
  bits64 f@160.1004;
  bits64 f@161.1005;
  bits32 i@162.1006;
  bits64 f@163.1007;
  bits64 f@164.1008;
  bits64 f@165.1009;
  bits32 i@166.1010;
  bits32 i@201.1011;
  bits32 i@167.1012;
  bits32 i@168.1013;
  bits64 f@169.1014;
  bits64 f@170.1015;
  bits64 f@171.1016;
  bits64 f@172.1017;
  bits32 i@173.1018;
  bits64 f@174.1019;
  bits64 f@175.1020;
  bits64 f@176.1021;
  bits32 i@205.1022;
  bits32 i@177.1023;
  bits64 f@178.1024;
  bits64 f@179.1025;
  bits32 i@180.1026;
  bits32 i@181.1027;
  bits64 f@182.1028;
  bits64 f@183.1029;
  bits64 f@184.1030;
  bits32 i@185.1031;
  bits64 f@186.1032;
  bits32 i@187.1033;
  bits64 f@188.1034;
  bits64 f@189.1035;
  bits32 i@190.1036;
  bits64 f@191.1037;
  bits32 i@192.1038;
  bits64 f@193.1039;
  bits64 f@194.1040;
  bits32 i@195.1041;
  bits32 i@212.1042;
  bits32 i@196.1043;
  bits64 f@197.1044;
  bits32 i@198.1045;
  bits64 f@199.1046;
  bits32 i@216.1047;
  bits32 i@200.1048;
  bits64 f@201.1049;
  bits64 f@202.1050;
  bits32 i@203.1051;
  bits64 f@204.1052;
  bits32 i@205.1053;
  bits64 f@206.1054;
  bits32 i@207.1055;
  bits64 f@208.1056;
  bits32 i@209.1057;
  bits32 i@210.1058;
  bits64 f@211.1059;
  bits32 i@212.1060;
  bits64 f@213.1061;
  bits32 i@214.1062;
  bits64 f@215.1063;
  bits64 f@216.1064;
  bits64 f@217.1065;
  bits32 i@218.1066;
  bits64 f@219.1067;
  bits64 f@220.1068;
  bits32 i@221.1069;
  bits32 i@222.1070;
  bits64 f@223.1071;
  bits32 i@224.1072;
  bits64 f@225.1073;
  bits64 f@226.1074;
  bits32 i@239.1075;
  bits32 i@227.1076;
  bits64 f@228.1077;
  bits32 i@250.1078;
  bits32 i@229.1079;
  bits64 f@230.1080;
  bits32 i@254.1081;
  bits32 i@231.1082;
  bits32 i@232.1083;
  bits64 f@233.1084;
  bits64 f@234.1085;
  bits32 i@235.1086;
  bits32 i@236.1087;
  bits64 f@237.1088;
  bits32 i@238.1089;
  bits32 i@239.1090;
  bits64 f@240.1091;
  bits64 f@241.1092;
  bits32 i@242.1093;
  bits64 f@243.1094;
  bits64 f@244.1095;
  bits64 f@245.1096;
  bits32 i@246.1097;
  bits64 f@247.1098;
  bits64 f@248.1099;
  bits64 f@249.1100;
  bits64 f@250.1101;
  bits32 i@251.1102;
  bits64 f@252.1103;
  bits32 i@253.1104;
  bits32 i@254.1105;
  bits32 i@255.1106;
  bits64 f@256.1107;
  bits64 f@257.1108;
  bits64 f@258.1109;
  bits32 i@259.1110;
  bits64 f@260.1111;
  bits32 i@261.1112;
  bits64 f@262.1113;
  bits64 f@263.1114;
  bits64 f@264.1115;
  bits32 i@265.1116;
  bits64 f@266.1117;
  bits64 f@267.1118;
  bits32 i@268.1119;
  bits32 i@269.1120;
  bits64 f@270.1121;
  bits64 f@271.1122;
  bits32 i@272.1123;
  bits64 f@273.1124;
  bits64 f@274.1125;
  bits32 i@275.1126;
  bits32 i@276.1127;
  bits64 f@277.1128;
  bits64 f@278.1129;
  bits64 f@279.1130;
  bits32 i@280.1131;
  bits64 f@281.1132;
  bits32 i@282.1133;
  bits64 f@283.1134;
  bits32 i@284.1135;
  bits64 f@285.1136;
  bits32 i@286.1137;
  bits64 f@287.1138;
  bits32 i@288.1139;
  bits32 i@289.1140;
  bits64 f@290.1141;
  bits64 f@291.1142;
  bits64 f@292.1143;
  bits64 f@293.1144;
  bits64 f@294.1145;
  bits64 f@295.1146;
  bits64 f@296.1147;
  bits64 f@297.1148;
  bits32 i@283.1149;
  bits32 i@298.1150;
  bits64 f@299.1151;
  bits64 f@300.1152;
  bits32 i@287.1153;
  bits64 f@301.1154;
  bits64 f@302.1155;
  bits32 i@303.1156;
  bits64 f@304.1157;
  bits64 f@305.1158;
  bits32 i@306.1159;
  bits64 f@307.1160;
  bits32 i@308.1161;
  bits64 f@309.1162;
  bits64 f@310.1163;
  bits32 i@311.1164;
  bits64 f@312.1165;
  bits64 f@313.1166;
  bits32 i@314.1167;
  bits64 f@315.1168;
  bits64 f@316.1169;
  bits32 i@317.1170;
  bits64 f@318.1171;
  bits64 f@319.1172;
  bits64 f@320.1173;
  bits32 i@321.1174;
  bits64 f@322.1175;
  bits64 f@323.1176;
  bits64 f@324.1177;
  bits32 i@325.1178;
  bits64 f@326.1179;
  bits32 i@327.1180;
  bits32 i@328.1181;
  bits64 f@329.1182;
  bits64 f@330.1183;
  bits32 i@331.1184;
  bits32 i@332.1185;
  bits32 i@333.1186;
  bits64 f@334.1187;
  bits32 i@335.1188;
  bits64 f@336.1189;
  bits64 f@337.1190;
  bits32 i@338.1191;
  bits64 f@339.1192;
  bits64 f@340.1193;
  bits32 i@341.1194;
  bits32 i@342.1195;
  bits64 f@343.1196;
  bits32 i@344.1197;
  bits64 f@345.1198;
  bits64 f@346.1199;
  bits32 i@347.1200;
  bits64 f@348.1201;
  bits64 f@349.1202;
  bits32 i@350.1203;
  bits64 f@351.1204;
  bits64 f@352.1205;
  bits64 f@353.1206;
  bits64 f@354.1207;
  bits32 i@355.1208;
  bits64 f@356.1209;
  bits64 f@357.1210;
  bits64 f@358.1211;
  bits32 i@359.1212;
  bits64 f@360.1213;
  bits32 i@361.1214;
  bits64 f@362.1215;
  bits32 i@363.1216;
  bits64 f@364.1217;
  bits32 i@365.1218;
  bits32 i@329.1219;
  bits32 i@366.1220;
  bits64 f@367.1221;
  bits64 f@368.1222;
  bits64 f@369.1223;
  bits32 i@370.1224;
  bits64 f@371.1225;
  bits64 f@372.1226;
  bits32 i@373.1227;
  bits32 i@374.1228;
  bits32 i@375.1229;
  bits64 f@376.1230;
  bits64 f@377.1231;
  bits32 i@378.1232;
  bits64 f@379.1233;
  bits64 f@380.1234;
  bits64 f@381.1235;
  bits64 f@382.1236;
  bits32 i@347.1237;
  bits64 f@383.1238;
  bits64 f@384.1239;
  bits64 f@385.1240;
  bits64 f@386.1241;
  bits64 f@387.1242;
  bits64 f@388.1243;
  bits64 f@389.1244;
  bits64 f@390.1245;
  bits64 f@391.1246;
  bits64 f@392.1247;
  bits32 i@393.1248;
  bits64 f@394.1249;
  bits32 i@395.1250;
  bits32 i@396.1251;
  bits64 f@397.1252;
  bits32 i@398.1253;
  bits32 i@399.1254;
  bits32 i@400.1255;
  bits64 f@401.1256;
  bits64 f@402.1257;
  bits32 i@403.1258;
  bits64 f@404.1259;
  bits64 f@405.1260;
  bits32 i@406.1261;
  bits64 f@407.1262;
  bits64 f@408.1263;
  bits32 i@409.1264;
  bits64 f@410.1265;
  bits64 f@411.1266;
  bits32 i@412.1267;
  bits64 f@413.1268;
  bits64 f@414.1269;
  bits32 i@415.1270;
  bits32 i@416.1271;
  bits64 f@417.1272;
  bits32 i@418.1273;
  bits64 f@419.1274;
  bits64 f@420.1275;
  bits64 f@421.1276;
  bits32 i@422.1277;
  bits32 i@423.1278;
  bits64 f@424.1279;
  bits64 f@425.1280;
  bits64 f@426.1281;
  bits32 i@427.1282;
  bits32 i@428.1283;
  bits32 i@429.1284;
  bits64 f@430.1285;
  bits64 f@431.1286;
  bits32 i@432.1287;
  bits64 f@433.1288;
  bits64 f@434.1289;
  bits64 f@435.1290;
  bits32 i@436.1291;
  bits64 f@437.1292;
  bits32 i@438.1293;
  bits32 i@439.1294;
  bits32 i@440.1295;
  bits32 i@441.1296;
  bits64 f@442.1297;
  bits64 f@443.1298;
  bits64 f@444.1299;
  bits32 i@445.1300;
  bits32 i@446.1301;
  bits32 i@447.1302;
  bits64 f@448.1303;
  bits64 f@449.1304;
  bits64 f@450.1305;
  bits64 f@451.1306;
  bits64 f@452.1307;
  bits64 f@453.1308;
  bits64 f@454.1309;
  bits64 f@455.1310;
  bits64 f@456.1311;
  bits32 i@457.1312;
  bits32 i@458.1313;
  bits64 f@459.1314;
  bits64 f@460.1315;
  bits64 f@461.1316;
  bits64 f@462.1317;
  bits32 i@463.1318;
  bits32 i@464.1319;
  bits32 i@465.1320;
  bits32 i@466.1321;
  bits32 i@467.1322;
  bits32 i@468.1323;
  bits64 f@469.1324;
  bits32 i@470.1325;
  bits64 f@471.1326;
  bits64 f@472.1327;
  bits64 f@473.1328;
  bits64 f@474.1329;
  bits32 i@475.1330;
  bits64 f@476.1331;
  bits64 f@477.1332;
  bits32 i@478.1333;
  bits32 i@479.1334;
  bits64 f@480.1335;
  bits64 f@481.1336;
  bits64 f@482.1337;
  bits64 f@483.1338;
  bits64 f@484.1339;
  bits32 i@485.1340;
  bits64 f@486.1341;
  bits64 f@487.1342;
  bits64 f@488.1343;
  bits64 f@489.1344;
  bits64 f@490.1345;
  bits32 i@491.1346;
  bits64 f@492.1347;
  bits64 f@493.1348;
  bits64 f@494.1349;
  bits64 f@495.1350;
  bits32 i@462.1351;
  bits64 f@496.1352;
  bits32 i@497.1353;
  bits32 i@498.1354;
  bits64 f@499.1355;
  bits64 f@500.1356;
  bits64 f@501.1357;
  bits32 i@502.1358;
  bits64 f@503.1359;
  bits64 f@504.1360;
  bits32 i@505.1361;
  bits64 f@506.1362;
  bits64 f@507.1363;
  bits32 i@508.1364;
  bits32 i@509.1365;
  bits32 i@510.1366;
  bits32 i@511.1367;
  bits64 f@512.1368;
  bits64 f@513.1369;
  bits32 i@514.1370;
  bits32 i@515.1371;
  bits32 i@516.1372;
  bits64 f@517.1373;
  bits32 i@518.1374;
  bits64 f@519.1375;
  bits64 f@520.1376;
  bits32 i@521.1377;
  bits32 i@522.1378;
  bits32 i@523.1379;
  bits64 f@524.1380;
  bits64 f@525.1381;
  bits32 i@526.1382;
  bits32 i@527.1383;
  bits32 i@528.1384;
  bits64 f@529.1385;
  bits32 i@530.1386;
  bits32 i@531.1387;
  bits32 i@532.1388;
  bits64 f@533.1389;
  bits32 i@534.1390;
  bits32 i@535.1391;
  bits64 f@536.1392;
  bits32 i@537.1393;
  bits64 f@538.1394;
  bits32 i@539.1395;
  bits64 f@540.1396;
  bits64 f@541.1397;
  bits32 i@542.1398;
  bits64 f@543.1399;
  bits32 i@544.1400;
  bits64 f@545.1401;
  bits32 i@546.1402;
  bits32 i@558.1403;
  bits64 f@547.1404;
  bits64 f@548.1405;
  bits32 i@549.1406;
  bits64 f@550.1407;
  bits64 f@551.1408;
  bits64 f@552.1409;
  bits32 i@579.1410;
  bits32 i@553.1411;
  bits64 f@554.1412;
  bits64 f@555.1413;
  bits64 f@556.1414;
  bits32 i@557.1415;
  bits32 i@559.1416;
  bits64 f@560.1417;
  bits64 f@561.1418;
  bits32 i@562.1419;
  bits64 f@563.1420;
  bits64 f@564.1421;
  bits64 f@565.1422;
  bits32 i@566.1423;
  bits64 f@567.1424;
  bits64 f@568.1425;
  bits64 f@569.1426;
  bits64 f@570.1427;
  bits32 i@571.1428;
  bits32 i@572.1429;
  bits64 f@573.1430;
  bits32 i@574.1431;
  bits64 f@575.1432;
  bits32 i@576.1433;
  bits64 f@577.1434;
  bits64 f@578.1435;
  bits64 f@579.1436;
  bits64 f@580.1437;
  bits64 f@581.1438;
  bits64 f@582.1439;
  bits64 f@583.1440;
  bits64 f@584.1441;
  bits64 f@585.1442;
  bits32 i@586.1443;
  bits32 i@587.1444;
  bits32 i@588.1445;
  bits32 i@589.1446;
  bits32 i@590.1447;
  bits32 i@591.1448;
  bits32 i@592.1449;
  bits64 f@593.1450;
  bits64 f@594.1451;
  bits32 i@595.1452;
  bits64 f@596.1453;
  bits32 i@597.1454;
  bits64 f@598.1455;
  bits32 i@599.1456;
  bits64 f@600.1457;
  bits32 i@601.1458;
  bits64 f@602.1459;
  bits64 f@603.1460;
  bits64 f@604.1461;
  bits64 f@605.1462;
  bits64 f@606.1463;
  bits64 f@607.1464;
  bits64 f@608.1465;
  bits32 i@609.1466;
  bits32 i@610.1467;
  bits64 f@611.1468;
  bits32 i@612.1469;
  bits64 f@613.1470;
  bits32 i@614.1471;
  bits32 i@615.1472;
  bits64 f@616.1473;
  bits32 i@617.1474;
  bits64 f@618.1475;
  bits64 f@619.1476;
  bits64 f@620.1477;
  bits64 f@621.1478;
  bits32 i@622.1479;
  bits64 f@623.1480;
  bits32 i@624.1481;
  bits32 i@625.1482;
  bits32 i@626.1483;
  bits32 i@627.1484;
  bits32 i@628.1485;
  bits64 f@629.1486;
  bits32 i@630.1487;
  bits64 f@631.1488;
  bits32 i@632.1489;
  bits64 f@633.1490;
  bits64 f@634.1491;
  bits64 f@635.1492;
  bits32 i@636.1493;
  bits64 f@637.1494;
  bits32 i@638.1495;
  bits64 f@639.1496;
  bits64 f@640.1497;
  bits64 f@641.1498;
  bits32 i@642.1499;
  bits32 i@643.1500;
  bits64 f@644.1501;
  bits64 f@645.1502;
  bits64 f@646.1503;
  bits32 i@647.1504;
  bits64 f@648.1505;
  bits64 f@649.1506;
  bits64 f@650.1507;
  bits64 f@651.1508;
  bits64 f@652.1509;
  bits64 f@653.1510;
  bits32 i@654.1511;
  bits64 f@655.1512;
  bits32 i@656.1513;
  bits32 i@657.1514;
  bits64 f@658.1515;
  bits64 f@659.1516;
  bits64 f@660.1517;
  bits32 i@661.1518;
  bits64 f@662.1519;
  bits64 f@663.1520;
  bits64 f@664.1521;
  bits64 f@665.1522;
  bits64 f@666.1523;
  bits64 f@667.1524;
  bits32 i@668.1525;
  bits32 i@669.1526;
  bits32 i@670.1527;
  bits32 i@671.1528;
  bits64 f@672.1529;
  bits32 i@673.1530;
  bits32 i@674.1531;
  bits32 i@675.1532;
  bits32 i@676.1533;
  bits32 i@i.1534;
  bits32 i@677.1535;
  bits32 i@678.1536;
  bits32 i@679.1537;
  bits32 i@680.1538;
  bits64 f@681.1539;
  bits64 f@682.1540;
  bits64 f@683.1541;
  bits64 f@684.1542;
  bits64 f@685.1543;
  bits64[i@Zero] = bits64[f@19];
  i@1.833 = i@One;
  bits64[i@1.833] = bits64[f@20];
  i@2.834 = i@Two;
  f@3.835 = bits64[i@1.833];
  bits64[i@2.834] = %fadd(f@3.835,f@3.835, System.rounding_mode);
  i@4.836 = i@Three;
  f@5.837 = bits64[i@2.834];
  bits64[i@4.836] = %fadd(f@5.837,f@3.835, System.rounding_mode);
  i@6.838 = i@Four;
  f@7.839 = bits64[i@4.836];
  bits64[i@6.838] = %fadd(f@7.839,f@3.835, System.rounding_mode);
  i@8.840 = i@Five;
  f@9.841 = bits64[i@6.838];
  bits64[i@8.840] = %fadd(f@9.841,f@3.835, System.rounding_mode);
  i@10.842 = i@Eight;
  bits64[i@10.842] = %fadd(f@9.841,f@9.841, System.rounding_mode);
  i@11.843 = i@Nine;
  bits64[i@11.843] = %fmul(f@7.839,f@7.839, System.rounding_mode);
  bits64[i@TwentySeven] = %fmul(bits64[i@11.843],f@7.839, System.rounding_mode);
  bits64[i@ThirtyTwo] = %fmul(f@9.841,bits64[i@10.842], System.rounding_mode);
  bits64[i@TwoForty] = %fmul(%fmul(%fmul(f@9.841,bits64[i@8.840], System.rounding_mode),f@7.839, System.rounding_mode),f@9.841, System.rounding_mode);
  bits64[i@MinusOne] = %fneg(f@3.835);
  i@12.844 = i@Half;
  bits64[i@12.844] = %fdiv(f@3.835,f@5.837, System.rounding_mode);
  bits64[i@OneAndHalf] = %fadd(f@3.835,bits64[i@12.844], System.rounding_mode);
  i@13.845 = 0;
  bits32[i@ErrCnt] = i@13.845;
  bits32[(i@ErrCnt+4)] = i@13.845;
  bits32[(i@ErrCnt+8)] = 0;
  bits32[(i@ErrCnt+12)] = 0;
  bits32[i@PageNo] = 1;
  bits32[i@Milestone] = 0;
  foreign "C" (i@__sysv_signal)(8, "address" i@sigfpe);
  foreign "C" (i@Instructions)();
  foreign "C" (i@Pause)();
  foreign "C" (i@Heading)();
  foreign "C" (i@Pause)();
  foreign "C" (i@Characteristics)();
  foreign "C" (i@Pause)();
  foreign "C" (i@History)();
  foreign "C" (i@Pause)();
  bits32[i@Milestone] = 7;
  foreign "C" (i@printf)("address" i@24);
  f@14.847 = bits64[i@Zero];
  if (%fne(%fadd(f@14.847,f@14.847, System.rounding_mode), f@14.847)) { goto L.27; }
  f@15.848 = bits64[i@One];
  if (%fne(%fsub(f@15.848,f@15.848, System.rounding_mode), f@14.847)) { goto L.27; }
  if (%fle(f@15.848, f@14.847)) { goto L.27; }
  if (%fne(%fadd(f@15.848,f@15.848, System.rounding_mode), bits64[i@Two])) { goto L.27; }
  i@25.846 = 1;
  goto L.28;
  L.27:
  i@25.846 = 0;
  L.28:
  foreign "C" (i@TstCond)(0, i@25.846, "address" i@26);
  i@16.849 = i@Z;
  bits64[i@16.849] = %fneg(bits64[i@Zero]);
  if (%feq(bits64[i@16.849], bits64[f@19])) { goto L.29; }
  i@17.850 = i@ErrCnt;
  bits32[i@17.850] = %add(bits32[i@17.850],1);
  foreign "C" (i@printf)("address" i@31);
  bits64[i@U1] = bits64[f@32];
  bits64[i@Radix] = bits64[f@20];
  foreign "C" (i@TstPtUf)();
  L.29:
  f@18.852 = bits64[i@Three];
  f@19.853 = bits64[i@Two];
  f@20.854 = bits64[i@One];
  if (%fne(f@18.852, %fadd(f@19.853,f@20.854, System.rounding_mode))) { goto L.35; }
  f@21.855 = bits64[i@Four];
  if (%fne(f@21.855, %fadd(f@18.852,f@20.854, System.rounding_mode))) { goto L.35; }
  f@22.856 = bits64[i@Zero];
  if (%fne(%fadd(f@21.855,%fmul(f@19.853,%fneg(f@19.853), System.rounding_mode), System.rounding_mode), f@22.856)) { goto L.35; }
  if (%fne(%fsub(%fsub(f@21.855,f@18.852, System.rounding_mode),f@20.854, System.rounding_mode), f@22.856)) { goto L.35; }
  i@33.851 = 1;
  goto L.36;
  L.35:
  i@33.851 = 0;
  L.36:
  foreign "C" (i@TstCond)(0, i@33.851, "address" i@34);
  f@23.858 = bits64[i@MinusOne];
  f@24.859 = bits64[i@One];
  if (%fne(f@23.858, %fsub(bits64[f@19],f@24.859, System.rounding_mode))) { goto L.39; }
  f@25.860 = bits64[i@Zero];
  if (%fne(%fadd(f@23.858,f@24.859, System.rounding_mode), f@25.860)) { goto L.39; }
  if (%fne(%fadd(f@24.859,f@23.858, System.rounding_mode), f@25.860)) { goto L.39; }
  "float" f@26.861 = foreign "C" (i@fabs)("float" f@24.859);
  f@27.862 = bits64[i@Zero];
  if (%fne(%fadd(f@23.858,f@26.861, System.rounding_mode), f@27.862)) { goto L.39; }
  f@28.863 = bits64[i@MinusOne];
  if (%fne(%fadd(f@28.863,%fmul(f@28.863,f@28.863, System.rounding_mode), System.rounding_mode), f@27.862)) { goto L.39; }
  i@37.857 = 1;
  goto L.40;
  L.39:
  i@37.857 = 0;
  L.40:
  foreign "C" (i@TstCond)(0, i@37.857, "address" i@38);
  f@29.865 = bits64[i@Half];
  if (%fne(%fadd(%fadd(f@29.865,bits64[i@MinusOne], System.rounding_mode),f@29.865, System.rounding_mode), bits64[i@Zero])) { goto L.43; }
  i@41.864 = 1;
  goto L.44;
  L.43:
  i@41.864 = 0;
  L.44:
  foreign "C" (i@TstCond)(0, i@41.864, "address" i@42);
  bits32[i@Milestone] = 10;
  f@30.867 = bits64[i@Nine];
  f@31.868 = bits64[i@Three];
  if (%fne(f@30.867, %fmul(f@31.868,f@31.868, System.rounding_mode))) { goto L.47; }
  f@32.869 = bits64[i@TwentySeven];
  if (%fne(f@32.869, %fmul(f@30.867,f@31.868, System.rounding_mode))) { goto L.47; }
  f@33.870 = bits64[i@Eight];
  f@34.871 = bits64[i@Four];
  if (%fne(f@33.870, %fadd(f@34.871,f@34.871, System.rounding_mode))) { goto L.47; }
  f@35.872 = bits64[i@ThirtyTwo];
  if (%fne(f@35.872, %fmul(f@33.870,f@34.871, System.rounding_mode))) { goto L.47; }
  if (%fne(%fsub(%fsub(%fsub(f@35.872,f@32.869, System.rounding_mode),f@34.871, System.rounding_mode),bits64[i@One], System.rounding_mode), bits64[i@Zero])) { goto L.47; }
  i@45.866 = 1;
  goto L.48;
  L.47:
  i@45.866 = 0;
  L.48:
  foreign "C" (i@TstCond)(0, i@45.866, "address" i@46);
  f@36.874 = bits64[i@Five];
  f@37.875 = bits64[i@Four];
  if (%fne(f@36.874, %fadd(f@37.875,bits64[i@One], System.rounding_mode))) { goto L.51; }
  f@38.876 = bits64[i@TwoForty];
  f@39.877 = bits64[i@Three];
  if (%fne(f@38.876, %fmul(%fmul(%fmul(f@37.875,f@36.874, System.rounding_mode),f@39.877, System.rounding_mode),f@37.875, System.rounding_mode))) { goto L.51; }
  f@40.878 = bits64[i@Zero];
  if (%fne(%fsub(%fdiv(f@38.876,f@39.877, System.rounding_mode),%fmul(%fmul(f@37.875,f@37.875, System.rounding_mode),f@36.874, System.rounding_mode), System.rounding_mode), f@40.878)) { goto L.51; }
  if (%fne(%fsub(%fdiv(f@38.876,f@37.875, System.rounding_mode),%fmul(%fmul(f@36.874,f@39.877, System.rounding_mode),f@37.875, System.rounding_mode), System.rounding_mode), f@40.878)) { goto L.51; }
  if (%fne(%fsub(%fdiv(f@38.876,f@36.874, System.rounding_mode),%fmul(%fmul(f@37.875,f@39.877, System.rounding_mode),f@37.875, System.rounding_mode), System.rounding_mode), f@40.878)) { goto L.51; }
  i@49.873 = 1;
  goto L.52;
  L.51:
  i@49.873 = 0;
  L.52:
  foreign "C" (i@TstCond)(0, i@49.873, "address" i@50);
  if (%ne(bits32[i@ErrCnt], 0)) { goto L.53; }
  foreign "C" (i@printf)("address" i@55);
  foreign "C" (i@printf)("address" i@56);
  L.53:
  foreign "C" (i@printf)("address" i@57);
  bits64[i@W] = bits64[i@One];
  L.58:
  i@41.879 = i@W;
  f@42.880 = bits64[i@41.879];
  bits64[i@41.879] = %fadd(f@42.880,f@42.880, System.rounding_mode);
  i@43.881 = i@Y;
  f@44.882 = bits64[i@41.879];
  f@45.883 = bits64[i@One];
  bits64[i@43.881] = %fadd(f@44.882,f@45.883, System.rounding_mode);
  i@46.884 = i@Z;
  bits64[i@46.884] = %fsub(bits64[i@43.881],f@44.882, System.rounding_mode);
  bits64[i@43.881] = %fsub(bits64[i@46.884],f@45.883, System.rounding_mode);
  L.59:
  "float" f@47.885 = foreign "C" (i@fabs)("float" bits64[i@Y]);
  if (%flt(%fadd(bits64[i@MinusOne],f@47.885, System.rounding_mode), bits64[i@Zero])) { goto L.58; }
  bits64[i@Precision] = bits64[i@Zero];
  bits64[i@Y] = bits64[i@One];
  L.61:
  i@48.886 = i@Radix;
  f@49.887 = bits64[i@W];
  i@50.888 = i@Y;
  f@51.889 = bits64[i@50.888];
  bits64[i@48.886] = %fadd(f@49.887,f@51.889, System.rounding_mode);
  bits64[i@50.888] = %fadd(f@51.889,f@51.889, System.rounding_mode);
  bits64[i@48.886] = %fsub(bits64[i@48.886],f@49.887, System.rounding_mode);
  L.62:
  if (%feq(bits64[i@Radix], bits64[i@Zero])) { goto L.61; }
  if (%fge(bits64[i@Radix], bits64[i@Two])) { goto L.64; }
  bits64[i@Radix] = bits64[i@One];
  L.64:
  foreign "C" (i@printf)("address" i@66, "float" bits64[i@Radix]);
  if (%feq(bits64[i@Radix], bits64[f@20])) { goto L.67; }
  bits64[i@W] = bits64[i@One];
  L.69:
  i@52.890 = i@Precision;
  f@53.891 = bits64[i@One];
  bits64[i@52.890] = %fadd(bits64[i@52.890],f@53.891, System.rounding_mode);
  i@54.892 = i@W;
  bits64[i@54.892] = %fmul(bits64[i@54.892],bits64[i@Radix], System.rounding_mode);
  bits64[i@Y] = %fadd(bits64[i@54.892],f@53.891, System.rounding_mode);
  L.70:
  if (%feq(%fsub(bits64[i@Y],bits64[i@W], System.rounding_mode), bits64[i@One])) { goto L.69; }
  L.67:
  i@55.893 = i@U1;
  bits64[i@55.893] = %fdiv(bits64[i@One],bits64[i@W], System.rounding_mode);
  f@56.894 = bits64[i@55.893];
  bits64[i@U2] = %fmul(bits64[i@Radix],f@56.894, System.rounding_mode);
  foreign "C" (i@printf)("address" i@72, "float" f@56.894);
  foreign "C" (i@printf)("address" i@73);
  bits64[i@E0] = bits64[i@Radix];
  bits64[i@E1] = bits64[i@U1];
  bits64[i@E9] = bits64[i@U2];
  bits64[i@E3] = bits64[i@Precision];
  i@57.895 = i@X;
  bits64[i@57.895] = %fdiv(bits64[i@Four],bits64[i@Three], System.rounding_mode);
  i@58.896 = i@Third;
  bits64[i@58.896] = %fsub(bits64[i@57.895],bits64[i@One], System.rounding_mode);
  i@59.897 = i@F6;
  f@60.898 = bits64[i@58.896];
  bits64[i@59.897] = %fsub(bits64[i@Half],f@60.898, System.rounding_mode);
  f@61.899 = bits64[i@59.897];
  bits64[i@57.895] = %fadd(f@61.899,f@61.899, System.rounding_mode);
  "float" f@62.900 = foreign "C" (i@fabs)("float" %fsub(bits64[i@57.895],f@60.898, System.rounding_mode));
  bits64[i@57.895] = f@62.900;
  if (%fge(bits64[i@X], bits64[i@U2])) { goto L.74; }
  bits64[i@X] = bits64[i@U2];
  L.74:
  L.76:
  i@63.901 = i@U2;
  i@64.902 = i@X;
  bits64[i@63.901] = bits64[i@64.902];
  i@65.903 = i@Y;
  f@66.904 = bits64[i@63.901];
  bits64[i@65.903] = %fadd(%fmul(bits64[i@Half],f@66.904, System.rounding_mode),%fmul(%fmul(bits64[i@ThirtyTwo],f@66.904, System.rounding_mode),f@66.904, System.rounding_mode), System.rounding_mode);
  f@67.905 = bits64[i@One];
  bits64[i@65.903] = %fadd(f@67.905,bits64[i@65.903], System.rounding_mode);
  bits64[i@64.902] = %fsub(bits64[i@65.903],f@67.905, System.rounding_mode);
  L.77:
  f@68.906 = bits64[i@X];
  if (%fle(bits64[i@U2], f@68.906)) { goto L.79; }
  if (%fgt(f@68.906, bits64[i@Zero])) { goto L.76; }
  L.79:
  i@69.907 = i@X;
  bits64[i@69.907] = %fdiv(bits64[i@Two],bits64[i@Three], System.rounding_mode);
  i@70.908 = i@F6;
  f@71.909 = bits64[i@Half];
  bits64[i@70.908] = %fsub(bits64[i@69.907],f@71.909, System.rounding_mode);
  i@72.910 = i@Third;
  f@73.911 = bits64[i@70.908];
  bits64[i@72.910] = %fadd(f@73.911,f@73.911, System.rounding_mode);
  bits64[i@69.907] = %fsub(bits64[i@72.910],f@71.909, System.rounding_mode);
  "float" f@74.912 = foreign "C" (i@fabs)("float" %fadd(bits64[i@69.907],f@73.911, System.rounding_mode));
  bits64[i@69.907] = f@74.912;
  if (%fge(bits64[i@X], bits64[i@U1])) { goto L.80; }
  bits64[i@X] = bits64[i@U1];
  L.80:
  L.82:
  i@75.913 = i@U1;
  i@76.914 = i@X;
  bits64[i@75.913] = bits64[i@76.914];
  i@77.915 = i@Y;
  f@78.916 = bits64[i@Half];
  f@79.917 = bits64[i@75.913];
  bits64[i@77.915] = %fadd(%fmul(f@78.916,f@79.917, System.rounding_mode),%fmul(%fmul(bits64[i@ThirtyTwo],f@79.917, System.rounding_mode),f@79.917, System.rounding_mode), System.rounding_mode);
  bits64[i@77.915] = %fsub(f@78.916,bits64[i@77.915], System.rounding_mode);
  bits64[i@76.914] = %fadd(f@78.916,bits64[i@77.915], System.rounding_mode);
  bits64[i@77.915] = %fsub(f@78.916,bits64[i@76.914], System.rounding_mode);
  bits64[i@76.914] = %fadd(f@78.916,bits64[i@77.915], System.rounding_mode);
  L.83:
  f@80.918 = bits64[i@X];
  if (%fle(bits64[i@U1], f@80.918)) { goto L.85; }
  if (%fgt(f@80.918, bits64[i@Zero])) { goto L.82; }
  L.85:
  if (%fne(bits64[i@U1], bits64[i@E1])) { goto L.86; }
  foreign "C" (i@printf)("address" i@88);
  goto L.87;
  L.86:
  foreign "C" (i@printf)("address" i@89, "float" bits64[i@U1]);
  L.87:
  f@81.919 = bits64[i@U1];
  bits64[i@W] = %fdiv(bits64[i@One],f@81.919, System.rounding_mode);
  f@82.920 = bits64[i@Half];
  bits64[i@F9] = %fadd(%fsub(f@82.920,f@81.919, System.rounding_mode),f@82.920, System.rounding_mode);
  "float" f@83.921 = foreign "C" (i@floor)("float" %fadd(%fdiv(bits64[i@U2],f@81.919, System.rounding_mode),bits64[f@90], System.rounding_mode));
  bits64[i@Radix] = f@83.921;
  if (%fne(bits64[i@Radix], bits64[i@E0])) { goto L.91; }
  foreign "C" (i@printf)("address" i@93);
  goto L.92;
  L.91:
  foreign "C" (i@printf)("address" i@94, "float" bits64[i@Radix]);
  L.92:
  f@84.923 = bits64[i@Eight];
  if (%fgt(bits64[i@Radix], %fadd(f@84.923,f@84.923, System.rounding_mode))) { goto L.97; }
  i@95.922 = 1;
  goto L.98;
  L.97:
  i@95.922 = 0;
  L.98:
  foreign "C" (i@TstCond)(2, i@95.922, "address" i@96);
  f@85.925 = bits64[i@Radix];
  if (%feq(f@85.925, bits64[i@Two])) { goto L.104; }
  if (%feq(f@85.925, bits64[f@105])) { goto L.104; }
  if (%fne(f@85.925, bits64[i@One])) { goto L.101; }
  L.104:
  i@99.924 = 1;
  goto L.102;
  L.101:
  i@99.924 = 0;
  L.102:
  foreign "C" (i@TstCond)(3, i@99.924, "address" i@100);
  bits32[i@Milestone] = 20;
  f@86.927 = bits64[i@Half];
  if (%fge(%fsub(bits64[i@F9],f@86.927, System.rounding_mode), f@86.927)) { goto L.108; }
  i@106.926 = 1;
  goto L.109;
  L.108:
  i@106.926 = 0;
  L.109:
  foreign "C" (i@TstCond)(0, i@106.926, "address" i@107);
  i@87.929 = i@X;
  bits64[i@87.929] = bits64[i@F9];
  bits32[i@I] = 1;
  i@88.930 = i@Y;
  f@89.931 = bits64[i@Half];
  bits64[i@88.930] = %fsub(bits64[i@87.929],f@89.931, System.rounding_mode);
  bits64[i@Z] = %fsub(bits64[i@88.930],f@89.931, System.rounding_mode);
  if (%fne(bits64[i@X], bits64[i@One])) { goto L.114; }
  if (%fne(bits64[i@Z], bits64[i@Zero])) { goto L.112; }
  L.114:
  i@110.928 = 1;
  goto L.113;
  L.112:
  i@110.928 = 0;
  L.113:
  foreign "C" (i@TstCond)(0, i@110.928, "address" i@111);
  f@90.932 = bits64[i@One];
  f@91.933 = bits64[i@U2];
  bits64[i@X] = %fadd(f@90.932,f@91.933, System.rounding_mode);
  bits32[i@I] = 0;
  bits32[i@Milestone] = 25;
  i@92.934 = i@BMinusU2;
  f@93.935 = bits64[i@Radix];
  bits64[i@92.934] = %fsub(f@93.935,f@90.932, System.rounding_mode);
  bits64[i@92.934] = %fadd(%fsub(bits64[i@92.934],f@91.933, System.rounding_mode),f@90.932, System.rounding_mode);
  if (%feq(f@93.935, f@90.932)) { goto L.115; }
  "float" f@94.936 = foreign "C" (i@log)("float" bits64[i@U1]);
  "float" f@95.937 = foreign "C" (i@log)("float" bits64[i@Radix]);
  bits64[i@X] = %fdiv(%fmul(%fneg(bits64[i@TwoForty]),f@94.936, System.rounding_mode),f@95.937, System.rounding_mode);
  "float" f@96.938 = foreign "C" (i@floor)("float" %fadd(bits64[i@Half],bits64[i@X], System.rounding_mode));
  bits64[i@Y] = f@96.938;
  "float" f@97.939 = foreign "C" (i@fabs)("float" %fsub(bits64[i@X],bits64[i@Y], System.rounding_mode));
  if (%fge(%fmul(f@97.939,bits64[i@Four], System.rounding_mode), bits64[i@One])) { goto L.117; }
  bits64[i@X] = bits64[i@Y];
  L.117:
  i@98.940 = i@Precision;
  bits64[i@98.940] = %fdiv(bits64[i@X],bits64[i@TwoForty], System.rounding_mode);
  "float" f@99.941 = foreign "C" (i@floor)("float" %fadd(bits64[i@Half],bits64[i@98.940], System.rounding_mode));
  bits64[i@Y] = f@99.941;
  "float" f@100.942 = foreign "C" (i@fabs)("float" %fsub(bits64[i@Precision],bits64[i@Y], System.rounding_mode));
  if (%fge(%fmul(f@100.942,bits64[i@TwoForty], System.rounding_mode), bits64[i@Half])) { goto L.119; }
  bits64[i@Precision] = bits64[i@Y];
  L.119:
  L.115:
  f@101.943 = bits64[i@Precision];
  "float" f@102.944 = foreign "C" (i@floor)("float" f@101.943);
  if (%fne(f@101.943, f@102.944)) { goto L.123; }
  if (%fne(bits64[i@Radix], bits64[i@One])) { goto L.121; }
  L.123:
  foreign "C" (i@printf)("address" i@124);
  foreign "C" (i@printf)("address" i@125);
  L.121:
  if (%fne(bits64[i@Radix], bits64[i@One])) { goto L.126; }
  foreign "C" (i@printf)("address" i@128);
  goto L.127;
  L.126:
  foreign "C" (i@printf)("address" i@129, "float" bits64[i@Precision]);
  L.127:
  f@103.946 = bits64[i@Nine];
  if (%fge(%fmul(%fmul(%fmul(bits64[i@U2],f@103.946, System.rounding_mode),f@103.946, System.rounding_mode),bits64[i@TwoForty], System.rounding_mode), bits64[i@One])) { goto L.132; }
  i@130.945 = 1;
  goto L.133;
  L.132:
  i@130.945 = 0;
  L.133:
  foreign "C" (i@TstCond)(1, i@130.945, "address" i@131);
  bits32[i@Milestone] = 30;
  f@104.947 = bits64[i@Four];
  f@105.948 = bits64[i@Three];
  f@106.949 = bits64[i@One];
  f@107.950 = %fdiv(f@106.949,f@104.947, System.rounding_mode);
  "float" f@108.951 = foreign "C" (i@fabs)("float" %fsub(%fmul(%fsub(%fsub(%fdiv(f@104.947,f@105.948, System.rounding_mode),f@106.949, System.rounding_mode),f@107.950, System.rounding_mode),f@105.948, System.rounding_mode),f@107.950, System.rounding_mode));
  bits64[i@X] = f@108.951;
  L.134:
  i@109.952 = i@Z2;
  i@110.953 = i@X;
  bits64[i@109.952] = bits64[i@110.953];
  f@111.954 = bits64[i@One];
  f@112.955 = bits64[i@109.952];
  bits64[i@110.953] = %fsub(%fadd(f@111.954,%fadd(%fmul(bits64[i@Half],f@112.955, System.rounding_mode),%fmul(%fmul(bits64[i@ThirtyTwo],f@112.955, System.rounding_mode),f@112.955, System.rounding_mode), System.rounding_mode), System.rounding_mode),f@111.954, System.rounding_mode);
  L.135:
  f@113.956 = bits64[i@X];
  if (%fle(bits64[i@Z2], f@113.956)) { goto L.137; }
  if (%fgt(f@113.956, bits64[i@Zero])) { goto L.134; }
  L.137:
  f@114.957 = bits64[i@Three];
  f@115.958 = bits64[i@Four];
  "float" f@116.959 = foreign "C" (i@fabs)("float" %fsub(%fmul(%fsub(%fdiv(f@114.957,f@115.958, System.rounding_mode),%fdiv(bits64[i@Two],f@114.957, System.rounding_mode), System.rounding_mode),f@114.957, System.rounding_mode),%fdiv(bits64[i@One],f@115.958, System.rounding_mode), System.rounding_mode));
  bits64[i@Z] = f@116.959;
  bits64[i@Y] = f@116.959;
  bits64[i@X] = f@116.959;
  L.138:
  i@117.960 = i@Z1;
  i@118.961 = i@Z;
  bits64[i@117.960] = bits64[i@118.961];
  f@119.962 = %fdiv(bits64[i@One],bits64[i@Two], System.rounding_mode);
  f@120.963 = bits64[i@117.960];
  bits64[i@118.961] = %fadd(%fsub(f@119.962,%fadd(%fsub(f@119.962,%fadd(%fmul(bits64[i@Half],f@120.963, System.rounding_mode),%fmul(%fmul(bits64[i@ThirtyTwo],f@120.963, System.rounding_mode),f@120.963, System.rounding_mode), System.rounding_mode), System.rounding_mode),f@119.962, System.rounding_mode), System.rounding_mode),f@119.962, System.rounding_mode);
  L.139:
  f@121.964 = bits64[i@Z];
  if (%fle(bits64[i@Z1], f@121.964)) { goto L.141; }
  if (%fgt(f@121.964, bits64[i@Zero])) { goto L.138; }
  L.141:
  L.142:
  L.145:
  i@122.965 = i@Y1;
  i@123.966 = i@Y;
  bits64[i@122.965] = bits64[i@123.966];
  f@124.967 = bits64[i@Half];
  f@125.968 = bits64[i@122.965];
  bits64[i@123.966] = %fadd(%fsub(f@124.967,%fadd(%fsub(f@124.967,%fadd(%fmul(f@124.967,f@125.968, System.rounding_mode),%fmul(%fmul(bits64[i@ThirtyTwo],f@125.968, System.rounding_mode),f@125.968, System.rounding_mode), System.rounding_mode), System.rounding_mode),f@124.967, System.rounding_mode), System.rounding_mode),f@124.967, System.rounding_mode);
  L.146:
  f@126.969 = bits64[i@Y];
  if (%fle(bits64[i@Y1], f@126.969)) { goto L.148; }
  if (%fgt(f@126.969, bits64[i@Zero])) { goto L.145; }
  L.148:
  i@127.970 = i@X1;
  i@128.971 = i@X;
  bits64[i@127.970] = bits64[i@128.971];
  f@129.972 = bits64[i@127.970];
  f@130.973 = bits64[i@F9];
  bits64[i@128.971] = %fadd(%fsub(%fadd(%fmul(bits64[i@Half],f@129.972, System.rounding_mode),%fmul(%fmul(bits64[i@ThirtyTwo],f@129.972, System.rounding_mode),f@129.972, System.rounding_mode), System.rounding_mode),f@130.973, System.rounding_mode),f@130.973, System.rounding_mode);
  L.143:
  f@131.974 = bits64[i@X];
  if (%fle(bits64[i@X1], f@131.974)) { goto L.149; }
  if (%fgt(f@131.974, bits64[i@Zero])) { goto L.142; }
  L.149:
  f@132.975 = bits64[i@X1];
  if (%fne(f@132.975, bits64[i@Y1])) { goto L.152; }
  if (%feq(f@132.975, bits64[i@Z1])) { goto L.150; }
  L.152:
  foreign "C" (i@BadCond)(1, "address" i@153);
  foreign "C" (i@printf)("address" i@154, "float" bits64[i@X1], "float" bits64[i@Y1], "float" bits64[i@Z1]);
  foreign "C" (i@printf)("address" i@155);
  foreign "C" (i@printf)("address" i@156);
  foreign "C" (i@notify)("address" i@157);
  f@133.976 = bits64[i@U1];
  if (%feq(bits64[i@X1], f@133.976)) { goto L.161; }
  if (%feq(bits64[i@Y1], f@133.976)) { goto L.161; }
  if (%fne(bits64[i@Z1], f@133.976)) { goto L.151; }
  L.161:
  foreign "C" (i@printf)("address" i@162);
  goto L.151;
  L.150:
  if (%fne(bits64[i@Z1], bits64[i@U1])) { goto L.165; }
  if (%feq(bits64[i@Z2], bits64[i@U2])) { goto L.163; }
  L.165:
  if (%fge(bits64[i@Z1], bits64[i@U1])) { goto L.168; }
  if (%flt(bits64[i@Z2], bits64[i@U2])) { goto L.166; }
  L.168:
  foreign "C" (i@BadCond)(0, "address" i@169);
  foreign "C" (i@notify)("address" i@170);
  f@134.977 = bits64[i@U1];
  foreign "C" (i@printf)("address" i@171, "float" f@134.977, "float" %fsub(bits64[i@Z1],f@134.977, System.rounding_mode));
  f@135.978 = bits64[i@U2];
  foreign "C" (i@printf)("address" i@172, "float" f@135.978, "float" %fsub(bits64[i@Z2],f@135.978, System.rounding_mode));
  goto L.167;
  L.166:
  f@136.979 = bits64[i@Zero];
  if (%fle(bits64[i@Z1], f@136.979)) { goto L.175; }
  if (%fgt(bits64[i@Z2], f@136.979)) { goto L.173; }
  L.175:
  foreign "C" (i@printf)("address" i@176, "float" bits64[i@Radix]);
  foreign "C" (i@printf)("address" i@177);
  foreign "C" (i@printf)("address" i@178, "float" bits64[i@Z1], "float" bits64[i@Z2]);
  foreign "C" (i@notify)("address" i@179);
  L.173:
  f@137.980 = bits64[i@Z1];
  if (%fne(f@137.980, bits64[i@Z2])) { goto L.182; }
  if (%fle(f@137.980, bits64[i@Zero])) { goto L.180; }
  L.182:
  i@138.981 = i@X;
  bits64[i@138.981] = %fdiv(bits64[i@Z1],bits64[i@U1], System.rounding_mode);
  i@139.982 = i@Y;
  bits64[i@139.982] = %fdiv(bits64[i@Z2],bits64[i@U2], System.rounding_mode);
  if (%fle(bits64[i@139.982], bits64[i@138.981])) { goto L.183; }
  bits64[i@X] = bits64[i@Y];
  L.183:
  "float" f@140.983 = foreign "C" (i@log)("float" bits64[i@X]);
  bits64[i@Q] = %fneg(f@140.983);
  foreign "C" (i@printf)("address" i@185);
  "float" f@141.984 = foreign "C" (i@log)("float" bits64[i@Radix]);
  foreign "C" (i@printf)("address" i@186, "float" %fdiv(bits64[i@Q],f@141.984, System.rounding_mode));
  "float" f@142.985 = foreign "C" (i@log)("float" bits64[f@105]);
  foreign "C" (i@printf)("address" i@187, "float" %fdiv(bits64[i@Q],f@142.985, System.rounding_mode));
  L.180:
  foreign "C" (i@printf)("address" i@162);
  L.167:
  L.163:
  L.151:
  foreign "C" (i@Pause)();
  bits32[i@Milestone] = 35;
  if (%flt(bits64[i@Radix], bits64[i@Two])) { goto L.188; }
  i@143.987 = i@X;
  f@144.988 = bits64[i@Radix];
  bits64[i@143.987] = %fdiv(bits64[i@W],%fmul(f@144.988,f@144.988, System.rounding_mode), System.rounding_mode);
  i@145.989 = i@Y;
  f@146.990 = bits64[i@143.987];
  bits64[i@145.989] = %fadd(f@146.990,bits64[i@One], System.rounding_mode);
  i@147.991 = i@Z;
  bits64[i@147.991] = %fsub(bits64[i@145.989],f@146.990, System.rounding_mode);
  i@148.992 = i@T;
  f@149.993 = bits64[i@147.991];
  f@150.994 = bits64[i@U2];
  bits64[i@148.992] = %fadd(f@149.993,f@150.994, System.rounding_mode);
  bits64[i@143.987] = %fsub(bits64[i@148.992],f@149.993, System.rounding_mode);
  if (%fne(bits64[i@143.987], f@150.994)) { goto L.192; }
  i@190.986 = 1;
  goto L.193;
  L.192:
  i@190.986 = 0;
  L.193:
  foreign "C" (i@TstCond)(0, i@190.986, "address" i@191);
  if (%fne(bits64[i@X], bits64[i@U2])) { goto L.194; }
  foreign "C" (i@printf)("address" i@196);
  L.194:
  L.188:
  foreign "C" (i@printf)("address" i@197);
  i@151.995 = i@Y;
  f@152.996 = bits64[i@F9];
  f@153.997 = bits64[i@One];
  bits64[i@151.995] = %fmul(f@152.996,f@153.997, System.rounding_mode);
  i@154.998 = i@Z;
  bits64[i@154.998] = %fmul(f@153.997,f@152.996, System.rounding_mode);
  i@155.999 = i@X;
  f@156.1000 = bits64[i@Half];
  bits64[i@155.999] = %fsub(f@152.996,f@156.1000, System.rounding_mode);
  f@157.1001 = bits64[i@155.999];
  bits64[i@151.995] = %fsub(%fsub(bits64[i@151.995],f@156.1000, System.rounding_mode),f@157.1001, System.rounding_mode);
  bits64[i@154.998] = %fsub(%fsub(bits64[i@154.998],f@156.1000, System.rounding_mode),f@157.1001, System.rounding_mode);
  f@158.1002 = bits64[i@U2];
  bits64[i@155.999] = %fadd(f@153.997,f@158.1002, System.rounding_mode);
  i@159.1003 = i@T;
  f@160.1004 = bits64[i@155.999];
  f@161.1005 = bits64[i@Radix];
  bits64[i@159.1003] = %fmul(f@160.1004,f@161.1005, System.rounding_mode);
  i@162.1006 = i@R;
  bits64[i@162.1006] = %fmul(f@161.1005,f@160.1004, System.rounding_mode);
  bits64[i@155.999] = %fsub(bits64[i@159.1003],f@161.1005, System.rounding_mode);
  f@163.1007 = %fmul(f@161.1005,f@158.1002, System.rounding_mode);
  bits64[i@155.999] = %fsub(bits64[i@155.999],f@163.1007, System.rounding_mode);
  bits64[i@159.1003] = %fsub(bits64[i@162.1006],f@161.1005, System.rounding_mode);
  bits64[i@159.1003] = %fsub(bits64[i@159.1003],f@163.1007, System.rounding_mode);
  f@164.1008 = %fsub(f@161.1005,f@153.997, System.rounding_mode);
  bits64[i@155.999] = %fmul(bits64[i@155.999],f@164.1008, System.rounding_mode);
  bits64[i@159.1003] = %fmul(bits64[i@159.1003],f@164.1008, System.rounding_mode);
  f@165.1009 = bits64[i@Zero];
  if (%fne(bits64[i@X], f@165.1009)) { goto L.198; }
  if (%fne(bits64[i@Y], f@165.1009)) { goto L.198; }
  if (%fne(bits64[i@Z], f@165.1009)) { goto L.198; }
  if (%fne(bits64[i@T], f@165.1009)) { goto L.198; }
  bits32[i@GMult] = 1;
  goto L.199;
  L.198:
  i@166.1010 = 0;
  bits32[i@GMult] = i@166.1010;
  foreign "C" (i@TstCond)(1, i@166.1010, "address" i@200);
  L.199:
  i@167.1012 = i@Z;
  bits64[i@167.1012] = %fmul(bits64[i@Radix],bits64[i@U2], System.rounding_mode);
  i@168.1013 = i@X;
  f@169.1014 = bits64[i@167.1012];
  bits64[i@168.1013] = %fadd(bits64[i@One],f@169.1014, System.rounding_mode);
  f@170.1015 = bits64[i@168.1013];
  "float" f@171.1016 = foreign "C" (i@fabs)("float" %fsub(%fadd(f@170.1015,f@169.1014, System.rounding_mode),%fmul(f@170.1015,f@170.1015, System.rounding_mode), System.rounding_mode));
  f@172.1017 = bits64[i@U2];
  bits64[i@Y] = %fsub(f@171.1016,f@172.1017, System.rounding_mode);
  i@173.1018 = i@X;
  bits64[i@173.1018] = %fsub(bits64[i@One],f@172.1017, System.rounding_mode);
  f@174.1019 = bits64[i@173.1018];
  "float" f@175.1020 = foreign "C" (i@fabs)("float" %fsub(%fsub(f@174.1019,f@172.1017, System.rounding_mode),%fmul(f@174.1019,f@174.1019, System.rounding_mode), System.rounding_mode));
  bits64[i@Z] = %fsub(f@175.1020,bits64[i@U1], System.rounding_mode);
  f@176.1021 = bits64[i@Zero];
  if (%fgt(bits64[i@Y], f@176.1021)) { goto L.203; }
  if (%fgt(bits64[i@Z], f@176.1021)) { goto L.203; }
  i@201.1011 = 1;
  goto L.204;
  L.203:
  i@201.1011 = 0;
  L.204:
  foreign "C" (i@TstCond)(0, i@201.1011, "address" i@202);
  i@177.1023 = i@Y;
  f@178.1024 = bits64[i@One];
  f@179.1025 = bits64[i@U2];
  bits64[i@177.1023] = %fsub(f@178.1024,f@179.1025, System.rounding_mode);
  i@180.1026 = i@X;
  bits64[i@180.1026] = %fadd(f@178.1024,f@179.1025, System.rounding_mode);
  i@181.1027 = i@Z;
  bits64[i@181.1027] = %fdiv(f@178.1024,bits64[i@177.1023], System.rounding_mode);
  bits64[i@177.1023] = %fsub(bits64[i@181.1027],bits64[i@180.1026], System.rounding_mode);
  f@182.1028 = bits64[i@Three];
  bits64[i@180.1026] = %fdiv(f@178.1024,f@182.1028, System.rounding_mode);
  f@183.1029 = bits64[i@Nine];
  bits64[i@181.1027] = %fdiv(f@182.1028,f@183.1029, System.rounding_mode);
  f@184.1030 = bits64[i@181.1027];
  bits64[i@180.1026] = %fsub(bits64[i@180.1026],f@184.1030, System.rounding_mode);
  i@185.1031 = i@T;
  bits64[i@185.1031] = %fdiv(f@183.1029,bits64[i@TwentySeven], System.rounding_mode);
  bits64[i@181.1027] = %fsub(f@184.1030,bits64[i@185.1031], System.rounding_mode);
  f@186.1032 = bits64[i@Zero];
  if (%fne(bits64[i@X], f@186.1032)) { goto L.207; }
  if (%fne(bits64[i@Y], f@186.1032)) { goto L.207; }
  if (%fne(bits64[i@Z], f@186.1032)) { goto L.207; }
  i@205.1022 = 1;
  goto L.208;
  L.207:
  i@205.1022 = 0;
  L.208:
  foreign "C" (i@TstCond)(2, i@205.1022, "address" i@206);
  i@187.1033 = i@Y;
  f@188.1034 = bits64[i@F9];
  f@189.1035 = bits64[i@One];
  bits64[i@187.1033] = %fdiv(f@188.1034,f@189.1035, System.rounding_mode);
  i@190.1036 = i@X;
  f@191.1037 = bits64[i@Half];
  bits64[i@190.1036] = %fsub(f@188.1034,f@191.1037, System.rounding_mode);
  bits64[i@187.1033] = %fsub(%fsub(bits64[i@187.1033],f@191.1037, System.rounding_mode),bits64[i@190.1036], System.rounding_mode);
  bits64[i@190.1036] = %fadd(f@189.1035,bits64[i@U2], System.rounding_mode);
  i@192.1038 = i@T;
  f@193.1039 = bits64[i@190.1036];
  bits64[i@192.1038] = %fdiv(f@193.1039,f@189.1035, System.rounding_mode);
  bits64[i@190.1036] = %fsub(bits64[i@192.1038],f@193.1039, System.rounding_mode);
  f@194.1040 = bits64[i@Zero];
  if (%fne(bits64[i@X], f@194.1040)) { goto L.209; }
  if (%fne(bits64[i@Y], f@194.1040)) { goto L.209; }
  if (%fne(bits64[i@Z], f@194.1040)) { goto L.209; }
  bits32[i@GDiv] = 1;
  goto L.210;
  L.209:
  i@195.1041 = 0;
  bits32[i@GDiv] = i@195.1041;
  foreign "C" (i@TstCond)(1, i@195.1041, "address" i@211);
  L.210:
  i@196.1043 = i@X;
  f@197.1044 = bits64[i@One];
  bits64[i@196.1043] = %fdiv(f@197.1044,%fadd(f@197.1044,bits64[i@U2], System.rounding_mode), System.rounding_mode);
  i@198.1045 = i@Y;
  f@199.1046 = bits64[i@Half];
  bits64[i@198.1045] = %fsub(%fsub(bits64[i@196.1043],f@199.1046, System.rounding_mode),f@199.1046, System.rounding_mode);
  if (%fge(bits64[i@198.1045], bits64[i@Zero])) { goto L.214; }
  i@212.1042 = 1;
  goto L.215;
  L.214:
  i@212.1042 = 0;
  L.215:
  foreign "C" (i@TstCond)(1, i@212.1042, "address" i@213);
  i@200.1048 = i@X;
  f@201.1049 = bits64[i@One];
  f@202.1050 = bits64[i@U2];
  bits64[i@200.1048] = %fsub(f@201.1049,f@202.1050, System.rounding_mode);
  i@203.1051 = i@Y;
  f@204.1052 = bits64[i@Radix];
  bits64[i@203.1051] = %fadd(f@201.1049,%fmul(f@204.1052,f@202.1050, System.rounding_mode), System.rounding_mode);
  i@205.1053 = i@Z;
  f@206.1054 = bits64[i@200.1048];
  bits64[i@205.1053] = %fmul(f@206.1054,f@204.1052, System.rounding_mode);
  i@207.1055 = i@T;
  f@208.1056 = bits64[i@203.1051];
  bits64[i@207.1055] = %fmul(f@208.1056,f@204.1052, System.rounding_mode);
  i@209.1057 = i@R;
  bits64[i@209.1057] = %fdiv(bits64[i@205.1053],f@204.1052, System.rounding_mode);
  i@210.1058 = i@StickyBit;
  bits64[i@210.1058] = %fdiv(bits64[i@207.1055],f@204.1052, System.rounding_mode);
  bits64[i@200.1048] = %fsub(bits64[i@209.1057],f@206.1054, System.rounding_mode);
  bits64[i@203.1051] = %fsub(bits64[i@210.1058],f@208.1056, System.rounding_mode);
  f@211.1059 = bits64[i@Zero];
  if (%fne(bits64[i@X], f@211.1059)) { goto L.218; }
  if (%fne(bits64[i@Y], f@211.1059)) { goto L.218; }
  i@216.1047 = 1;
  goto L.219;
  L.218:
  i@216.1047 = 0;
  L.219:
  foreign "C" (i@TstCond)(0, i@216.1047, "address" i@217);
  i@212.1060 = i@Y;
  f@213.1061 = bits64[i@One];
  bits64[i@212.1060] = %fsub(f@213.1061,bits64[i@U1], System.rounding_mode);
  bits64[i@X] = %fsub(f@213.1061,bits64[i@F9], System.rounding_mode);
  bits64[i@212.1060] = %fsub(f@213.1061,bits64[i@212.1060], System.rounding_mode);
  i@214.1062 = i@T;
  f@215.1063 = bits64[i@Radix];
  bits64[i@214.1062] = %fsub(f@215.1063,bits64[i@U2], System.rounding_mode);
  bits64[i@Z] = %fsub(f@215.1063,bits64[i@BMinusU2], System.rounding_mode);
  bits64[i@214.1062] = %fsub(f@215.1063,bits64[i@214.1062], System.rounding_mode);
  f@216.1064 = bits64[i@U1];
  if (%fne(bits64[i@X], f@216.1064)) { goto L.220; }
  if (%fne(bits64[i@Y], f@216.1064)) { goto L.220; }
  f@217.1065 = bits64[i@U2];
  if (%fne(bits64[i@Z], f@217.1065)) { goto L.220; }
  if (%fne(bits64[i@T], f@217.1065)) { goto L.220; }
  bits32[i@GAddSub] = 1;
  goto L.221;
  L.220:
  i@218.1066 = 0;
  bits32[i@GAddSub] = i@218.1066;
  foreign "C" (i@TstCond)(1, i@218.1066, "address" i@222);
  L.221:
  f@219.1067 = bits64[i@F9];
  f@220.1068 = bits64[i@One];
  if (%feq(f@219.1067, f@220.1068)) { goto L.223; }
  if (%flt(%fsub(f@219.1067,f@220.1068, System.rounding_mode), bits64[i@Zero])) { goto L.223; }
  foreign "C" (i@BadCond)(1, "address" i@225);
  foreign "C" (i@printf)("address" i@226);
  foreign "C" (i@printf)("address" i@227);
  foreign "C" (i@printf)("address" i@228);
  L.223:
  i@221.1069 = 1;
  if (%ne(bits32[i@GMult], i@221.1069)) { goto L.229; }
  if (%ne(bits32[i@GDiv], i@221.1069)) { goto L.229; }
  if (%ne(bits32[i@GAddSub], i@221.1069)) { goto L.229; }
  foreign "C" (i@printf)("address" i@231);
  L.229:
  bits32[i@Milestone] = 40;
  foreign "C" (i@Pause)();
  foreign "C" (i@printf)("address" i@232);
  i@222.1070 = 0;
  bits32[i@RMult] = i@222.1070;
  bits32[i@RDiv] = i@222.1070;
  bits32[i@RAddSub] = i@222.1070;
  f@223.1071 = bits64[i@Two];
  bits64[i@RadixD2] = %fdiv(bits64[i@Radix],f@223.1071, System.rounding_mode);
  bits64[i@A1] = f@223.1071;
  bits32[i@Done] = i@222.1070;
  L.233:
  bits64[i@AInvrse] = bits64[i@Radix];
  L.236:
  i@224.1072 = i@AInvrse;
  f@225.1073 = bits64[i@224.1072];
  bits64[i@X] = f@225.1073;
  bits64[i@224.1072] = %fdiv(f@225.1073,bits64[i@A1], System.rounding_mode);
  L.237:
  "float" f@226.1074 = foreign "C" (i@floor)("float" bits64[i@AInvrse]);
  if (%feq(f@226.1074, bits64[i@AInvrse])) { goto L.236; }
  if (%feq(bits64[i@X], bits64[i@One])) { goto L.242; }
  if (%fle(bits64[i@A1], bits64[i@Three])) { goto L.240; }
  L.242:
  i@239.1075 = 1;
  goto L.241;
  L.240:
  i@239.1075 = 0;
  L.241:
  bits32[i@Done] = i@239.1075;
  if (%ne(bits32[i@Done], 0)) { goto L.243; }
  bits64[i@A1] = %fadd(bits64[i@Nine],bits64[i@One], System.rounding_mode);
  L.243:
  L.234:
  if (%eq(bits32[i@Done], 0)) { goto L.233; }
  if (%fne(bits64[i@X], bits64[i@One])) { goto L.245; }
  bits64[i@A1] = bits64[i@Radix];
  L.245:
  i@227.1076 = i@AInvrse;
  f@228.1077 = bits64[i@A1];
  bits64[i@227.1076] = %fdiv(bits64[i@One],f@228.1077, System.rounding_mode);
  bits64[i@X] = f@228.1077;
  bits64[i@Y] = bits64[i@227.1076];
  bits32[i@Done] = 0;
  L.247:
  i@229.1079 = i@Z;
  f@230.1080 = bits64[i@Half];
  bits64[i@229.1079] = %fsub(%fmul(bits64[i@X],bits64[i@Y], System.rounding_mode),f@230.1080, System.rounding_mode);
  if (%fne(bits64[i@229.1079], f@230.1080)) { goto L.252; }
  i@250.1078 = 1;
  goto L.253;
  L.252:
  i@250.1078 = 0;
  L.253:
  foreign "C" (i@TstCond)(0, i@250.1078, "address" i@251);
  if (%fne(bits64[i@X], bits64[i@Radix])) { goto L.255; }
  i@254.1081 = 1;
  goto L.256;
  L.255:
  i@254.1081 = 0;
  L.256:
  bits32[i@Done] = i@254.1081;
  i@231.1082 = i@X;
  bits64[i@231.1082] = bits64[i@Radix];
  bits64[i@Y] = %fdiv(bits64[i@One],bits64[i@231.1082], System.rounding_mode);
  L.248:
  if (%eq(bits32[i@Done], 0)) { goto L.247; }
  i@232.1083 = i@Y2;
  f@233.1084 = bits64[i@One];
  f@234.1085 = bits64[i@U2];
  bits64[i@232.1083] = %fadd(f@233.1084,f@234.1085, System.rounding_mode);
  i@235.1086 = i@Y1;
  bits64[i@235.1086] = %fsub(f@233.1084,f@234.1085, System.rounding_mode);
  i@236.1087 = i@X;
  f@237.1088 = bits64[i@OneAndHalf];
  bits64[i@236.1087] = %fsub(f@237.1088,f@234.1085, System.rounding_mode);
  i@238.1089 = i@Y;
  bits64[i@238.1089] = %fadd(f@237.1088,f@234.1085, System.rounding_mode);
  i@239.1090 = i@Z;
  f@240.1091 = bits64[i@236.1087];
  f@241.1092 = bits64[i@232.1083];
  bits64[i@239.1090] = %fmul(%fsub(f@240.1091,f@234.1085, System.rounding_mode),f@241.1092, System.rounding_mode);
  i@242.1093 = i@T;
  f@243.1094 = bits64[i@238.1089];
  f@244.1095 = bits64[i@235.1086];
  bits64[i@242.1093] = %fmul(f@243.1094,f@244.1095, System.rounding_mode);
  bits64[i@239.1090] = %fsub(bits64[i@239.1090],f@240.1091, System.rounding_mode);
  bits64[i@242.1093] = %fsub(bits64[i@242.1093],f@240.1091, System.rounding_mode);
  bits64[i@236.1087] = %fmul(f@240.1091,f@241.1092, System.rounding_mode);
  bits64[i@238.1089] = %fmul(%fadd(f@243.1094,f@234.1085, System.rounding_mode),f@244.1095, System.rounding_mode);
  bits64[i@236.1087] = %fsub(bits64[i@236.1087],f@237.1088, System.rounding_mode);
  bits64[i@238.1089] = %fsub(bits64[i@238.1089],f@237.1088, System.rounding_mode);
  f@245.1096 = bits64[i@Zero];
  if (%fne(bits64[i@X], f@245.1096)) { goto L.257; }
  if (%fne(bits64[i@Y], f@245.1096)) { goto L.257; }
  if (%fne(bits64[i@Z], f@245.1096)) { goto L.257; }
  if (%fgt(bits64[i@T], f@245.1096)) { goto L.257; }
  i@246.1097 = i@X;
  f@247.1098 = bits64[i@OneAndHalf];
  f@248.1099 = bits64[i@U2];
  f@249.1100 = %fadd(f@247.1098,f@248.1099, System.rounding_mode);
  f@250.1101 = bits64[i@Y2];
  bits64[i@246.1097] = %fmul(f@249.1100,f@250.1101, System.rounding_mode);
  i@251.1102 = i@Y;
  f@252.1103 = %fsub(f@247.1098,f@248.1099, System.rounding_mode);
  bits64[i@251.1102] = %fsub(f@252.1103,f@248.1099, System.rounding_mode);
  i@253.1104 = i@Z;
  bits64[i@253.1104] = %fadd(f@249.1100,f@248.1099, System.rounding_mode);
  i@254.1105 = i@T;
  i@255.1106 = i@Y1;
  f@256.1107 = bits64[i@255.1106];
  bits64[i@254.1105] = %fmul(f@252.1103,f@256.1107, System.rounding_mode);
  f@257.1108 = bits64[i@253.1104];
  f@258.1109 = %fadd(f@257.1108,f@248.1099, System.rounding_mode);
  bits64[i@246.1097] = %fsub(bits64[i@246.1097],f@258.1109, System.rounding_mode);
  i@259.1110 = i@StickyBit;
  f@260.1111 = bits64[i@251.1102];
  bits64[i@259.1110] = %fmul(f@260.1111,f@256.1107, System.rounding_mode);
  i@261.1112 = i@S;
  bits64[i@261.1112] = %fmul(f@257.1108,f@250.1101, System.rounding_mode);
  bits64[i@254.1105] = %fsub(bits64[i@254.1105],f@260.1111, System.rounding_mode);
  bits64[i@251.1102] = %fadd(%fsub(f@248.1099,f@260.1111, System.rounding_mode),bits64[i@259.1110], System.rounding_mode);
  bits64[i@253.1104] = %fsub(bits64[i@261.1112],%fadd(f@258.1109,f@248.1099, System.rounding_mode), System.rounding_mode);
  bits64[i@259.1110] = %fmul(%fadd(f@250.1101,f@248.1099, System.rounding_mode),f@256.1107, System.rounding_mode);
  bits64[i@255.1106] = %fmul(f@250.1101,f@256.1107, System.rounding_mode);
  bits64[i@259.1110] = %fsub(bits64[i@259.1110],f@250.1101, System.rounding_mode);
  bits64[i@255.1106] = %fsub(bits64[i@255.1106],bits64[i@Half], System.rounding_mode);
  f@262.1113 = bits64[i@Zero];
  if (%fne(bits64[i@X], f@262.1113)) { goto L.259; }
  if (%fne(bits64[i@Y], f@262.1113)) { goto L.259; }
  if (%fne(bits64[i@Z], f@262.1113)) { goto L.259; }
  if (%fne(bits64[i@T], f@262.1113)) { goto L.259; }
  if (%fne(bits64[i@StickyBit], f@262.1113)) { goto L.259; }
  if (%fne(bits64[i@Y1], bits64[i@Half])) { goto L.259; }
  bits32[i@RMult] = 1;
  foreign "C" (i@printf)("address" i@261);
  goto L.260;
  L.259:
  f@263.1114 = bits64[i@U2];
  f@264.1115 = bits64[i@Zero];
  if (%fne(%fadd(bits64[i@X],f@263.1114, System.rounding_mode), f@264.1115)) { goto L.262; }
  if (%fge(bits64[i@Y], f@264.1115)) { goto L.262; }
  if (%fne(%fadd(bits64[i@Z],f@263.1114, System.rounding_mode), f@264.1115)) { goto L.262; }
  if (%fge(bits64[i@T], f@264.1115)) { goto L.262; }
  if (%fne(%fadd(bits64[i@StickyBit],f@263.1114, System.rounding_mode), f@264.1115)) { goto L.262; }
  if (%fge(bits64[i@Y1], bits64[i@Half])) { goto L.262; }
  bits32[i@RMult] = 2;
  foreign "C" (i@printf)("address" i@264);
  goto L.263;
  L.262:
  foreign "C" (i@printf)("address" i@265);
  L.263:
  L.260:
  if (%ne(bits32[i@RMult], 1)) { goto L.258; }
  if (%ne(bits32[i@GMult], 0)) { goto L.258; }
  foreign "C" (i@notify)("address" i@268);
  goto L.258;
  L.257:
  foreign "C" (i@printf)("address" i@265);
  L.258:
  bits32[i@Milestone] = 45;
  i@265.1116 = i@Y2;
  f@266.1117 = bits64[i@One];
  f@267.1118 = bits64[i@U2];
  bits64[i@265.1116] = %fadd(f@266.1117,f@267.1118, System.rounding_mode);
  i@268.1119 = i@Y1;
  bits64[i@268.1119] = %fsub(f@266.1117,f@267.1118, System.rounding_mode);
  i@269.1120 = i@Z;
  f@270.1121 = bits64[i@OneAndHalf];
  f@271.1122 = %fadd(f@270.1121,f@267.1118, System.rounding_mode);
  bits64[i@269.1120] = %fadd(f@271.1122,f@267.1118, System.rounding_mode);
  i@272.1123 = i@X;
  f@273.1124 = bits64[i@269.1120];
  f@274.1125 = bits64[i@265.1116];
  bits64[i@272.1123] = %fdiv(f@273.1124,f@274.1125, System.rounding_mode);
  i@275.1126 = i@T;
  bits64[i@275.1126] = %fsub(%fsub(f@270.1121,f@267.1118, System.rounding_mode),f@267.1118, System.rounding_mode);
  i@276.1127 = i@Y;
  f@277.1128 = bits64[i@275.1126];
  f@278.1129 = bits64[i@268.1119];
  bits64[i@276.1127] = %fdiv(%fsub(f@277.1128,f@267.1118, System.rounding_mode),f@278.1129, System.rounding_mode);
  bits64[i@269.1120] = %fdiv(%fadd(f@273.1124,f@267.1118, System.rounding_mode),f@274.1125, System.rounding_mode);
  bits64[i@272.1123] = %fsub(bits64[i@272.1123],f@270.1121, System.rounding_mode);
  bits64[i@276.1127] = %fsub(bits64[i@276.1127],f@277.1128, System.rounding_mode);
  bits64[i@275.1126] = %fdiv(f@277.1128,f@278.1129, System.rounding_mode);
  bits64[i@269.1120] = %fsub(bits64[i@269.1120],f@271.1122, System.rounding_mode);
  bits64[i@275.1126] = %fadd(%fsub(f@267.1118,f@270.1121, System.rounding_mode),bits64[i@275.1126], System.rounding_mode);
  f@279.1130 = bits64[i@Zero];
  if (%fgt(bits64[i@X], f@279.1130)) { goto L.269; }
  if (%fgt(bits64[i@Y], f@279.1130)) { goto L.269; }
  if (%fgt(bits64[i@Z], f@279.1130)) { goto L.269; }
  if (%fgt(bits64[i@T], f@279.1130)) { goto L.269; }
  i@280.1131 = i@X;
  f@281.1132 = bits64[i@OneAndHalf];
  i@282.1133 = i@Y2;
  f@283.1134 = bits64[i@282.1133];
  bits64[i@280.1131] = %fdiv(f@281.1132,f@283.1134, System.rounding_mode);
  i@284.1135 = i@Y;
  f@285.1136 = bits64[i@U2];
  bits64[i@284.1135] = %fsub(f@281.1132,f@285.1136, System.rounding_mode);
  i@286.1137 = i@Z;
  bits64[i@286.1137] = %fadd(f@281.1132,f@285.1136, System.rounding_mode);
  f@287.1138 = bits64[i@284.1135];
  bits64[i@280.1131] = %fsub(bits64[i@280.1131],f@287.1138, System.rounding_mode);
  i@288.1139 = i@T;
  i@289.1140 = i@Y1;
  f@290.1141 = bits64[i@289.1140];
  bits64[i@288.1139] = %fdiv(f@281.1132,f@290.1141, System.rounding_mode);
  bits64[i@284.1135] = %fdiv(f@287.1138,f@290.1141, System.rounding_mode);
  f@291.1142 = bits64[i@286.1137];
  bits64[i@288.1139] = %fsub(bits64[i@288.1139],%fadd(f@291.1142,f@285.1136, System.rounding_mode), System.rounding_mode);
  bits64[i@284.1135] = %fsub(bits64[i@284.1135],f@291.1142, System.rounding_mode);
  bits64[i@286.1137] = %fdiv(f@291.1142,f@283.1134, System.rounding_mode);
  bits64[i@289.1140] = %fdiv(%fadd(f@283.1134,f@285.1136, System.rounding_mode),f@283.1134, System.rounding_mode);
  bits64[i@286.1137] = %fsub(bits64[i@286.1137],f@281.1132, System.rounding_mode);
  bits64[i@282.1133] = %fsub(bits64[i@289.1140],f@283.1134, System.rounding_mode);
  f@292.1143 = bits64[i@F9];
  bits64[i@289.1140] = %fdiv(%fsub(f@292.1143,bits64[i@U1], System.rounding_mode),f@292.1143, System.rounding_mode);
  f@293.1144 = bits64[i@Zero];
  if (%fne(bits64[i@X], f@293.1144)) { goto L.271; }
  if (%fne(bits64[i@Y], f@293.1144)) { goto L.271; }
  if (%fne(bits64[i@Z], f@293.1144)) { goto L.271; }
  if (%fne(bits64[i@T], f@293.1144)) { goto L.271; }
  f@294.1145 = bits64[i@Y2];
  if (%fne(f@294.1145, f@293.1144)) { goto L.271; }
  if (%fne(f@294.1145, f@293.1144)) { goto L.271; }
  f@295.1146 = bits64[i@Half];
  if (%fne(%fsub(bits64[i@Y1],f@295.1146, System.rounding_mode), %fsub(bits64[i@F9],f@295.1146, System.rounding_mode))) { goto L.271; }
  bits32[i@RDiv] = 1;
  foreign "C" (i@printf)("address" i@273);
  if (%ne(bits32[i@GDiv], 0)) { goto L.272; }
  foreign "C" (i@notify)("address" i@276);
  goto L.272;
  L.271:
  f@296.1147 = bits64[i@Zero];
  if (%fge(bits64[i@X], f@296.1147)) { goto L.277; }
  if (%fge(bits64[i@Y], f@296.1147)) { goto L.277; }
  if (%fge(bits64[i@Z], f@296.1147)) { goto L.277; }
  if (%fge(bits64[i@T], f@296.1147)) { goto L.277; }
  if (%fge(bits64[i@Y2], f@296.1147)) { goto L.277; }
  f@297.1148 = bits64[i@Half];
  if (%fge(%fsub(bits64[i@Y1],f@297.1148, System.rounding_mode), %fsub(bits64[i@F9],f@297.1148, System.rounding_mode))) { goto L.277; }
  bits32[i@RDiv] = 2;
  foreign "C" (i@printf)("address" i@279);
  L.277:
  L.272:
  L.269:
  if (%ne(bits32[i@RDiv], 0)) { goto L.280; }
  foreign "C" (i@printf)("address" i@282);
  L.280:
  i@298.1150 = i@BInvrse;
  f@299.1151 = bits64[i@Radix];
  bits64[i@298.1150] = %fdiv(bits64[i@One],f@299.1151, System.rounding_mode);
  f@300.1152 = bits64[i@Half];
  if (%fne(%fsub(%fmul(bits64[i@298.1150],f@299.1151, System.rounding_mode),f@300.1152, System.rounding_mode), f@300.1152)) { goto L.285; }
  i@283.1149 = 1;
  goto L.286;
  L.285:
  i@283.1149 = 0;
  L.286:
  foreign "C" (i@TstCond)(0, i@283.1149, "address" i@284);
  bits32[i@Milestone] = 50;
  f@301.1154 = bits64[i@Half];
  if (%fne(%fsub(%fadd(bits64[i@F9],bits64[i@U1], System.rounding_mode),f@301.1154, System.rounding_mode), f@301.1154)) { goto L.289; }
  f@302.1155 = bits64[i@One];
  if (%fne(%fsub(%fadd(bits64[i@BMinusU2],bits64[i@U2], System.rounding_mode),f@302.1155, System.rounding_mode), %fsub(bits64[i@Radix],f@302.1155, System.rounding_mode))) { goto L.289; }
  i@287.1153 = 1;
  goto L.290;
  L.289:
  i@287.1153 = 0;
  L.290:
  foreign "C" (i@TstCond)(0, i@287.1153, "address" i@288);
  i@303.1156 = i@X;
  f@304.1157 = bits64[i@One];
  f@305.1158 = bits64[i@U1];
  bits64[i@303.1156] = %fsub(f@304.1157,%fmul(f@305.1158,f@305.1158, System.rounding_mode), System.rounding_mode);
  i@306.1159 = i@Y;
  f@307.1160 = bits64[i@U2];
  bits64[i@306.1159] = %fadd(f@304.1157,%fmul(f@307.1160,%fsub(f@304.1157,f@307.1160, System.rounding_mode), System.rounding_mode), System.rounding_mode);
  i@308.1161 = i@Z;
  f@309.1162 = bits64[i@Half];
  bits64[i@308.1161] = %fsub(bits64[i@F9],f@309.1162, System.rounding_mode);
  bits64[i@303.1156] = %fsub(%fsub(bits64[i@303.1156],f@309.1162, System.rounding_mode),bits64[i@308.1161], System.rounding_mode);
  bits64[i@306.1159] = %fsub(bits64[i@306.1159],f@304.1157, System.rounding_mode);
  f@310.1163 = bits64[i@Zero];
  if (%fne(bits64[i@X], f@310.1163)) { goto L.291; }
  if (%fne(bits64[i@Y], f@310.1163)) { goto L.291; }
  bits32[i@RAddSub] = 2;
  foreign "C" (i@printf)("address" i@293);
  L.291:
  if (%ne(bits32[i@GAddSub], 1)) { goto L.294; }
  i@311.1164 = i@X;
  f@312.1165 = bits64[i@Half];
  f@313.1166 = bits64[i@U2];
  bits64[i@311.1164] = %fmul(%fadd(f@312.1165,f@313.1166, System.rounding_mode),f@313.1166, System.rounding_mode);
  i@314.1167 = i@Y;
  bits64[i@314.1167] = %fmul(%fsub(f@312.1165,f@313.1166, System.rounding_mode),f@313.1166, System.rounding_mode);
  f@315.1168 = bits64[i@One];
  bits64[i@311.1164] = %fadd(f@315.1168,bits64[i@311.1164], System.rounding_mode);
  bits64[i@314.1167] = %fadd(f@315.1168,bits64[i@314.1167], System.rounding_mode);
  bits64[i@311.1164] = %fsub(%fadd(f@315.1168,f@313.1166, System.rounding_mode),bits64[i@311.1164], System.rounding_mode);
  bits64[i@314.1167] = %fsub(f@315.1168,bits64[i@314.1167], System.rounding_mode);
  f@316.1169 = bits64[i@Zero];
  if (%fne(bits64[i@X], f@316.1169)) { goto L.296; }
  if (%fne(bits64[i@Y], f@316.1169)) { goto L.296; }
  i@317.1170 = i@X;
  f@318.1171 = bits64[i@Half];
  f@319.1172 = bits64[i@U2];
  f@320.1173 = bits64[i@U1];
  bits64[i@317.1170] = %fmul(%fadd(f@318.1171,f@319.1172, System.rounding_mode),f@320.1173, System.rounding_mode);
  i@321.1174 = i@Y;
  bits64[i@321.1174] = %fmul(%fsub(f@318.1171,f@319.1172, System.rounding_mode),f@320.1173, System.rounding_mode);
  f@322.1175 = bits64[i@One];
  bits64[i@317.1170] = %fsub(f@322.1175,bits64[i@317.1170], System.rounding_mode);
  bits64[i@321.1174] = %fsub(f@322.1175,bits64[i@321.1174], System.rounding_mode);
  bits64[i@317.1170] = %fsub(bits64[i@F9],bits64[i@317.1170], System.rounding_mode);
  bits64[i@321.1174] = %fsub(f@322.1175,bits64[i@321.1174], System.rounding_mode);
  f@323.1176 = bits64[i@Zero];
  if (%fne(bits64[i@X], f@323.1176)) { goto L.298; }
  if (%fne(bits64[i@Y], f@323.1176)) { goto L.298; }
  bits32[i@RAddSub] = 1;
  foreign "C" (i@printf)("address" i@300);
  if (%ne(bits32[i@GAddSub], 0)) { goto L.295; }
  foreign "C" (i@notify)("address" i@303);
  goto L.295;
  L.298:
  foreign "C" (i@printf)("address" i@304);
  goto L.295;
  L.296:
  foreign "C" (i@printf)("address" i@304);
  goto L.295;
  L.294:
  foreign "C" (i@printf)("address" i@304);
  L.295:
  f@324.1177 = bits64[i@One];
  bits64[i@S] = f@324.1177;
  i@325.1178 = i@X;
  f@326.1179 = bits64[i@Half];
  bits64[i@325.1178] = %fadd(f@324.1177,%fmul(f@326.1179,%fadd(f@324.1177,f@326.1179, System.rounding_mode), System.rounding_mode), System.rounding_mode);
  i@327.1180 = i@Y;
  bits64[i@327.1180] = %fmul(%fadd(f@324.1177,bits64[i@U2], System.rounding_mode),f@326.1179, System.rounding_mode);
  i@328.1181 = i@Z;
  f@329.1182 = bits64[i@325.1178];
  f@330.1183 = bits64[i@327.1180];
  bits64[i@328.1181] = %fsub(f@329.1182,f@330.1183, System.rounding_mode);
  i@331.1184 = i@T;
  bits64[i@331.1184] = %fsub(f@330.1183,f@329.1182, System.rounding_mode);
  i@332.1185 = i@StickyBit;
  bits64[i@332.1185] = %fadd(bits64[i@328.1181],bits64[i@331.1184], System.rounding_mode);
  if (%feq(bits64[i@332.1185], bits64[i@Zero])) { goto L.305; }
  bits64[i@S] = bits64[i@Zero];
  foreign "C" (i@BadCond)(3, "address" i@307);
  L.305:
  bits64[i@StickyBit] = bits64[i@Zero];
  i@333.1186 = 1;
  if (%ne(bits32[i@GMult], i@333.1186)) { goto L.308; }
  if (%ne(bits32[i@GDiv], i@333.1186)) { goto L.308; }
  if (%ne(bits32[i@GAddSub], i@333.1186)) { goto L.308; }
  if (%ne(bits32[i@RMult], i@333.1186)) { goto L.308; }
  if (%ne(bits32[i@RDiv], i@333.1186)) { goto L.308; }
  if (%ne(bits32[i@RAddSub], i@333.1186)) { goto L.308; }
  "float" f@334.1187 = foreign "C" (i@floor)("float" bits64[i@RadixD2]);
  if (%fne(f@334.1187, bits64[i@RadixD2])) { goto L.308; }
  foreign "C" (i@printf)("address" i@310);
  i@335.1188 = i@X;
  f@336.1189 = bits64[i@Half];
  f@337.1190 = bits64[i@U2];
  bits64[i@335.1188] = %fmul(%fadd(f@336.1189,bits64[i@U1], System.rounding_mode),f@337.1190, System.rounding_mode);
  i@338.1191 = i@Y;
  bits64[i@338.1191] = %fmul(f@336.1189,f@337.1190, System.rounding_mode);
  f@339.1192 = bits64[i@One];
  bits64[i@Z] = %fadd(f@339.1192,bits64[i@338.1191], System.rounding_mode);
  bits64[i@T] = %fadd(f@339.1192,bits64[i@335.1188], System.rounding_mode);
  f@340.1193 = bits64[i@One];
  if (%fgt(%fsub(bits64[i@Z],f@340.1193, System.rounding_mode), bits64[i@Zero])) { goto L.311; }
  if (%flt(%fsub(bits64[i@T],f@340.1193, System.rounding_mode), bits64[i@U2])) { goto L.311; }
  i@341.1194 = i@Z;
  i@342.1195 = i@Y;
  bits64[i@341.1194] = %fadd(bits64[i@T],bits64[i@342.1195], System.rounding_mode);
  bits64[i@342.1195] = %fsub(bits64[i@341.1194],bits64[i@X], System.rounding_mode);
  f@343.1196 = bits64[i@T];
  if (%flt(%fsub(bits64[i@Z],f@343.1196, System.rounding_mode), bits64[i@U2])) { goto L.313; }
  if (%fne(%fsub(bits64[i@Y],f@343.1196, System.rounding_mode), bits64[i@Zero])) { goto L.313; }
  i@344.1197 = i@X;
  f@345.1198 = bits64[i@Half];
  f@346.1199 = bits64[i@U1];
  bits64[i@344.1197] = %fmul(%fadd(f@345.1198,f@346.1199, System.rounding_mode),f@346.1199, System.rounding_mode);
  i@347.1200 = i@Y;
  bits64[i@347.1200] = %fmul(f@345.1198,f@346.1199, System.rounding_mode);
  f@348.1201 = bits64[i@One];
  bits64[i@Z] = %fsub(f@348.1201,bits64[i@347.1200], System.rounding_mode);
  bits64[i@T] = %fsub(f@348.1201,bits64[i@344.1197], System.rounding_mode);
  f@349.1202 = bits64[i@Zero];
  if (%fne(%fsub(bits64[i@Z],bits64[i@One], System.rounding_mode), f@349.1202)) { goto L.315; }
  if (%fne(%fsub(bits64[i@T],bits64[i@F9], System.rounding_mode), f@349.1202)) { goto L.315; }
  i@350.1203 = i@Z;
  f@351.1204 = bits64[i@U1];
  bits64[i@350.1203] = %fmul(%fsub(bits64[i@Half],f@351.1204, System.rounding_mode),f@351.1204, System.rounding_mode);
  f@352.1205 = bits64[i@F9];
  bits64[i@T] = %fsub(f@352.1205,bits64[i@350.1203], System.rounding_mode);
  bits64[i@Q] = %fsub(f@352.1205,bits64[i@Y], System.rounding_mode);
  f@353.1206 = bits64[i@F9];
  f@354.1207 = bits64[i@Zero];
  if (%fne(%fsub(bits64[i@T],f@353.1206, System.rounding_mode), f@354.1207)) { goto L.317; }
  if (%fne(%fsub(%fsub(f@353.1206,bits64[i@U1], System.rounding_mode),bits64[i@Q], System.rounding_mode), f@354.1207)) { goto L.317; }
  i@355.1208 = i@Z;
  f@356.1209 = bits64[i@One];
  f@357.1210 = bits64[i@U2];
  f@358.1211 = bits64[i@OneAndHalf];
  bits64[i@355.1208] = %fmul(%fadd(f@356.1209,f@357.1210, System.rounding_mode),f@358.1211, System.rounding_mode);
  bits64[i@T] = %fadd(%fsub(%fadd(f@358.1211,f@357.1210, System.rounding_mode),bits64[i@355.1208], System.rounding_mode),f@357.1210, System.rounding_mode);
  i@359.1212 = i@X;
  f@360.1213 = bits64[i@Radix];
  bits64[i@359.1212] = %fadd(f@356.1209,%fdiv(bits64[i@Half],f@360.1213, System.rounding_mode), System.rounding_mode);
  i@361.1214 = i@Y;
  bits64[i@361.1214] = %fadd(f@356.1209,%fmul(f@360.1213,f@357.1210, System.rounding_mode), System.rounding_mode);
  bits64[i@355.1208] = %fmul(bits64[i@359.1212],bits64[i@361.1214], System.rounding_mode);
  f@362.1215 = bits64[i@Zero];
  if (%fne(bits64[i@T], f@362.1215)) { goto L.319; }
  if (%fne(%fsub(%fadd(bits64[i@X],%fmul(bits64[i@Radix],bits64[i@U2], System.rounding_mode), System.rounding_mode),bits64[i@Z], System.rounding_mode), f@362.1215)) { goto L.319; }
  if (%feq(bits64[i@Radix], bits64[i@Two])) { goto L.321; }
  i@363.1216 = i@X;
  f@364.1217 = bits64[i@Two];
  bits64[i@363.1216] = %fadd(f@364.1217,bits64[i@U2], System.rounding_mode);
  i@365.1218 = i@Y;
  bits64[i@365.1218] = %fdiv(bits64[i@363.1216],f@364.1217, System.rounding_mode);
  if (%fne(%fsub(bits64[i@365.1218],bits64[i@One], System.rounding_mode), bits64[i@Zero])) { goto L.322; }
  bits64[i@StickyBit] = bits64[i@S];
  goto L.322;
  L.321:
  bits64[i@StickyBit] = bits64[i@S];
  L.322:
  L.319:
  L.317:
  L.315:
  L.313:
  L.311:
  L.308:
  if (%fne(bits64[i@StickyBit], bits64[i@One])) { goto L.325; }
  foreign "C" (i@printf)("address" i@327);
  goto L.326;
  L.325:
  foreign "C" (i@printf)("address" i@328);
  L.326:
  i@366.1220 = 0;
  if (%eq(bits32[i@GMult], i@366.1220)) { goto L.331; }
  if (%eq(bits32[i@GDiv], i@366.1220)) { goto L.331; }
  if (%eq(bits32[i@GAddSub], i@366.1220)) { goto L.331; }
  if (%eq(bits32[i@RMult], i@366.1220)) { goto L.331; }
  if (%eq(bits32[i@RDiv], i@366.1220)) { goto L.331; }
  if (%eq(bits32[i@RAddSub], i@366.1220)) { goto L.331; }
  i@329.1219 = 1;
  goto L.332;
  L.331:
  i@329.1219 = 0;
  L.332:
  foreign "C" (i@TstCond)(3, i@329.1219, "address" i@330);
  bits32[i@Milestone] = 60;
  foreign "C" (i@printf)("address" i@56);
  foreign "C" (i@printf)("address" i@333);
  foreign "C" (i@printf)("address" i@334, bits32[i@NoTrials]);
  "float" f@367.1221 = foreign "C" (i@sqrt)("float" bits64[f@335]);
  bits64[i@Random9] = f@367.1221;
  bits64[i@Random1] = bits64[i@Third];
  bits32[i@I] = 1;
  L.336:
  "float" f@368.1222 = foreign "C" (i@Random)();
  bits64[i@X] = f@368.1222;
  "float" f@369.1223 = foreign "C" (i@Random)();
  bits64[i@Y] = f@369.1223;
  i@370.1224 = i@Z9;
  f@371.1225 = bits64[i@Y];
  f@372.1226 = bits64[i@X];
  bits64[i@370.1224] = %fmul(f@371.1225,f@372.1226, System.rounding_mode);
  i@373.1227 = i@Z;
  bits64[i@373.1227] = %fmul(f@372.1226,f@371.1225, System.rounding_mode);
  bits64[i@370.1224] = %fsub(bits64[i@373.1227],bits64[i@370.1224], System.rounding_mode);
  i@374.1228 = i@I;
  bits32[i@374.1228] = %add(bits32[i@374.1228],1);
  L.337:
  if (%gt(bits32[i@I], bits32[i@NoTrials])) { goto L.339; }
  if (%feq(bits64[i@Z9], bits64[i@Zero])) { goto L.336; }
  L.339:
  if (%ne(bits32[i@I], bits32[i@NoTrials])) { goto L.340; }
  i@375.1229 = i@Random1;
  f@376.1230 = bits64[i@One];
  f@377.1231 = %fadd(f@376.1230,%fdiv(bits64[i@Half],bits64[i@Three], System.rounding_mode), System.rounding_mode);
  bits64[i@375.1229] = f@377.1231;
  i@378.1232 = i@Random2;
  f@379.1233 = %fadd(%fadd(bits64[i@U2],bits64[i@U1], System.rounding_mode),f@376.1230, System.rounding_mode);
  bits64[i@378.1232] = f@379.1233;
  f@380.1234 = bits64[i@375.1229];
  f@381.1235 = bits64[i@378.1232];
  bits64[i@Z] = %fmul(f@380.1234,f@381.1235, System.rounding_mode);
  bits64[i@Y] = %fmul(f@381.1235,f@380.1234, System.rounding_mode);
  f@382.1236 = %fmul(f@377.1231,f@379.1233, System.rounding_mode);
  bits64[i@Z9] = %fsub(f@382.1236,f@382.1236, System.rounding_mode);
  L.340:
  if (%eq(bits32[i@I], bits32[i@NoTrials])) { goto L.342; }
  if (%feq(bits64[i@Z9], bits64[i@Zero])) { goto L.342; }
  foreign "C" (i@BadCond)(2, "address" i@344);
  goto L.343;
  L.342:
  foreign "C" (i@printf)("address" i@345, bits32[i@NoTrials]);
  L.343:
  bits32[i@Milestone] = 70;
  foreign "C" (i@printf)("address" i@346);
  f@383.1238 = bits64[i@Zero];
  "float" f@384.1239 = foreign "C" (i@sqrt)("float" f@383.1238);
  if (%fne(f@383.1238, f@384.1239)) { goto L.349; }
  f@385.1240 = %fneg(bits64[i@Zero]);
  "float" f@386.1241 = foreign "C" (i@sqrt)("float" f@385.1240);
  if (%fne(f@385.1240, f@386.1241)) { goto L.349; }
  f@387.1242 = bits64[i@One];
  "float" f@388.1243 = foreign "C" (i@sqrt)("float" f@387.1242);
  if (%fne(f@387.1242, f@388.1243)) { goto L.349; }
  i@347.1237 = 1;
  goto L.350;
  L.349:
  i@347.1237 = 0;
  L.350:
  foreign "C" (i@TstCond)(0, i@347.1237, "address" i@348);
  f@389.1244 = bits64[i@Zero];
  bits64[i@MinSqEr] = f@389.1244;
  bits64[i@MaxSqEr] = f@389.1244;
  bits64[i@J] = f@389.1244;
  bits64[i@X] = bits64[i@Radix];
  bits64[i@OneUlp] = bits64[i@U2];
  foreign "C" (i@SqXMinX)(1);
  f@390.1245 = bits64[i@BInvrse];
  bits64[i@X] = f@390.1245;
  bits64[i@OneUlp] = %fmul(f@390.1245,bits64[i@U1], System.rounding_mode);
  foreign "C" (i@SqXMinX)(1);
  f@391.1246 = bits64[i@U1];
  bits64[i@X] = f@391.1246;
  bits64[i@OneUlp] = %fmul(f@391.1246,f@391.1246, System.rounding_mode);
  foreign "C" (i@SqXMinX)(1);
  if (%feq(bits64[i@J], bits64[i@Zero])) { goto L.351; }
  foreign "C" (i@Pause)();
  L.351:
  foreign "C" (i@printf)("address" i@353, bits32[i@NoTrials]);
  bits64[i@J] = bits64[i@Zero];
  bits64[i@X] = bits64[i@Two];
  f@392.1247 = bits64[i@Radix];
  bits64[i@Y] = f@392.1247;
  if (%feq(f@392.1247, bits64[i@One])) { goto L.354; }
  L.356:
  i@393.1248 = i@Y;
  f@394.1249 = bits64[i@393.1248];
  bits64[i@X] = f@394.1249;
  bits64[i@393.1248] = %fmul(bits64[i@Radix],f@394.1249, System.rounding_mode);
  L.357:
  if (%flt(%fsub(bits64[i@Y],bits64[i@X], System.rounding_mode), %i2f64(bits32[i@NoTrials], System.rounding_mode))) { goto L.356; }
  L.354:
  bits64[i@OneUlp] = %fmul(bits64[i@X],bits64[i@U2], System.rounding_mode);
  bits32[i@I] = 1;
  goto L.360;
  L.359:
  i@395.1250 = i@X;
  bits64[i@395.1250] = %fadd(bits64[i@395.1250],bits64[i@One], System.rounding_mode);
  foreign "C" (i@SqXMinX)(2);
  if (%fle(bits64[i@J], bits64[i@Zero])) { goto L.362; }
  goto L.361;
  L.362:
  i@396.1251 = i@I;
  bits32[i@396.1251] = %add(bits32[i@396.1251],1);
  L.360:
  if (%le(bits32[i@I], bits32[i@NoTrials])) { goto L.359; }
  L.361:
  foreign "C" (i@printf)("address" i@364);
  bits32[i@I] = -1;
  bits64[i@X] = bits64[i@BMinusU2];
  f@397.1252 = bits64[i@Radix];
  bits64[i@Y] = f@397.1252;
  bits64[i@Z] = %fadd(f@397.1252,%fmul(f@397.1252,bits64[i@U2], System.rounding_mode), System.rounding_mode);
  i@398.1253 = 0;
  bits32[i@NotMonot] = i@398.1253;
  bits32[i@Monot] = i@398.1253;
  goto L.366;
  L.365:
  i@399.1254 = i@I;
  bits32[i@399.1254] = %add(bits32[i@399.1254],1);
  i@400.1255 = i@X;
  "float" f@401.1256 = foreign "C" (i@sqrt)("float" bits64[i@400.1255]);
  bits64[i@400.1255] = f@401.1256;
  "float" f@402.1257 = foreign "C" (i@sqrt)("float" bits64[i@Y]);
  bits64[i@Q] = f@402.1257;
  i@403.1258 = i@Z;
  "float" f@404.1259 = foreign "C" (i@sqrt)("float" bits64[i@403.1258]);
  bits64[i@403.1258] = f@404.1259;
  f@405.1260 = bits64[i@Q];
  if (%fgt(bits64[i@X], f@405.1260)) { goto L.370; }
  if (%fle(f@405.1260, bits64[i@Z])) { goto L.368; }
  L.370:
  bits32[i@NotMonot] = 1;
  goto L.369;
  L.368:
  i@406.1261 = i@Q;
  "float" f@407.1262 = foreign "C" (i@floor)("float" %fadd(bits64[i@406.1261],bits64[i@Half], System.rounding_mode));
  bits64[i@406.1261] = f@407.1262;
  if (%gt(bits32[i@I], 0)) { goto L.373; }
  f@408.1263 = bits64[i@Q];
  if (%fne(bits64[i@Radix], %fmul(f@408.1263,f@408.1263, System.rounding_mode))) { goto L.371; }
  L.373:
  bits32[i@Monot] = 1;
  goto L.372;
  L.371:
  if (%le(bits32[i@I], 0)) { goto L.374; }
  if (%le(bits32[i@I], 1)) { goto L.376; }
  bits32[i@Monot] = 1;
  goto L.375;
  L.376:
  i@409.1264 = i@Y;
  bits64[i@409.1264] = %fmul(bits64[i@409.1264],bits64[i@BInvrse], System.rounding_mode);
  f@410.1265 = bits64[i@409.1264];
  f@411.1266 = bits64[i@U1];
  bits64[i@X] = %fsub(f@410.1265,f@411.1266, System.rounding_mode);
  bits64[i@Z] = %fadd(f@410.1265,f@411.1266, System.rounding_mode);
  goto L.375;
  L.374:
  i@412.1267 = i@Y;
  bits64[i@412.1267] = bits64[i@Q];
  f@413.1268 = bits64[i@412.1267];
  f@414.1269 = bits64[i@U2];
  bits64[i@X] = %fsub(f@413.1268,f@414.1269, System.rounding_mode);
  bits64[i@Z] = %fadd(f@413.1268,f@414.1269, System.rounding_mode);
  L.375:
  L.372:
  L.369:
  L.366:
  i@415.1270 = 0;
  if (%ne(bits32[i@NotMonot], i@415.1270)) { goto L.378; }
  if (%eq(bits32[i@Monot], i@415.1270)) { goto L.365; }
  L.378:
  if (%eq(bits32[i@Monot], 0)) { goto L.379; }
  foreign "C" (i@printf)("address" i@381);
  goto L.380;
  L.379:
  foreign "C" (i@BadCond)(2, "address" i@169);
  foreign "C" (i@printf)("address" i@382, "float" bits64[i@Y]);
  L.380:
  bits32[i@Milestone] = 80;
  i@416.1271 = i@MinSqEr;
  f@417.1272 = bits64[i@Half];
  bits64[i@416.1271] = %fadd(bits64[i@416.1271],f@417.1272, System.rounding_mode);
  i@418.1273 = i@MaxSqEr;
  bits64[i@418.1273] = %fsub(bits64[i@418.1273],f@417.1272, System.rounding_mode);
  "float" f@419.1274 = foreign "C" (i@sqrt)("float" %fadd(bits64[i@One],bits64[i@U2], System.rounding_mode));
  f@420.1275 = bits64[i@One];
  f@421.1276 = bits64[i@U2];
  bits64[i@Y] = %fdiv(%fsub(f@419.1274,f@420.1275, System.rounding_mode),f@421.1276, System.rounding_mode);
  i@422.1277 = i@SqEr;
  bits64[i@422.1277] = %fadd(%fsub(bits64[i@Y],f@420.1275, System.rounding_mode),%fdiv(f@421.1276,bits64[i@Eight], System.rounding_mode), System.rounding_mode);
  if (%fle(bits64[i@422.1277], bits64[i@MaxSqEr])) { goto L.383; }
  bits64[i@MaxSqEr] = bits64[i@SqEr];
  L.383:
  i@423.1278 = i@SqEr;
  bits64[i@423.1278] = %fadd(bits64[i@Y],%fdiv(bits64[i@U2],bits64[i@Eight], System.rounding_mode), System.rounding_mode);
  if (%fge(bits64[i@423.1278], bits64[i@MinSqEr])) { goto L.385; }
  bits64[i@MinSqEr] = bits64[i@SqEr];
  L.385:
  "float" f@424.1279 = foreign "C" (i@sqrt)("float" bits64[i@F9]);
  f@425.1280 = bits64[i@U2];
  f@426.1281 = bits64[i@U1];
  bits64[i@Y] = %fdiv(%fsub(%fsub(f@424.1279,f@425.1280, System.rounding_mode),%fsub(bits64[i@One],f@425.1280, System.rounding_mode), System.rounding_mode),f@426.1281, System.rounding_mode);
  i@427.1282 = i@SqEr;
  bits64[i@427.1282] = %fadd(bits64[i@Y],%fdiv(f@426.1281,bits64[i@Eight], System.rounding_mode), System.rounding_mode);
  if (%fle(bits64[i@427.1282], bits64[i@MaxSqEr])) { goto L.387; }
  bits64[i@MaxSqEr] = bits64[i@SqEr];
  L.387:
  i@428.1283 = i@SqEr;
  bits64[i@428.1283] = %fadd(%fadd(bits64[i@Y],bits64[i@One], System.rounding_mode),%fdiv(bits64[i@U1],bits64[i@Eight], System.rounding_mode), System.rounding_mode);
  if (%fge(bits64[i@428.1283], bits64[i@MinSqEr])) { goto L.389; }
  bits64[i@MinSqEr] = bits64[i@SqEr];
  L.389:
  i@429.1284 = i@OneUlp;
  bits64[i@429.1284] = bits64[i@U2];
  bits64[i@X] = bits64[i@429.1284];
  bits32[i@Indx] = 1;
  L.391:
  f@430.1285 = bits64[i@X];
  "float" f@431.1286 = foreign "C" (i@sqrt)("float" %fadd(%fadd(%fadd(f@430.1285,bits64[i@U1], System.rounding_mode),f@430.1285, System.rounding_mode),bits64[i@F9], System.rounding_mode));
  bits64[i@Y] = f@431.1286;
  i@432.1287 = i@Y;
  f@433.1288 = bits64[i@U2];
  f@434.1289 = bits64[i@X];
  f@435.1290 = bits64[i@OneUlp];
  bits64[i@432.1287] = %fdiv(%fsub(%fsub(bits64[i@432.1287],f@433.1288, System.rounding_mode),%fadd(%fsub(bits64[i@One],f@433.1288, System.rounding_mode),f@434.1289, System.rounding_mode), System.rounding_mode),f@435.1290, System.rounding_mode);
  i@436.1291 = i@Z;
  f@437.1292 = bits64[i@Half];
  bits64[i@436.1291] = %fdiv(%fmul(%fmul(%fmul(%fadd(%fsub(bits64[i@U1],f@434.1289, System.rounding_mode),bits64[i@F9], System.rounding_mode),f@437.1292, System.rounding_mode),f@434.1289, System.rounding_mode),f@434.1289, System.rounding_mode),f@435.1290, System.rounding_mode);
  i@438.1293 = i@SqEr;
  bits64[i@438.1293] = %fadd(%fadd(bits64[i@432.1287],f@437.1292, System.rounding_mode),bits64[i@436.1291], System.rounding_mode);
  if (%fge(bits64[i@438.1293], bits64[i@MinSqEr])) { goto L.395; }
  bits64[i@MinSqEr] = bits64[i@SqEr];
  L.395:
  i@439.1294 = i@SqEr;
  bits64[i@439.1294] = %fadd(%fsub(bits64[i@Y],bits64[i@Half], System.rounding_mode),bits64[i@Z], System.rounding_mode);
  if (%fle(bits64[i@439.1294], bits64[i@MaxSqEr])) { goto L.397; }
  bits64[i@MaxSqEr] = bits64[i@SqEr];
  L.397:
  i@440.1295 = bits32[i@Indx];
  if (%eq(i@440.1295, 1)) { goto L.401; }
  if (%ne(i@440.1295, 3)) { goto L.399; }
  L.401:
  i@441.1296 = i@X;
  "float" f@442.1297 = foreign "C" (i@Sign)("float" bits64[i@441.1296]);
  "float" f@443.1298 = foreign "C" (i@sqrt)("float" bits64[i@OneUlp]);
  "float" f@444.1299 = foreign "C" (i@floor)("float" %fdiv(bits64[i@Eight],%fmul(bits64[i@Nine],f@443.1298, System.rounding_mode), System.rounding_mode));
  bits64[i@441.1296] = %fmul(%fmul(bits64[i@OneUlp],f@442.1297, System.rounding_mode),f@444.1299, System.rounding_mode);
  goto L.400;
  L.399:
  i@445.1300 = i@OneUlp;
  bits64[i@445.1300] = bits64[i@U1];
  bits64[i@X] = %fneg(bits64[i@445.1300]);
  L.400:
  L.392:
  i@446.1301 = i@Indx;
  bits32[i@446.1301] = %add(bits32[i@446.1301],1);
  if (%le(bits32[i@Indx], 3)) { goto L.391; }
  bits32[i@Milestone] = 85;
  i@447.1302 = 0;
  bits32[i@SqRWrng] = i@447.1302;
  bits32[i@Anomaly] = i@447.1302;
  bits32[i@RSqrt] = i@447.1302;
  if (%feq(bits64[i@Radix], bits64[i@One])) { goto L.402; }
  foreign "C" (i@printf)("address" i@404);
  f@448.1303 = bits64[i@Precision];
  "float" f@449.1304 = foreign "C" (i@floor)("float" f@448.1303);
  "float" f@450.1305 = foreign "C" (i@pow)("float" bits64[i@Radix], "float" %fsub(%fadd(bits64[i@One],f@448.1303, System.rounding_mode),f@449.1304, System.rounding_mode));
  "float" f@451.1306 = foreign "C" (i@floor)("float" %fadd(bits64[i@Half],f@450.1305, System.rounding_mode));
  bits64[i@D] = f@451.1306;
  f@452.1307 = bits64[i@D];
  bits64[i@X] = %fdiv(f@452.1307,bits64[i@Radix], System.rounding_mode);
  bits64[i@Y] = %fdiv(f@452.1307,bits64[i@A1], System.rounding_mode);
  f@453.1308 = bits64[i@X];
  "float" f@454.1309 = foreign "C" (i@floor)("float" f@453.1308);
  if (%fne(f@453.1308, f@454.1309)) { goto L.407; }
  f@455.1310 = bits64[i@Y];
  "float" f@456.1311 = foreign "C" (i@floor)("float" f@455.1310);
  if (%feq(f@455.1310, f@456.1311)) { goto L.405; }
  L.407:
  bits32[i@Anomaly] = 1;
  goto L.406;
  L.405:
  i@457.1312 = i@X;
  bits64[i@457.1312] = bits64[i@Zero];
  bits64[i@Z2] = bits64[i@457.1312];
  i@458.1313 = i@Y;
  f@459.1314 = bits64[i@One];
  bits64[i@458.1313] = f@459.1314;
  bits64[i@Y2] = bits64[i@458.1313];
  bits64[i@Z1] = %fsub(bits64[i@Radix],f@459.1314, System.rounding_mode);
  bits64[i@FourD] = %fmul(bits64[i@Four],bits64[i@D], System.rounding_mode);
  L.408:
  if (%fle(bits64[i@Y2], bits64[i@Z2])) { goto L.411; }
  bits64[i@Q] = bits64[i@Radix];
  bits64[i@Y1] = bits64[i@Y];
  L.413:
  f@460.1315 = bits64[i@Q];
  "float" f@461.1316 = foreign "C" (i@floor)("float" %fsub(bits64[i@Half],%fdiv(f@460.1315,bits64[i@Y1], System.rounding_mode), System.rounding_mode));
  "float" f@462.1317 = foreign "C" (i@fabs)("float" %fadd(f@460.1315,%fmul(f@461.1316,bits64[i@Y1], System.rounding_mode), System.rounding_mode));
  bits64[i@X1] = f@462.1317;
  i@463.1318 = i@Y1;
  bits64[i@Q] = bits64[i@463.1318];
  bits64[i@463.1318] = bits64[i@X1];
  L.414:
  if (%fgt(bits64[i@X1], bits64[i@Zero])) { goto L.413; }
  if (%fgt(bits64[i@Q], bits64[i@One])) { goto L.416; }
  bits64[i@Z2] = bits64[i@Y2];
  bits64[i@Z] = bits64[i@Y];
  L.416:
  L.411:
  i@464.1319 = i@Y;
  bits64[i@464.1319] = %fadd(bits64[i@464.1319],bits64[i@Two], System.rounding_mode);
  i@465.1320 = i@X;
  bits64[i@465.1320] = %fadd(bits64[i@465.1320],bits64[i@Eight], System.rounding_mode);
  i@466.1321 = i@Y2;
  bits64[i@466.1321] = %fadd(bits64[i@466.1321],bits64[i@465.1320], System.rounding_mode);
  if (%flt(bits64[i@466.1321], bits64[i@FourD])) { goto L.418; }
  i@467.1322 = i@Y2;
  bits64[i@467.1322] = %fsub(bits64[i@467.1322],bits64[i@FourD], System.rounding_mode);
  L.418:
  L.409:
  if (%flt(bits64[i@Y], bits64[i@D])) { goto L.408; }
  i@468.1323 = i@X8;
  f@469.1324 = bits64[i@FourD];
  bits64[i@468.1323] = %fsub(f@469.1324,bits64[i@Z2], System.rounding_mode);
  i@470.1325 = i@Q;
  f@471.1326 = bits64[i@468.1323];
  f@472.1327 = bits64[i@Z];
  bits64[i@470.1325] = %fdiv(%fadd(f@471.1326,%fmul(f@472.1327,f@472.1327, System.rounding_mode), System.rounding_mode),f@469.1324, System.rounding_mode);
  bits64[i@468.1323] = %fdiv(f@471.1326,bits64[i@Eight], System.rounding_mode);
  f@473.1328 = bits64[i@470.1325];
  "float" f@474.1329 = foreign "C" (i@floor)("float" f@473.1328);
  if (%feq(f@473.1328, f@474.1329)) { goto L.420; }
  bits32[i@Anomaly] = 1;
  goto L.421;
  L.420:
  bits32[i@Break] = 0;
  L.422:
  i@475.1330 = i@X;
  bits64[i@475.1330] = %fmul(bits64[i@Z1],bits64[i@Z], System.rounding_mode);
  f@476.1331 = bits64[i@475.1330];
  "float" f@477.1332 = foreign "C" (i@floor)("float" %fdiv(f@476.1331,bits64[i@Radix], System.rounding_mode));
  bits64[i@475.1330] = %fsub(f@476.1331,%fmul(f@477.1332,bits64[i@Radix], System.rounding_mode), System.rounding_mode);
  if (%fne(bits64[i@X], bits64[i@One])) { goto L.425; }
  bits32[i@Break] = 1;
  goto L.426;
  L.425:
  i@478.1333 = i@Z1;
  bits64[i@478.1333] = %fsub(bits64[i@478.1333],bits64[i@One], System.rounding_mode);
  L.426:
  L.423:
  if (%ne(bits32[i@Break], 0)) { goto L.427; }
  if (%fgt(bits64[i@Z1], bits64[i@Zero])) { goto L.422; }
  L.427:
  if (%fgt(bits64[i@Z1], bits64[i@Zero])) { goto L.428; }
  if (%ne(bits32[i@Break], 0)) { goto L.428; }
  bits32[i@Anomaly] = 1;
  goto L.429;
  L.428:
  if (%fle(bits64[i@Z1], bits64[i@RadixD2])) { goto L.430; }
  i@479.1334 = i@Z1;
  bits64[i@479.1334] = %fsub(bits64[i@479.1334],bits64[i@Radix], System.rounding_mode);
  L.430:
  L.432:
  foreign "C" (i@NewD)();
  L.433:
  if (%flt(%fmul(bits64[i@U2],bits64[i@D], System.rounding_mode), bits64[i@F9])) { goto L.432; }
  f@480.1335 = bits64[i@D];
  if (%feq(%fsub(%fmul(f@480.1335,bits64[i@Radix], System.rounding_mode),f@480.1335, System.rounding_mode), %fsub(bits64[i@W],f@480.1335, System.rounding_mode))) { goto L.435; }
  bits32[i@Anomaly] = 1;
  goto L.436;
  L.435:
  f@481.1336 = bits64[i@D];
  bits64[i@Z2] = f@481.1336;
  bits32[i@I] = 0;
  f@482.1337 = bits64[i@Z];
  bits64[i@Y] = %fadd(f@481.1336,%fmul(%fadd(bits64[i@One],f@482.1337, System.rounding_mode),bits64[i@Half], System.rounding_mode), System.rounding_mode);
  bits64[i@X] = %fadd(%fadd(f@481.1336,f@482.1337, System.rounding_mode),bits64[i@Q], System.rounding_mode);
  foreign "C" (i@SR3750)();
  f@483.1338 = bits64[i@D];
  f@484.1339 = bits64[i@Z];
  bits64[i@Y] = %fadd(%fadd(f@483.1338,%fmul(%fsub(bits64[i@One],f@484.1339, System.rounding_mode),bits64[i@Half], System.rounding_mode), System.rounding_mode),f@483.1338, System.rounding_mode);
  i@485.1340 = i@X;
  bits64[i@485.1340] = %fadd(%fsub(f@483.1338,f@484.1339, System.rounding_mode),f@483.1338, System.rounding_mode);
  f@486.1341 = bits64[i@485.1340];
  bits64[i@485.1340] = %fadd(%fadd(f@486.1341,bits64[i@Q], System.rounding_mode),f@486.1341, System.rounding_mode);
  foreign "C" (i@SR3750)();
  foreign "C" (i@NewD)();
  f@487.1342 = bits64[i@Z2];
  if (%feq(%fsub(bits64[i@D],f@487.1342, System.rounding_mode), %fsub(bits64[i@W],f@487.1342, System.rounding_mode))) { goto L.437; }
  bits32[i@Anomaly] = 1;
  goto L.438;
  L.437:
  f@488.1343 = bits64[i@Z2];
  f@489.1344 = %fsub(bits64[i@D],f@488.1343, System.rounding_mode);
  f@490.1345 = bits64[i@Z];
  bits64[i@Y] = %fadd(f@489.1344,%fadd(f@488.1343,%fmul(%fsub(bits64[i@One],f@490.1345, System.rounding_mode),bits64[i@Half], System.rounding_mode), System.rounding_mode), System.rounding_mode);
  bits64[i@X] = %fadd(f@489.1344,%fadd(%fsub(f@488.1343,f@490.1345, System.rounding_mode),bits64[i@Q], System.rounding_mode), System.rounding_mode);
  foreign "C" (i@SR3750)();
  bits64[i@Y] = %fmul(%fadd(bits64[i@One],bits64[i@Z], System.rounding_mode),bits64[i@Half], System.rounding_mode);
  bits64[i@X] = bits64[i@Q];
  foreign "C" (i@SR3750)();
  if (%ne(bits32[i@I], 0)) { goto L.439; }
  bits32[i@Anomaly] = 1;
  L.439:
  L.438:
  L.436:
  L.429:
  L.421:
  L.406:
  i@491.1346 = 0;
  if (%eq(bits32[i@I], i@491.1346)) { goto L.443; }
  if (%eq(bits32[i@Anomaly], i@491.1346)) { goto L.441; }
  L.443:
  foreign "C" (i@BadCond)(0, "address" i@444);
  foreign "C" (i@printf)("address" i@445, "float" bits64[i@W]);
  foreign "C" (i@printf)("address" i@446);
  bits32[i@SqRWrng] = 1;
  L.441:
  L.402:
  if (%ne(bits32[i@Anomaly], 0)) { goto L.447; }
  f@492.1347 = bits64[i@Zero];
  if (%flt(bits64[i@MinSqEr], f@492.1347)) { goto L.449; }
  if (%fgt(bits64[i@MaxSqEr], f@492.1347)) { goto L.449; }
  bits32[i@RSqrt] = 1;
  foreign "C" (i@printf)("address" i@451);
  goto L.450;
  L.449:
  f@493.1348 = bits64[i@U2];
  f@494.1349 = bits64[i@Half];
  if (%fgt(%fadd(bits64[i@MaxSqEr],f@493.1348, System.rounding_mode), %fsub(f@493.1348,f@494.1349, System.rounding_mode))) { goto L.455; }
  f@495.1350 = bits64[i@MinSqEr];
  if (%fgt(f@495.1350, f@494.1349)) { goto L.455; }
  if (%fge(%fadd(f@495.1350,bits64[i@Radix], System.rounding_mode), f@494.1349)) { goto L.452; }
  L.455:
  bits32[i@SqRWrng] = 1;
  goto L.453;
  L.452:
  bits32[i@RSqrt] = 2;
  foreign "C" (i@printf)("address" i@456);
  L.453:
  L.450:
  L.447:
  if (%eq(bits32[i@SqRWrng], 0)) { goto L.457; }
  foreign "C" (i@printf)("address" i@459);
  foreign "C" (i@printf)("address" i@460, "float" %fsub(bits64[i@MinSqEr],bits64[i@Half], System.rounding_mode));
  foreign "C" (i@printf)("address" i@461, "float" %fadd(bits64[i@Half],bits64[i@MaxSqEr], System.rounding_mode));
  f@496.1352 = bits64[i@Radix];
  if (%fge(%fsub(bits64[i@MaxSqEr],bits64[i@MinSqEr], System.rounding_mode), %fmul(f@496.1352,f@496.1352, System.rounding_mode))) { goto L.464; }
  i@462.1351 = 1;
  goto L.465;
  L.464:
  i@462.1351 = 0;
  L.465:
  foreign "C" (i@TstCond)(1, i@462.1351, "address" i@463);
  L.457:
  bits32[i@Milestone] = 90;
  foreign "C" (i@Pause)();
  foreign "C" (i@printf)("address" i@466);
  i@497.1353 = 0;
  bits32[i@N] = i@497.1353;
  bits32[i@I] = i@497.1353;
  bits64[i@Z] = %fneg(bits64[i@Zero]);
  bits32[i@M] = 3;
  bits32[i@Break] = i@497.1353;
  L.467:
  bits64[i@X] = bits64[i@One];
  foreign "C" (i@SR3980)();
  if (%gt(bits32[i@I], 10)) { goto L.470; }
  bits32[i@I] = 1023;
  foreign "C" (i@SR3980)();
  L.470:
  if (%fne(bits64[i@Z], bits64[i@MinusOne])) { goto L.472; }
  bits32[i@Break] = 1;
  goto L.473;
  L.472:
  bits64[i@Z] = bits64[i@MinusOne];
  foreign "C" (i@PrintIfNPositive)();
  bits32[i@N] = 0;
  bits32[i@I] = -4;
  L.473:
  L.468:
  if (%eq(bits32[i@Break], 0)) { goto L.467; }
  foreign "C" (i@PrintIfNPositive)();
  i@498.1354 = i@N;
  bits32[i@N1] = bits32[i@498.1354];
  bits32[i@498.1354] = 0;
  bits64[i@Z] = bits64[i@A1];
  "float" f@499.1355 = foreign "C" (i@log)("float" bits64[i@W]);
  "float" f@500.1356 = foreign "C" (i@log)("float" bits64[i@A1]);
  "float" f@501.1357 = foreign "C" (i@floor)("float" %fdiv(%fmul(bits64[i@Two],f@499.1355, System.rounding_mode),f@500.1356, System.rounding_mode));
  bits32[i@M] = %f2i32(f@501.1357, System.rounding_mode);
  bits32[i@Break] = 0;
  L.474:
  bits64[i@X] = bits64[i@Z];
  bits32[i@I] = 1;
  foreign "C" (i@SR3980)();
  if (%fne(bits64[i@Z], bits64[i@AInvrse])) { goto L.477; }
  bits32[i@Break] = 1;
  goto L.478;
  L.477:
  bits64[i@Z] = bits64[i@AInvrse];
  L.478:
  L.475:
  if (%eq(bits32[i@Break], 0)) { goto L.474; }
  bits32[i@Milestone] = 100;
  bits32[i@M] = bits32[i@NoTrials];
  bits64[i@Z] = bits64[i@Three];
  L.479:
  bits64[i@X] = bits64[i@Z];
  bits32[i@I] = 1;
  foreign "C" (i@SR3980)();
  L.482:
  i@502.1358 = i@Z;
  bits64[i@502.1358] = %fadd(bits64[i@502.1358],bits64[i@Two], System.rounding_mode);
  L.483:
  f@503.1359 = bits64[i@Three];
  "float" f@504.1360 = foreign "C" (i@floor)("float" %fdiv(bits64[i@Z],f@503.1359, System.rounding_mode));
  if (%feq(%fmul(f@503.1359,f@504.1360, System.rounding_mode), bits64[i@Z])) { goto L.482; }
  L.480:
  if (%flt(bits64[i@Z], %fmul(bits64[i@Eight],bits64[i@Three], System.rounding_mode))) { goto L.479; }
  if (%le(bits32[i@N], 0)) { goto L.485; }
  foreign "C" (i@printf)("address" i@487);
  foreign "C" (i@printf)("address" i@488);
  L.485:
  foreign "C" (i@PrintIfNPositive)();
  i@505.1361 = i@N;
  bits32[i@505.1361] = %add(bits32[i@505.1361],bits32[i@N1]);
  if (%ne(bits32[i@505.1361], 0)) { goto L.489; }
  foreign "C" (i@printf)("address" i@491);
  L.489:
  if (%le(bits32[i@N], 0)) { goto L.492; }
  foreign "C" (i@Pause)();
  goto L.493;
  L.492:
  foreign "C" (i@printf)("address" i@56);
  L.493:
  bits32[i@Milestone] = 110;
  foreign "C" (i@printf)("address" i@494);
  bits64[i@D] = bits64[i@U1];
  f@506.1362 = bits64[i@Precision];
  "float" f@507.1363 = foreign "C" (i@floor)("float" f@506.1362);
  if (%feq(f@506.1362, f@507.1363)) { goto L.495; }
  bits64[i@D] = bits64[i@BInvrse];
  bits64[i@X] = bits64[i@Precision];
  L.497:
  i@508.1364 = i@D;
  bits64[i@508.1364] = %fmul(bits64[i@508.1364],bits64[i@BInvrse], System.rounding_mode);
  i@509.1365 = i@X;
  bits64[i@509.1365] = %fsub(bits64[i@509.1365],bits64[i@One], System.rounding_mode);
  L.498:
  if (%fgt(bits64[i@X], bits64[i@Zero])) { goto L.497; }
  L.495:
  bits64[i@Y] = bits64[i@One];
  bits64[i@Z] = bits64[i@D];
  L.500:
  i@510.1366 = i@Y;
  bits64[i@C] = bits64[i@510.1366];
  i@511.1367 = i@Z;
  bits64[i@510.1366] = bits64[i@511.1367];
  f@512.1368 = bits64[i@510.1366];
  bits64[i@511.1367] = %fmul(f@512.1368,f@512.1368, System.rounding_mode);
  L.501:
  f@513.1369 = bits64[i@Z];
  if (%fle(bits64[i@Y], f@513.1369)) { goto L.503; }
  if (%fgt(%fadd(f@513.1369,f@513.1369, System.rounding_mode), f@513.1369)) { goto L.500; }
  L.503:
  i@514.1370 = i@Y;
  bits64[i@514.1370] = bits64[i@C];
  bits64[i@Z] = %fmul(bits64[i@514.1370],bits64[i@D], System.rounding_mode);
  L.504:
  i@515.1371 = i@Y;
  bits64[i@C] = bits64[i@515.1371];
  i@516.1372 = i@Z;
  bits64[i@515.1371] = bits64[i@516.1372];
  bits64[i@516.1372] = %fmul(bits64[i@515.1371],bits64[i@D], System.rounding_mode);
  L.505:
  f@517.1373 = bits64[i@Z];
  if (%fle(bits64[i@Y], f@517.1373)) { goto L.507; }
  if (%fgt(%fadd(f@517.1373,f@517.1373, System.rounding_mode), f@517.1373)) { goto L.504; }
  L.507:
  if (%fge(bits64[i@Radix], bits64[i@Two])) { goto L.508; }
  bits64[i@HInvrse] = bits64[i@Two];
  goto L.509;
  L.508:
  bits64[i@HInvrse] = bits64[i@Radix];
  L.509:
  i@518.1374 = i@H;
  f@519.1375 = bits64[i@One];
  bits64[i@518.1374] = %fdiv(f@519.1375,bits64[i@HInvrse], System.rounding_mode);
  f@520.1376 = bits64[i@C];
  bits64[i@CInvrse] = %fdiv(f@519.1375,f@520.1376, System.rounding_mode);
  i@521.1377 = i@E0;
  bits64[i@521.1377] = f@520.1376;
  bits64[i@Z] = %fmul(bits64[i@521.1377],bits64[i@518.1374], System.rounding_mode);
  L.510:
  i@522.1378 = i@E0;
  bits64[i@Y] = bits64[i@522.1378];
  i@523.1379 = i@Z;
  bits64[i@522.1378] = bits64[i@523.1379];
  bits64[i@523.1379] = %fmul(bits64[i@522.1378],bits64[i@H], System.rounding_mode);
  L.511:
  f@524.1380 = bits64[i@Z];
  if (%fle(bits64[i@E0], f@524.1380)) { goto L.513; }
  if (%fgt(%fadd(f@524.1380,f@524.1380, System.rounding_mode), f@524.1380)) { goto L.510; }
  L.513:
  bits64[i@UfThold] = bits64[i@E0];
  f@525.1381 = bits64[i@Zero];
  bits64[i@E1] = f@525.1381;
  bits64[i@Q] = f@525.1381;
  i@526.1382 = i@E9;
  bits64[i@526.1382] = bits64[i@U2];
  i@527.1383 = i@S;
  bits64[i@527.1383] = %fadd(bits64[i@One],bits64[i@526.1382], System.rounding_mode);
  i@528.1384 = i@D;
  f@529.1385 = bits64[i@C];
  bits64[i@528.1384] = %fmul(f@529.1385,bits64[i@527.1383], System.rounding_mode);
  if (%fgt(bits64[i@528.1384], f@529.1385)) { goto L.514; }
  i@530.1386 = i@E9;
  bits64[i@530.1386] = %fmul(bits64[i@Radix],bits64[i@U2], System.rounding_mode);
  i@531.1387 = i@S;
  bits64[i@531.1387] = %fadd(bits64[i@One],bits64[i@530.1386], System.rounding_mode);
  i@532.1388 = i@D;
  f@533.1389 = bits64[i@C];
  bits64[i@532.1388] = %fmul(f@533.1389,bits64[i@531.1387], System.rounding_mode);
  if (%fgt(bits64[i@532.1388], f@533.1389)) { goto L.515; }
  foreign "C" (i@BadCond)(0, "address" i@518);
  bits64[i@Underflow] = bits64[i@E0];
  bits64[i@Y1] = bits64[i@Zero];
  bits64[i@PseudoZero] = bits64[i@Z];
  foreign "C" (i@Pause)();
  goto L.515;
  L.514:
  i@534.1390 = i@Underflow;
  bits64[i@534.1390] = bits64[i@D];
  bits64[i@PseudoZero] = %fmul(bits64[i@534.1390],bits64[i@H], System.rounding_mode);
  bits64[i@UfThold] = bits64[i@Zero];
  L.519:
  i@535.1391 = i@Underflow;
  bits64[i@Y1] = bits64[i@535.1391];
  bits64[i@535.1391] = bits64[i@PseudoZero];
  f@536.1392 = bits64[i@E1];
  if (%fgt(%fadd(f@536.1392,f@536.1392, System.rounding_mode), f@536.1392)) { goto L.522; }
  i@537.1393 = i@Y2;
  bits64[i@537.1393] = %fmul(bits64[i@Underflow],bits64[i@HInvrse], System.rounding_mode);
  "float" f@538.1394 = foreign "C" (i@fabs)("float" %fsub(bits64[i@Y1],bits64[i@537.1393], System.rounding_mode));
  bits64[i@E1] = f@538.1394;
  bits64[i@Q] = bits64[i@Y1];
  if (%fne(bits64[i@UfThold], bits64[i@Zero])) { goto L.524; }
  if (%feq(bits64[i@Y1], bits64[i@Y2])) { goto L.524; }
  bits64[i@UfThold] = bits64[i@Y1];
  L.524:
  L.522:
  i@539.1395 = i@PseudoZero;
  bits64[i@539.1395] = %fmul(bits64[i@539.1395],bits64[i@H], System.rounding_mode);
  L.520:
  f@540.1396 = bits64[i@PseudoZero];
  if (%fle(bits64[i@Underflow], f@540.1396)) { goto L.526; }
  if (%fgt(%fadd(f@540.1396,f@540.1396, System.rounding_mode), f@540.1396)) { goto L.519; }
  L.526:
  L.515:
  if (%feq(bits64[i@PseudoZero], bits64[i@Zero])) { goto L.527; }
  foreign "C" (i@printf)("address" i@56);
  f@541.1397 = bits64[i@PseudoZero];
  bits64[i@Z] = f@541.1397;
  if (%fgt(f@541.1397, bits64[i@Zero])) { goto L.529; }
  foreign "C" (i@BadCond)(0, "address" i@531);
  foreign "C" (i@printf)("address" i@532);
  foreign "C" (i@printf)("address" i@533, "float" bits64[i@PseudoZero]);
  i@542.1398 = i@X;
  bits64[i@542.1398] = %fneg(bits64[i@PseudoZero]);
  if (%fgt(bits64[i@542.1398], bits64[i@Zero])) { goto L.530; }
  foreign "C" (i@printf)("address" i@536);
  foreign "C" (i@printf)("address" i@537, "float" bits64[i@X]);
  goto L.530;
  L.529:
  foreign "C" (i@BadCond)(3, "address" i@538);
  foreign "C" (i@printf)("address" i@539, "float" bits64[i@PseudoZero]);
  L.530:
  foreign "C" (i@TstPtUf)();
  L.527:
  bits32[i@Milestone] = 120;
  f@543.1399 = bits64[i@CInvrse];
  if (%fle(%fmul(f@543.1399,bits64[i@Y], System.rounding_mode), %fmul(f@543.1399,bits64[i@Y1], System.rounding_mode))) { goto L.540; }
  i@544.1400 = i@S;
  bits64[i@544.1400] = %fmul(bits64[i@H],bits64[i@544.1400], System.rounding_mode);
  bits64[i@E0] = bits64[i@Underflow];
  L.540:
  f@545.1401 = bits64[i@E1];
  if (%feq(f@545.1401, bits64[i@Zero])) { goto L.542; }
  if (%feq(f@545.1401, bits64[i@E0])) { goto L.542; }
  foreign "C" (i@BadCond)(2, "address" i@169);
  if (%fge(bits64[i@E1], bits64[i@E0])) { goto L.544; }
  foreign "C" (i@printf)("address" i@546);
  foreign "C" (i@printf)("address" i@547);
  if (%fne(bits64[i@PseudoZero], bits64[i@Zero])) { goto L.545; }
  bits64[i@E0] = bits64[i@E1];
  goto L.545;
  L.544:
  foreign "C" (i@printf)("address" i@550);
  foreign "C" (i@printf)("address" i@551);
  L.545:
  L.542:
  foreign "C" (i@printf)("address" i@552, "float" bits64[i@E0]);
  bits64[i@Z] = bits64[i@E0];
  foreign "C" (i@TstPtUf)();
  bits64[i@Underflow] = bits64[i@E0];
  if (%ne(bits32[i@N], 1)) { goto L.553; }
  bits64[i@Underflow] = bits64[i@Y];
  L.553:
  bits32[i@I] = 4;
  if (%fne(bits64[i@E1], bits64[i@Zero])) { goto L.555; }
  bits32[i@I] = 3;
  L.555:
  if (%fne(bits64[i@UfThold], bits64[i@Zero])) { goto L.557; }
  i@546.1402 = i@I;
  bits32[i@546.1402] = %sub(bits32[i@546.1402],2);
  L.557:
  bits32[i@UfNGrad] = 1;
  i@558.1403 = bits32[i@I];
  if (%lt(i@558.1403, 1)) { goto L.559; }
  if (%gt(i@558.1403, 4)) { goto L.559; }
  goto bits32[%add(%shl(i@558.1403,2),(i@582-4))] targets L.18, L.829, L.782, L.810, L.815, L.824, L.823, L.820, L.819, L.809, L.813, L.781, L.799, L.793, L.786, L.775, L.778, L.774, L.767, L.763, L.741, L.753, L.758, L.757, L.755, L.752, L.745, L.744, L.749, L.748, L.747, L.746, L.740, L.731, L.735, L.734, L.736, L.733, L.719, L.724, L.728, L.727, L.726, L.723, L.722, L.718, L.701, L.709, L.711, L.715, L.714, L.713, L.705, L.704, L.708, L.707, L.706, L.700, L.693, L.697, L.686, L.685, L.677, L.676, L.680, L.678, L.673, L.669, L.668, L.662, L.664, L.663, L.660, L.655, L.651, L.654, L.653, L.650, L.632, L.644, L.642, L.634, L.630, L.627, L.626, L.619, L.624, L.623, L.618, L.620, L.609, L.612, L.611, L.584, L.591, L.602, L.601, L.590, L.589, L.587, L.586, L.560, L.559, L.575, L.581, L.580, L.574, L.573, L.568, L.562, L.561, L.557, L.555, L.553, L.542, L.545, L.544, L.540, L.527, L.530, L.529, L.515, L.526, L.520, L.522, L.524, L.519, L.514, L.513, L.511, L.510, L.509, L.508, L.507, L.505, L.504, L.503, L.501, L.500, L.495, L.498, L.497, L.493, L.492, L.489, L.485, L.480, L.483, L.482, L.479, L.475, L.478, L.477, L.474, L.468, L.473, L.472, L.470, L.467, L.457, L.465, L.464, L.447, L.450, L.453, L.452, L.455, L.449, L.402, L.441, L.443, L.406, L.421, L.429, L.436, L.438, L.439, L.437, L.435, L.433, L.432, L.430, L.428, L.427, L.423, L.426, L.425, L.422, L.420, L.409, L.418, L.411, L.416, L.414, L.413, L.408, L.405, L.407, L.392, L.400, L.399, L.401, L.397, L.395, L.391, L.389, L.387, L.385, L.383, L.380, L.379, L.378, L.366, L.369, L.372, L.375, L.374, L.376, L.371, L.373, L.368, L.370, L.365, L.361, L.360, L.362, L.359, L.354, L.357, L.356, L.351, L.350, L.349, L.343, L.342, L.340, L.339, L.337, L.336, L.332, L.331, L.326, L.325, L.308, L.311, L.313, L.315, L.317, L.319, L.322, L.321, L.305, L.295, L.294, L.296, L.298, L.291, L.290, L.289, L.286, L.285, L.280, L.269, L.272, L.277, L.271, L.258, L.257, L.260, L.263, L.262, L.259, L.248, L.256, L.255, L.253, L.252, L.247, L.245, L.234, L.243, L.241, L.240, L.242, L.237, L.236, L.233, L.229, L.223, L.221, L.220, L.219, L.218, L.215, L.214, L.210, L.209, L.208, L.207, L.204, L.203, L.199, L.198, L.188, L.194, L.193, L.192, L.151, L.163, L.167, L.180, L.183, L.182, L.173, L.175, L.166, L.168, L.165, L.150, L.161, L.152, L.149, L.143, L.148, L.146, L.145, L.142, L.141, L.139, L.138, L.137, L.135, L.134, L.133, L.132, L.127, L.126, L.121, L.123, L.115, L.119, L.117, L.113, L.112, L.114, L.109, L.108, L.102, L.101, L.104, L.98, L.97, L.92, L.91, L.87, L.86, L.85, L.83, L.82, L.80, L.79, L.77, L.76, L.74, L.67, L.70, L.69, L.64, L.62, L.61, L.59, L.58, L.53, L.52, L.51, L.48, L.47, L.44, L.43, L.40, L.39, L.36, L.35, L.29, L.28, L.27,;
  L.561:
  bits64[i@UfThold] = bits64[i@Underflow];
  f@547.1404 = bits64[i@CInvrse];
  if (%feq(%fmul(f@547.1404,bits64[i@Q], System.rounding_mode), %fmul(%fmul(f@547.1404,bits64[i@Y], System.rounding_mode),bits64[i@S], System.rounding_mode))) { goto L.562; }
  bits64[i@UfThold] = bits64[i@Y];
  foreign "C" (i@BadCond)(0, "address" i@564);
  foreign "C" (i@printf)("address" i@565, "float" bits64[i@UfThold]);
  foreign "C" (i@printf)("address" i@566, "float" bits64[i@C]);
  foreign "C" (i@printf)("address" i@567);
  L.562:
  foreign "C" (i@Pause)();
  goto L.560;
  L.568:
  foreign "C" (i@BadCond)(0, "address" i@569);
  foreign "C" (i@printf)("address" i@570);
  foreign "C" (i@printf)("address" i@571, "float" bits64[i@Q], "float" bits64[i@Y2]);
  "float" f@548.1405 = foreign "C" (i@fabs)("float" %fsub(bits64[i@Q],bits64[i@Y2], System.rounding_mode));
  foreign "C" (i@printf)("address" i@572, "float" f@548.1405);
  bits64[i@UfThold] = bits64[i@Q];
  goto L.560;
  L.573:
  i@549.1406 = i@X;
  bits64[i@549.1406] = bits64[i@549.1406];
  goto L.560;
  L.574:
  f@550.1407 = bits64[i@UfThold];
  if (%fne(bits64[i@Q], f@550.1407)) { goto L.575; }
  f@551.1408 = bits64[i@E1];
  if (%fne(f@551.1408, bits64[i@E0])) { goto L.575; }
  "float" f@552.1409 = foreign "C" (i@fabs)("float" %fsub(f@550.1407,%fdiv(f@551.1408,bits64[i@E9], System.rounding_mode), System.rounding_mode));
  if (%fgt(f@552.1409, bits64[i@E1])) { goto L.575; }
  bits32[i@UfNGrad] = 0;
  foreign "C" (i@printf)("address" i@577);
  foreign "C" (i@printf)("address" i@578);
  i@553.1411 = i@Y;
  f@554.1412 = bits64[i@E0];
  f@555.1413 = bits64[i@CInvrse];
  bits64[i@553.1411] = %fmul(f@554.1412,f@555.1413, System.rounding_mode);
  f@556.1414 = bits64[i@U2];
  bits64[i@553.1411] = %fmul(bits64[i@553.1411],%fadd(bits64[i@OneAndHalf],f@556.1414, System.rounding_mode), System.rounding_mode);
  i@557.1415 = i@X;
  bits64[i@557.1415] = %fmul(f@555.1413,%fadd(bits64[i@One],f@556.1414, System.rounding_mode), System.rounding_mode);
  bits64[i@553.1411] = %fdiv(bits64[i@553.1411],bits64[i@557.1415], System.rounding_mode);
  if (%fne(bits64[i@553.1411], f@554.1412)) { goto L.580; }
  i@579.1410 = 1;
  goto L.581;
  L.580:
  i@579.1410 = 0;
  L.581:
  bits32[i@IEEE] = i@579.1410;
  L.575:
  L.559:
  L.560:
  if (%eq(bits32[i@UfNGrad], 0)) { goto L.584; }
  foreign "C" (i@printf)("address" i@56);
  bits32[i@sigsave] = i@sigfpe;
  i@559.1416 = foreign "C" (i@_setjmp)("address" i@ovfl_buf);
  if (%eq(i@559.1416, 0)) { goto L.586; }
  foreign "C" (i@printf)("address" i@588);
  f@560.1417 = bits64[i@H];
  bits64[i@R] = %fadd(f@560.1417,f@560.1417, System.rounding_mode);
  goto L.587;
  L.586:
  "float" f@561.1418 = foreign "C" (i@sqrt)("float" %fdiv(bits64[i@Underflow],bits64[i@UfThold], System.rounding_mode));
  bits64[i@R] = f@561.1418;
  L.587:
  bits32[i@sigsave] = 0;
  if (%fgt(bits64[i@R], bits64[i@H])) { goto L.589; }
  i@562.1419 = i@Z;
  f@563.1420 = bits64[i@R];
  bits64[i@562.1419] = %fmul(f@563.1420,bits64[i@UfThold], System.rounding_mode);
  f@564.1421 = bits64[i@One];
  f@565.1422 = bits64[i@H];
  bits64[i@X] = %fmul(bits64[i@562.1419],%fadd(f@564.1421,%fmul(%fmul(f@563.1420,f@565.1422, System.rounding_mode),%fadd(f@564.1421,f@565.1422, System.rounding_mode), System.rounding_mode), System.rounding_mode), System.rounding_mode);
  goto L.590;
  L.589:
  i@566.1423 = i@Z;
  bits64[i@566.1423] = bits64[i@UfThold];
  f@567.1424 = bits64[i@One];
  f@568.1425 = bits64[i@H];
  bits64[i@X] = %fmul(bits64[i@566.1423],%fadd(f@567.1424,%fmul(%fmul(f@568.1425,f@568.1425, System.rounding_mode),%fadd(f@567.1424,f@568.1425, System.rounding_mode), System.rounding_mode), System.rounding_mode), System.rounding_mode);
  L.590:
  f@569.1426 = bits64[i@X];
  f@570.1427 = bits64[i@Z];
  if (%feq(f@569.1426, f@570.1427)) { goto L.591; }
  if (%fne(%fsub(f@569.1426,f@570.1427, System.rounding_mode), bits64[i@Zero])) { goto L.591; }
  foreign "C" (i@BadCond)(3, "address" i@169);
  foreign "C" (i@printf)("address" i@593, "float" bits64[i@X], "float" bits64[i@Z]);
  i@571.1428 = i@Z9;
  bits64[i@571.1428] = %fsub(bits64[i@X],bits64[i@Z], System.rounding_mode);
  foreign "C" (i@printf)("address" i@594, "float" bits64[i@571.1428]);
  foreign "C" (i@printf)("address" i@595);
  foreign "C" (i@printf)("address" i@596);
  foreign "C" (i@printf)("address" i@597);
  foreign "C" (i@printf)("address" i@598);
  foreign "C" (i@printf)("address" i@599);
  foreign "C" (i@printf)("address" i@600);
  bits32[i@sigsave] = i@sigfpe;
  i@572.1429 = foreign "C" (i@_setjmp)("address" i@ovfl_buf);
  if (%eq(i@572.1429, 0)) { goto L.601; }
  foreign "C" (i@printf)("address" i@603);
  goto L.602;
  L.601:
  f@573.1430 = bits64[i@Half];
  foreign "C" (i@printf)("address" i@604, "float" %fsub(%fsub(%fdiv(bits64[i@X],bits64[i@Z], System.rounding_mode),f@573.1430, System.rounding_mode),f@573.1430, System.rounding_mode));
  L.602:
  bits32[i@sigsave] = 0;
  L.591:
  L.584:
  foreign "C" (i@printf)("address" i@605, "float" bits64[i@UfThold], "address" i@606);
  foreign "C" (i@printf)("address" i@607);
  foreign "C" (i@printf)("address" i@608);
  i@574.1431 = i@Y2;
  f@575.1432 = bits64[i@U1];
  bits64[i@574.1431] = %fmul(f@575.1432,f@575.1432, System.rounding_mode);
  i@576.1433 = i@Y;
  f@577.1434 = bits64[i@574.1431];
  bits64[i@576.1433] = %fmul(f@577.1434,f@577.1434, System.rounding_mode);
  bits64[i@574.1431] = %fmul(bits64[i@576.1433],f@575.1432, System.rounding_mode);
  if (%fgt(bits64[i@574.1431], bits64[i@UfThold])) { goto L.609; }
  if (%fle(bits64[i@Y], bits64[i@E0])) { goto L.611; }
  foreign "C" (i@BadCond)(2, "address" i@169);
  bits32[i@I] = 5;
  goto L.612;
  L.611:
  foreign "C" (i@BadCond)(1, "address" i@169);
  bits32[i@I] = 4;
  L.612:
  foreign "C" (i@printf)("address" i@613, bits32[i@I]);
  L.609:
  bits32[i@Milestone] = 130;
  "float" f@578.1435 = foreign "C" (i@log)("float" bits64[i@UfThold]);
  "float" f@579.1436 = foreign "C" (i@log)("float" bits64[i@HInvrse]);
  "float" f@580.1437 = foreign "C" (i@floor)("float" %fsub(bits64[i@Half],%fdiv(%fmul(bits64[i@TwoForty],f@578.1435, System.rounding_mode),f@579.1436, System.rounding_mode), System.rounding_mode));
  bits64[i@Y] = %fdiv(%fneg(f@580.1437),bits64[i@TwoForty], System.rounding_mode);
  f@581.1438 = bits64[i@Y];
  bits64[i@Y2] = %fadd(f@581.1438,f@581.1438, System.rounding_mode);
  foreign "C" (i@printf)("address" i@614);
  foreign "C" (i@printf)("address" i@615, "float" bits64[i@HInvrse], "float" bits64[i@Y]);
  foreign "C" (i@printf)("address" i@616, "float" bits64[i@HInvrse], "float" bits64[i@Y]);
  "float" f@582.1439 = foreign "C" (i@pow)("float" bits64[i@HInvrse], "float" bits64[i@Y2]);
  bits64[i@V9] = f@582.1439;
  foreign "C" (i@printf)("address" i@617, "float" bits64[i@V9]);
  f@583.1440 = bits64[i@V9];
  if (%flt(f@583.1440, bits64[i@Zero])) { goto L.620; }
  f@584.1441 = bits64[i@Radix];
  if (%fle(f@583.1440, %fmul(%fadd(%fadd(f@584.1441,f@584.1441, System.rounding_mode),bits64[i@E9], System.rounding_mode),bits64[i@UfThold], System.rounding_mode))) { goto L.618; }
  L.620:
  foreign "C" (i@BadCond)(1, "address" i@621);
  foreign "C" (i@printf)("address" i@622, "float" bits64[i@UfThold]);
  goto L.619;
  L.618:
  if (%fgt(bits64[i@V9], %fmul(bits64[i@UfThold],%fadd(bits64[i@One],bits64[i@E9], System.rounding_mode), System.rounding_mode))) { goto L.623; }
  foreign "C" (i@printf)("address" i@625);
  goto L.624;
  L.623:
  foreign "C" (i@BadCond)(2, "address" i@621);
  foreign "C" (i@printf)("address" i@622, "float" bits64[i@UfThold]);
  L.624:
  L.619:
  bits32[i@Milestone] = 140;
  foreign "C" (i@printf)("address" i@56);
  f@585.1442 = bits64[i@Zero];
  bits64[i@X] = f@585.1442;
  bits32[i@I] = 2;
  bits64[i@Y] = %fmul(bits64[i@Two],bits64[i@Three], System.rounding_mode);
  bits64[i@Q] = f@585.1442;
  bits32[i@N] = 0;
  L.626:
  i@586.1443 = i@Z;
  i@587.1444 = i@X;
  bits64[i@586.1443] = bits64[i@587.1444];
  i@588.1445 = i@I;
  bits32[i@588.1445] = %add(bits32[i@588.1445],1);
  i@589.1446 = i@Y;
  i@590.1447 = bits32[i@588.1445];
  bits64[i@589.1446] = %fdiv(bits64[i@589.1446],%i2f64(%add(i@590.1447,i@590.1447), System.rounding_mode), System.rounding_mode);
  i@591.1448 = i@R;
  i@592.1449 = i@Q;
  bits64[i@591.1448] = %fadd(bits64[i@589.1446],bits64[i@592.1449], System.rounding_mode);
  f@593.1450 = bits64[i@586.1443];
  f@594.1451 = bits64[i@591.1448];
  bits64[i@587.1444] = %fadd(f@593.1450,f@594.1451, System.rounding_mode);
  bits64[i@592.1449] = %fadd(%fsub(f@593.1450,bits64[i@587.1444], System.rounding_mode),f@594.1451, System.rounding_mode);
  L.627:
  if (%fgt(bits64[i@X], bits64[i@Z])) { goto L.626; }
  i@595.1452 = i@Z;
  f@596.1453 = bits64[i@OneAndHalf];
  i@597.1454 = i@X;
  bits64[i@595.1452] = %fadd(%fadd(f@596.1453,%fdiv(bits64[i@One],bits64[i@Eight], System.rounding_mode), System.rounding_mode),%fdiv(bits64[i@597.1454],%fmul(f@596.1453,bits64[i@ThirtyTwo], System.rounding_mode), System.rounding_mode), System.rounding_mode);
  f@598.1455 = bits64[i@595.1452];
  bits64[i@597.1454] = %fmul(f@598.1455,f@598.1455, System.rounding_mode);
  i@599.1456 = i@Exp2;
  f@600.1457 = bits64[i@597.1454];
  bits64[i@599.1456] = %fmul(f@600.1457,f@600.1457, System.rounding_mode);
  bits64[i@597.1454] = bits64[i@F9];
  bits64[i@Y] = %fsub(bits64[i@597.1454],bits64[i@U1], System.rounding_mode);
  foreign "C" (i@printf)("address" i@629, "float" bits64[i@599.1456]);
  bits32[i@I] = 1;
  L.630:
  i@601.1458 = i@Z;
  f@602.1459 = bits64[i@X];
  f@603.1460 = bits64[i@BInvrse];
  bits64[i@601.1458] = %fsub(f@602.1459,f@603.1460, System.rounding_mode);
  f@604.1461 = bits64[i@One];
  bits64[i@601.1458] = %fdiv(%fadd(f@602.1459,f@604.1461, System.rounding_mode),%fsub(bits64[i@601.1458],%fsub(f@604.1461,f@603.1460, System.rounding_mode), System.rounding_mode), System.rounding_mode);
  "float" f@605.1462 = foreign "C" (i@pow)("float" f@602.1459, "float" bits64[i@601.1458]);
  bits64[i@Q] = %fsub(f@605.1462,bits64[i@Exp2], System.rounding_mode);
  "float" f@606.1463 = foreign "C" (i@fabs)("float" bits64[i@Q]);
  if (%fle(f@606.1463, %fmul(bits64[i@TwoForty],bits64[i@U2], System.rounding_mode))) { goto L.634; }
  bits32[i@N] = 1;
  f@607.1464 = bits64[i@BInvrse];
  bits64[i@V9] = %fsub(%fsub(bits64[i@X],f@607.1464, System.rounding_mode),%fsub(bits64[i@One],f@607.1464, System.rounding_mode), System.rounding_mode);
  foreign "C" (i@BadCond)(2, "address" i@636);
  "float" f@608.1465 = foreign "C" (i@pow)("float" bits64[i@X], "float" bits64[i@Z]);
  foreign "C" (i@printf)("address" i@637, "float" f@608.1465);
  foreign "C" (i@printf)("address" i@638, "float" bits64[i@V9], "float" bits64[i@Z]);
  foreign "C" (i@printf)("address" i@639, "float" bits64[i@Q]);
  foreign "C" (i@printf)("address" i@640);
  foreign "C" (i@printf)("address" i@641);
  goto L.632;
  L.634:
  i@609.1466 = i@Z;
  i@610.1467 = i@Y;
  f@611.1468 = bits64[i@610.1467];
  i@612.1469 = i@X;
  bits64[i@609.1466] = %fadd(%fmul(%fsub(f@611.1468,bits64[i@612.1469], System.rounding_mode),bits64[i@Two], System.rounding_mode),f@611.1468, System.rounding_mode);
  bits64[i@612.1469] = f@611.1468;
  bits64[i@610.1467] = bits64[i@609.1466];
  f@613.1470 = %fsub(bits64[i@612.1469],bits64[i@F9], System.rounding_mode);
  bits64[i@609.1466] = %fadd(bits64[i@One],%fmul(f@613.1470,f@613.1470, System.rounding_mode), System.rounding_mode);
  if (%fle(bits64[i@Z], bits64[i@One])) { goto L.642; }
  if (%ge(bits32[i@I], bits32[i@NoTrials])) { goto L.642; }
  i@614.1471 = i@I;
  bits32[i@614.1471] = %add(bits32[i@614.1471],1);
  goto L.630;
  L.642:
  if (%fle(bits64[i@X], bits64[i@One])) { goto L.644; }
  if (%ne(bits32[i@N], 0)) { goto L.632; }
  foreign "C" (i@printf)("address" i@648);
  goto L.632;
  L.644:
  i@615.1472 = i@X;
  f@616.1473 = bits64[i@U2];
  bits64[i@615.1472] = %fadd(bits64[i@One],f@616.1473, System.rounding_mode);
  i@617.1474 = i@Y;
  bits64[i@617.1474] = %fadd(f@616.1473,f@616.1473, System.rounding_mode);
  bits64[i@617.1474] = %fadd(bits64[i@617.1474],bits64[i@615.1472], System.rounding_mode);
  bits32[i@I] = 1;
  goto L.630;
  L.632:
  bits32[i@Milestone] = 150;
  foreign "C" (i@printf)("address" i@649);
  bits32[i@N] = 0;
  bits64[i@Z] = bits64[i@A1];
  "float" f@618.1475 = foreign "C" (i@log)("float" bits64[i@C]);
  "float" f@619.1476 = foreign "C" (i@log)("float" bits64[i@A1]);
  "float" f@620.1477 = foreign "C" (i@floor)("float" %fsub(bits64[i@Half],%fdiv(f@618.1475,f@619.1476, System.rounding_mode), System.rounding_mode));
  bits64[i@Q] = f@620.1477;
  bits32[i@Break] = 0;
  L.650:
  bits64[i@X] = bits64[i@CInvrse];
  "float" f@621.1478 = foreign "C" (i@pow)("float" bits64[i@Z], "float" bits64[i@Q]);
  bits64[i@Y] = f@621.1478;
  foreign "C" (i@IsYeqX)();
  i@622.1479 = i@Q;
  bits64[i@622.1479] = %fneg(bits64[i@622.1479]);
  bits64[i@X] = bits64[i@C];
  "float" f@623.1480 = foreign "C" (i@pow)("float" bits64[i@Z], "float" bits64[i@622.1479]);
  bits64[i@Y] = f@623.1480;
  foreign "C" (i@IsYeqX)();
  if (%fge(bits64[i@Z], bits64[i@One])) { goto L.653; }
  bits32[i@Break] = 1;
  goto L.654;
  L.653:
  bits64[i@Z] = bits64[i@AInvrse];
  L.654:
  L.651:
  if (%eq(bits32[i@Break], 0)) { goto L.650; }
  foreign "C" (i@PrintIfNPositive)();
  if (%ne(bits32[i@N], 0)) { goto L.655; }
  foreign "C" (i@printf)("address" i@657);
  L.655:
  foreign "C" (i@printf)("address" i@56);
  bits32[i@Milestone] = 160;
  foreign "C" (i@Pause)();
  foreign "C" (i@printf)("address" i@658);
  foreign "C" (i@printf)("address" i@659);
  i@624.1481 = i@Y;
  bits64[i@624.1481] = %fneg(bits64[i@CInvrse]);
  bits64[i@V9] = %fmul(bits64[i@HInvrse],bits64[i@624.1481], System.rounding_mode);
  bits32[i@sigsave] = i@sigfpe;
  i@625.1482 = foreign "C" (i@_setjmp)("address" i@ovfl_buf);
  if (%eq(i@625.1482, 0)) { goto L.660; }
  bits32[i@I] = 0;
  bits64[i@V9] = bits64[i@Y];
  goto L.662;
  L.660:
  L.663:
  i@626.1483 = i@Y;
  bits64[i@V] = bits64[i@626.1483];
  i@627.1484 = i@V9;
  bits64[i@626.1483] = bits64[i@627.1484];
  bits64[i@627.1484] = %fmul(bits64[i@HInvrse],bits64[i@626.1483], System.rounding_mode);
  L.664:
  if (%flt(bits64[i@V9], bits64[i@Y])) { goto L.663; }
  bits32[i@I] = 1;
  L.662:
  bits32[i@sigsave] = 0;
  bits64[i@Z] = bits64[i@V9];
  foreign "C" (i@printf)("address" i@666);
  foreign "C" (i@printf)("address" i@667, "float" bits64[i@Y]);
  i@628.1485 = i@V9;
  f@629.1486 = bits64[i@Y];
  bits64[i@628.1485] = %fneg(f@629.1486);
  i@630.1487 = i@V0;
  bits64[i@630.1487] = bits64[i@628.1485];
  f@631.1488 = bits64[i@V];
  if (%fne(%fsub(f@631.1488,f@629.1486, System.rounding_mode), %fadd(f@631.1488,bits64[i@630.1487], System.rounding_mode))) { goto L.668; }
  foreign "C" (i@printf)("address" i@670);
  goto L.669;
  L.668:
  foreign "C" (i@printf)("address" i@671);
  foreign "C" (i@BadCond)(3, "address" i@672);
  L.669:
  if (%feq(bits64[i@Z], bits64[i@Y])) { goto L.673; }
  foreign "C" (i@BadCond)(1, "address" i@169);
  foreign "C" (i@printf)("address" i@675, "float" bits64[i@Y], "float" bits64[i@Z]);
  L.673:
  if (%eq(bits32[i@I], 0)) { goto L.676; }
  i@632.1489 = i@Y;
  f@633.1490 = bits64[i@V];
  f@634.1491 = bits64[i@HInvrse];
  f@635.1492 = bits64[i@U2];
  bits64[i@632.1489] = %fmul(f@633.1490,%fsub(%fmul(f@634.1491,f@635.1492, System.rounding_mode),f@634.1491, System.rounding_mode), System.rounding_mode);
  i@636.1493 = i@Z;
  bits64[i@636.1493] = %fadd(bits64[i@632.1489],%fmul(%fmul(%fsub(bits64[i@One],f@634.1491, System.rounding_mode),f@635.1492, System.rounding_mode),f@633.1490, System.rounding_mode), System.rounding_mode);
  if (%fge(bits64[i@636.1493], bits64[i@V0])) { goto L.678; }
  bits64[i@Y] = bits64[i@Z];
  L.678:
  if (%fge(bits64[i@Y], bits64[i@V0])) { goto L.680; }
  bits64[i@V] = bits64[i@Y];
  L.680:
  f@637.1494 = bits64[i@V0];
  if (%fge(%fsub(f@637.1494,bits64[i@V], System.rounding_mode), f@637.1494)) { goto L.677; }
  bits64[i@V] = bits64[i@V0];
  goto L.677;
  L.676:
  i@638.1495 = i@V;
  f@639.1496 = bits64[i@Y];
  f@640.1497 = bits64[i@HInvrse];
  f@641.1498 = bits64[i@U2];
  bits64[i@638.1495] = %fmul(f@639.1496,%fsub(%fmul(f@640.1497,f@641.1498, System.rounding_mode),f@640.1497, System.rounding_mode), System.rounding_mode);
  bits64[i@638.1495] = %fadd(bits64[i@638.1495],%fmul(%fmul(%fsub(bits64[i@One],f@640.1497, System.rounding_mode),f@641.1498, System.rounding_mode),f@639.1496, System.rounding_mode), System.rounding_mode);
  L.677:
  foreign "C" (i@printf)("address" i@684, "float" bits64[i@V]);
  if (%eq(bits32[i@I], 0)) { goto L.685; }
  foreign "C" (i@printf)("address" i@687, "float" bits64[i@V0]);
  goto L.686;
  L.685:
  foreign "C" (i@printf)("address" i@688);
  L.686:
  i@642.1499 = i@V9;
  bits64[i@642.1499] = %fmul(bits64[i@V],bits64[i@One], System.rounding_mode);
  foreign "C" (i@printf)("address" i@689, "float" bits64[i@642.1499]);
  i@643.1500 = i@V9;
  bits64[i@643.1500] = %fdiv(bits64[i@V],bits64[i@One], System.rounding_mode);
  foreign "C" (i@printf)("address" i@690, "float" bits64[i@643.1500]);
  foreign "C" (i@printf)("address" i@691);
  foreign "C" (i@printf)("address" i@692);
  bits32[i@Milestone] = 170;
  f@644.1501 = bits64[i@V];
  if (%fge(%fneg(f@644.1501), f@644.1501)) { goto L.697; }
  f@645.1502 = bits64[i@V0];
  if (%fge(%fneg(f@645.1502), f@645.1502)) { goto L.697; }
  f@646.1503 = bits64[i@UfThold];
  if (%fge(%fneg(f@646.1503), f@644.1501)) { goto L.697; }
  if (%flt(f@646.1503, f@644.1501)) { goto L.693; }
  L.697:
  foreign "C" (i@BadCond)(0, "address" i@698);
  foreign "C" (i@printf)("address" i@699, "float" bits64[i@V], "float" bits64[i@V0], "float" bits64[i@UfThold]);
  L.693:
  bits32[i@Milestone] = 175;
  foreign "C" (i@printf)("address" i@56);
  bits32[i@Indx] = 1;
  L.700:
  i@647.1504 = bits32[i@Indx];
  if (%eq(i@647.1504, 1)) { goto L.706; }
  if (%eq(i@647.1504, 2)) { goto L.707; }
  if (%eq(i@647.1504, 3)) { goto L.708; }
  goto L.704;
  L.706:
  bits64[i@Z] = bits64[i@UfThold];
  goto L.705;
  L.707:
  bits64[i@Z] = bits64[i@E0];
  goto L.705;
  L.708:
  bits64[i@Z] = bits64[i@PseudoZero];
  L.704:
  L.705:
  if (%feq(bits64[i@Z], bits64[i@Zero])) { goto L.709; }
  "float" f@648.1505 = foreign "C" (i@sqrt)("float" bits64[i@Z]);
  bits64[i@V9] = f@648.1505;
  f@649.1506 = bits64[i@V9];
  bits64[i@Y] = %fmul(f@649.1506,f@649.1506, System.rounding_mode);
  f@650.1507 = bits64[i@Y];
  f@651.1508 = bits64[i@One];
  f@652.1509 = %fmul(bits64[i@Radix],bits64[i@E9], System.rounding_mode);
  f@653.1510 = bits64[i@Z];
  if (%flt(%fdiv(f@650.1507,%fsub(f@651.1508,f@652.1509, System.rounding_mode), System.rounding_mode), f@653.1510)) { goto L.713; }
  if (%fle(f@650.1507, %fmul(%fadd(f@651.1508,f@652.1509, System.rounding_mode),f@653.1510, System.rounding_mode))) { goto L.711; }
  L.713:
  if (%fle(bits64[i@V9], bits64[i@U1])) { goto L.714; }
  foreign "C" (i@BadCond)(1, "address" i@169);
  goto L.715;
  L.714:
  foreign "C" (i@BadCond)(2, "address" i@169);
  L.715:
  foreign "C" (i@printf)("address" i@716, "float" bits64[i@Z]);
  foreign "C" (i@printf)("address" i@717, "float" bits64[i@Y]);
  L.711:
  L.709:
  L.701:
  i@654.1511 = i@Indx;
  bits32[i@654.1511] = %add(bits32[i@654.1511],1);
  if (%le(bits32[i@Indx], 3)) { goto L.700; }
  bits32[i@Milestone] = 180;
  bits32[i@Indx] = 1;
  L.718:
  if (%ne(bits32[i@Indx], 1)) { goto L.722; }
  bits64[i@Z] = bits64[i@V];
  goto L.723;
  L.722:
  bits64[i@Z] = bits64[i@V0];
  L.723:
  "float" f@655.1512 = foreign "C" (i@sqrt)("float" bits64[i@Z]);
  bits64[i@V9] = f@655.1512;
  i@656.1513 = i@X;
  i@657.1514 = i@V9;
  f@658.1515 = bits64[i@657.1514];
  bits64[i@656.1513] = %fmul(%fsub(bits64[i@One],%fmul(bits64[i@Radix],bits64[i@E9], System.rounding_mode), System.rounding_mode),f@658.1515, System.rounding_mode);
  bits64[i@657.1514] = %fmul(f@658.1515,bits64[i@656.1513], System.rounding_mode);
  f@659.1516 = bits64[i@V9];
  f@660.1517 = bits64[i@Z];
  if (%flt(f@659.1516, %fmul(%fsub(bits64[i@One],%fmul(%fmul(bits64[i@Two],bits64[i@Radix], System.rounding_mode),bits64[i@E9], System.rounding_mode), System.rounding_mode),f@660.1517, System.rounding_mode))) { goto L.726; }
  if (%fle(f@659.1516, f@660.1517)) { goto L.724; }
  L.726:
  bits64[i@Y] = bits64[i@V9];
  if (%fge(bits64[i@X], bits64[i@W])) { goto L.727; }
  foreign "C" (i@BadCond)(1, "address" i@169);
  goto L.728;
  L.727:
  foreign "C" (i@BadCond)(2, "address" i@169);
  L.728:
  foreign "C" (i@printf)("address" i@729, "float" bits64[i@Z]);
  foreign "C" (i@printf)("address" i@730, "float" bits64[i@Y]);
  L.724:
  L.719:
  i@661.1518 = i@Indx;
  bits32[i@661.1518] = %add(bits32[i@661.1518],1);
  if (%le(bits32[i@Indx], 2)) { goto L.718; }
  bits32[i@Milestone] = 190;
  foreign "C" (i@Pause)();
  bits64[i@X] = %fmul(bits64[i@UfThold],bits64[i@V], System.rounding_mode);
  f@662.1519 = bits64[i@Radix];
  bits64[i@Y] = %fmul(f@662.1519,f@662.1519, System.rounding_mode);
  f@663.1520 = bits64[i@X];
  f@664.1521 = bits64[i@Y];
  if (%flt(%fmul(f@663.1520,f@664.1521, System.rounding_mode), bits64[i@One])) { goto L.733; }
  if (%fle(f@663.1520, f@664.1521)) { goto L.731; }
  L.733:
  f@665.1522 = bits64[i@X];
  f@666.1523 = bits64[i@Y];
  f@667.1524 = bits64[i@U1];
  if (%flt(%fmul(f@665.1522,f@666.1523, System.rounding_mode), f@667.1524)) { goto L.736; }
  if (%fle(f@665.1522, %fdiv(f@666.1523,f@667.1524, System.rounding_mode))) { goto L.734; }
  L.736:
  foreign "C" (i@BadCond)(2, "address" i@737);
  goto L.735;
  L.734:
  foreign "C" (i@BadCond)(3, "address" i@169);
  L.735:
  foreign "C" (i@printf)("address" i@738, "float" bits64[i@X], "address" i@739);
  L.731:
  bits32[i@Milestone] = 200;
  bits32[i@Indx] = 1;
  L.740:
  bits64[i@X] = bits64[i@F9];
  i@668.1525 = bits32[i@Indx];
  i@669.1526 = 2;
  if (%lt(i@668.1525, i@669.1526)) { goto L.744; }
  if (%gt(i@668.1525, 5)) { goto L.744; }
  goto bits32[%add(%shl(i@668.1525,i@669.1526),(i@750-8))] targets L.18, L.829, L.782, L.810, L.815, L.824, L.823, L.820, L.819, L.809, L.813, L.781, L.799, L.793, L.786, L.775, L.778, L.774, L.767, L.763, L.741, L.753, L.758, L.757, L.755, L.752, L.745, L.744, L.749, L.748, L.747, L.746, L.740, L.731, L.735, L.734, L.736, L.733, L.719, L.724, L.728, L.727, L.726, L.723, L.722, L.718, L.701, L.709, L.711, L.715, L.714, L.713, L.705, L.704, L.708, L.707, L.706, L.700, L.693, L.697, L.686, L.685, L.677, L.676, L.680, L.678, L.673, L.669, L.668, L.662, L.664, L.663, L.660, L.655, L.651, L.654, L.653, L.650, L.632, L.644, L.642, L.634, L.630, L.627, L.626, L.619, L.624, L.623, L.618, L.620, L.609, L.612, L.611, L.584, L.591, L.602, L.601, L.590, L.589, L.587, L.586, L.560, L.559, L.575, L.581, L.580, L.574, L.573, L.568, L.562, L.561, L.557, L.555, L.553, L.542, L.545, L.544, L.540, L.527, L.530, L.529, L.515, L.526, L.520, L.522, L.524, L.519, L.514, L.513, L.511, L.510, L.509, L.508, L.507, L.505, L.504, L.503, L.501, L.500, L.495, L.498, L.497, L.493, L.492, L.489, L.485, L.480, L.483, L.482, L.479, L.475, L.478, L.477, L.474, L.468, L.473, L.472, L.470, L.467, L.457, L.465, L.464, L.447, L.450, L.453, L.452, L.455, L.449, L.402, L.441, L.443, L.406, L.421, L.429, L.436, L.438, L.439, L.437, L.435, L.433, L.432, L.430, L.428, L.427, L.423, L.426, L.425, L.422, L.420, L.409, L.418, L.411, L.416, L.414, L.413, L.408, L.405, L.407, L.392, L.400, L.399, L.401, L.397, L.395, L.391, L.389, L.387, L.385, L.383, L.380, L.379, L.378, L.366, L.369, L.372, L.375, L.374, L.376, L.371, L.373, L.368, L.370, L.365, L.361, L.360, L.362, L.359, L.354, L.357, L.356, L.351, L.350, L.349, L.343, L.342, L.340, L.339, L.337, L.336, L.332, L.331, L.326, L.325, L.308, L.311, L.313, L.315, L.317, L.319, L.322, L.321, L.305, L.295, L.294, L.296, L.298, L.291, L.290, L.289, L.286, L.285, L.280, L.269, L.272, L.277, L.271, L.258, L.257, L.260, L.263, L.262, L.259, L.248, L.256, L.255, L.253, L.252, L.247, L.245, L.234, L.243, L.241, L.240, L.242, L.237, L.236, L.233, L.229, L.223, L.221, L.220, L.219, L.218, L.215, L.214, L.210, L.209, L.208, L.207, L.204, L.203, L.199, L.198, L.188, L.194, L.193, L.192, L.151, L.163, L.167, L.180, L.183, L.182, L.173, L.175, L.166, L.168, L.165, L.150, L.161, L.152, L.149, L.143, L.148, L.146, L.145, L.142, L.141, L.139, L.138, L.137, L.135, L.134, L.133, L.132, L.127, L.126, L.121, L.123, L.115, L.119, L.117, L.113, L.112, L.114, L.109, L.108, L.102, L.101, L.104, L.98, L.97, L.92, L.91, L.87, L.86, L.85, L.83, L.82, L.80, L.79, L.77, L.76, L.74, L.67, L.70, L.69, L.64, L.62, L.61, L.59, L.58, L.53, L.52, L.51, L.48, L.47, L.44, L.43, L.40, L.39, L.36, L.35, L.29, L.28, L.27,;
  L.746:
  bits64[i@X] = %fadd(bits64[i@One],bits64[i@U2], System.rounding_mode);
  goto L.745;
  L.747:
  bits64[i@X] = bits64[i@V];
  goto L.745;
  L.748:
  bits64[i@X] = bits64[i@UfThold];
  goto L.745;
  L.749:
  bits64[i@X] = bits64[i@Radix];
  L.744:
  L.745:
  bits64[i@Y] = bits64[i@X];
  bits32[i@sigsave] = i@sigfpe;
  i@670.1527 = foreign "C" (i@_setjmp)("address" i@ovfl_buf);
  if (%eq(i@670.1527, 0)) { goto L.752; }
  foreign "C" (i@printf)("address" i@754, "float" bits64[i@X]);
  goto L.753;
  L.752:
  i@671.1528 = i@V9;
  f@672.1529 = bits64[i@Half];
  bits64[i@671.1528] = %fsub(%fsub(%fdiv(bits64[i@Y],bits64[i@X], System.rounding_mode),f@672.1529, System.rounding_mode),f@672.1529, System.rounding_mode);
  if (%fne(bits64[i@671.1528], bits64[i@Zero])) { goto L.755; }
  goto L.741;
  L.755:
  if (%fne(bits64[i@V9], %fneg(bits64[i@U1]))) { goto L.757; }
  if (%ge(bits32[i@Indx], 5)) { goto L.757; }
  foreign "C" (i@BadCond)(3, "address" i@169);
  goto L.758;
  L.757:
  foreign "C" (i@BadCond)(1, "address" i@169);
  L.758:
  foreign "C" (i@printf)("address" i@759, "float" bits64[i@X]);
  foreign "C" (i@printf)("address" i@760, "float" bits64[i@V9]);
  L.753:
  bits32[i@sigsave] = 0;
  L.741:
  i@673.1530 = i@Indx;
  bits32[i@673.1530] = %add(bits32[i@673.1530],1);
  if (%le(bits32[i@Indx], 5)) { goto L.740; }
  bits32[i@Milestone] = 210;
  bits64[i@MyZero] = bits64[i@Zero];
  foreign "C" (i@printf)("address" i@56);
  foreign "C" (i@printf)("address" i@761);
  bits32[i@sigsave] = i@sigfpe;
  foreign "C" (i@printf)("address" i@762);
  i@674.1531 = foreign "C" (i@_setjmp)("address" i@ovfl_buf);
  if (%ne(i@674.1531, 0)) { goto L.763; }
  foreign "C" (i@printf)("address" i@765, "float" %fdiv(bits64[i@One],bits64[i@MyZero], System.rounding_mode));
  L.763:
  i@675.1532 = i@sigsave;
  bits32[i@675.1532] = 0;
  bits32[i@675.1532] = i@sigfpe;
  foreign "C" (i@printf)("address" i@766);
  i@676.1533 = foreign "C" (i@_setjmp)("address" i@ovfl_buf);
  if (%ne(i@676.1533, 0)) { goto L.767; }
  foreign "C" (i@printf)("address" i@765, "float" %fdiv(bits64[i@Zero],bits64[i@MyZero], System.rounding_mode));
  L.767:
  bits32[i@sigsave] = 0;
  bits32[i@Milestone] = 220;
  foreign "C" (i@Pause)();
  foreign "C" (i@printf)("address" i@56);
  i@i.1534 = 0;
  L.774:
  if (%eq(bits32[%add(%shl(i@i.1534,2),i@ErrCnt)], 0)) { goto L.778; }
  i@677.1535 = %shl(i@i.1534,2);
  foreign "C" (i@printf)("address" i@780, "address" bits32[%add(i@677.1535,L.769)], bits32[%add(i@677.1535,i@ErrCnt)]);
  L.778:
  L.775:
  i@i.1534 = %add(i@i.1534,1);
  if (%lt(i@i.1534, 4)) { goto L.774; }
  foreign "C" (i@printf)("address" i@56);
  if (%le(%add(%add(%add(bits32[i@ErrCnt],bits32[(i@ErrCnt+4)]),bits32[(i@ErrCnt+8)]),bits32[(i@ErrCnt+12)]), 0)) { goto L.781; }
  i@678.1536 = 0;
  if (%ne(%add(%add(bits32[i@ErrCnt],bits32[(i@ErrCnt+4)]),bits32[(i@ErrCnt+8)]), i@678.1536)) { goto L.786; }
  if (%le(bits32[(i@ErrCnt+12)], i@678.1536)) { goto L.786; }
  foreign "C" (i@printf)("address" i@791);
  foreign "C" (i@printf)("address" i@792);
  L.786:
  i@679.1537 = 0;
  if (%ne(%add(bits32[i@ErrCnt],bits32[(i@ErrCnt+4)]), i@679.1537)) { goto L.793; }
  if (%le(bits32[(i@ErrCnt+8)], i@679.1537)) { goto L.793; }
  foreign "C" (i@printf)("address" i@797);
  foreign "C" (i@printf)("address" i@798);
  L.793:
  if (%le(%add(bits32[i@ErrCnt],bits32[(i@ErrCnt+4)]), 0)) { goto L.799; }
  foreign "C" (i@printf)("address" i@802);
  foreign "C" (i@printf)("address" i@803);
  L.799:
  if (%le(bits32[i@ErrCnt], 0)) { goto L.782; }
  foreign "C" (i@printf)("address" i@806);
  foreign "C" (i@printf)("address" i@807);
  goto L.782;
  L.781:
  foreign "C" (i@printf)("address" i@808);
  i@680.1538 = 1;
  if (%ne(bits32[i@RMult], i@680.1538)) { goto L.813; }
  if (%ne(bits32[i@RDiv], i@680.1538)) { goto L.813; }
  if (%ne(bits32[i@RAddSub], i@680.1538)) { goto L.813; }
  if (%eq(bits32[i@RSqrt], i@680.1538)) { goto L.809; }
  L.813:
  foreign "C" (i@printf)("address" i@814);
  goto L.810;
  L.809:
  f@681.1539 = bits64[i@One];
  if (%flt(bits64[i@StickyBit], f@681.1539)) { goto L.815; }
  f@682.1540 = bits64[i@Radix];
  if (%fne(%fmul(%fsub(f@682.1540,bits64[i@Two], System.rounding_mode),%fsub(%fsub(f@682.1540,bits64[i@Nine], System.rounding_mode),f@681.1539, System.rounding_mode), System.rounding_mode), bits64[i@Zero])) { goto L.815; }
  foreign "C" (i@printf)("address" i@817);
  foreign "C" (i@printf)("address" i@818);
  f@683.1541 = bits64[i@Two];
  if (%fne(bits64[i@Radix], f@683.1541)) { goto L.819; }
  f@684.1542 = bits64[i@Precision];
  f@685.1543 = bits64[i@TwentySeven];
  if (%fne(%fmul(%fsub(f@684.1542,%fmul(%fmul(bits64[i@Four],bits64[i@Three], System.rounding_mode),f@683.1541, System.rounding_mode), System.rounding_mode),%fadd(%fsub(%fsub(f@684.1542,f@685.1543, System.rounding_mode),f@685.1543, System.rounding_mode),bits64[i@One], System.rounding_mode), System.rounding_mode), bits64[i@Zero])) { goto L.819; }
  foreign "C" (i@printf)("address" i@821);
  goto L.820;
  L.819:
  foreign "C" (i@printf)("address" i@822);
  L.820:
  if (%eq(bits32[i@IEEE], 0)) { goto L.823; }
  foreign "C" (i@printf)("address" i@825);
  goto L.824;
  L.823:
  foreign "C" (i@printf)("address" i@826);
  foreign "C" (i@printf)("address" i@827);
  L.824:
  L.815:
  foreign "C" (i@printf)("address" i@828);
  L.810:
  L.782:
  if (%eq(bits32[i@fpecount], 0)) { goto L.829; }
  foreign "C" (i@printf)("address" i@831, bits32[i@fpecount]);
  L.829:
  foreign "C" (i@printf)("address" i@832);
  return (0);
  L.18:
return();
}
}
section "data" {
align 4;
i@582:
bits32 {L.561};
bits32 {L.568};
bits32 {L.573};
bits32 {L.574};
}
section "text" {
}
section "data" {
align 4;
i@750:
bits32 {L.746};
bits32 {L.747};
bits32 {L.748};
bits32 {L.749};
}
section "text" {
export i@Sign as "Sign";
foreign "C" i@Sign("float" bits64 f@X, ) {
  stackdata {
  }
  bits64 f@1545.1549;
  if (%flt(f@X, bits64[f@19])) { goto L.1546; }
  f@1545.1549 = bits64[f@20];
  goto L.1547;
  L.1546:
  f@1545.1549 = bits64[f@1548];
  L.1547:
  return ("float" f@1545.1549);
  L.1544:
return();
}
export i@Pause as "Pause";
foreign "C" i@Pause() {
  stackdata {
  }
  bits32 i@1.1553;
  bits32 i@2.1554;
  bits32 i@3.1555;
  foreign "C" (i@printf)("address" i@1551, bits32[i@Milestone]);
  foreign "C" (i@printf)("address" i@1552, bits32[i@PageNo]);
  i@1.1553 = i@Milestone;
  i@2.1554 = 1;
  bits32[i@1.1553] = %add(bits32[i@1.1553],i@2.1554);
  i@3.1555 = i@PageNo;
  bits32[i@3.1555] = %add(bits32[i@3.1555],i@2.1554);
  return (0);
  L.1550:
return();
}
export i@TstCond as "TstCond";
foreign "C" i@TstCond(bits32 i@K, bits32 i@Valid, "address" bits32 i@T, ) {
  stackdata {
  }
  if (%ne(i@Valid, 0)) { goto L.1557; }
  foreign "C" (i@BadCond)(i@K, "address" i@T);
  foreign "C" (i@printf)("address" i@825);
  L.1557:
  return (0);
  L.1556:
return();
}
}
section "data" {
align 4;
L.1560:
bits32 {i@1561};
bits32 {i@1562};
bits32 {i@1563};
bits32 {i@1564};
export i@BadCond as "BadCond";
}
section "text" {
foreign "C" i@BadCond(bits32 i@K, "address" bits32 i@T, ) {
  stackdata {
  }
  bits32 i@1.1566;
  i@1.1566 = %add(%shl(i@K,2),i@ErrCnt);
  bits32[i@1.1566] = %add(bits32[i@1.1566],1);
  foreign "C" (i@printf)("address" i@1565, "address" bits32[%add(%shl(i@K,2),L.1560)], "address" i@T);
  return (0);
  L.1559:
return();
}
export i@Random as "Random";
foreign "C" i@Random() {
  stackdata {
  }
  bits64 f@X.1569;
  bits64 f@Y.1570;
  bits64 f@1.1571;
  bits64 f@2.1572;
  bits64 f@3.1573;
  bits64 f@4.1574;
  bits32 i@5.1575;
  f@X.1569 = %fadd(bits64[i@Random1],bits64[i@Random9], System.rounding_mode);
  f@Y.1570 = %fmul(f@X.1569,f@X.1569, System.rounding_mode);
  f@Y.1570 = %fmul(f@Y.1570,f@Y.1570, System.rounding_mode);
  f@X.1569 = %fmul(f@X.1569,f@Y.1570, System.rounding_mode);
  "float" f@4.1574 = foreign "C" (i@floor)("float" f@X.1569);
  f@Y.1570 = %fsub(f@X.1569,f@4.1574, System.rounding_mode);
  i@5.1575 = i@Random1;
  bits64[i@5.1575] = %fadd(f@Y.1570,%fmul(bits64[f@1568],f@X.1569, System.rounding_mode), System.rounding_mode);
  return ("float" bits64[i@5.1575]);
  L.1567:
return();
}
export i@SqXMinX as "SqXMinX";
foreign "C" i@SqXMinX(bits32 i@ErrKind, ) {
  stackdata {
  }
  bits64 f@XB.1585;
  stackdata {
    align 4;
    f@XA.1586: bits64;
  }
  bits64 f@1.1587;
  bits64 f@2.1588;
  bits32 i@3.1589;
  bits64 f@4.1590;
  f@1.1587 = bits64[i@X];
  f@XB.1585 = %fmul(f@1.1587,bits64[i@BInvrse], System.rounding_mode);
  bits64[f@XA.1586] = %fsub(f@1.1587,f@XB.1585, System.rounding_mode);
  "float" f@2.1588 = foreign "C" (i@sqrt)("float" %fmul(f@1.1587,f@1.1587, System.rounding_mode));
  bits64[i@SqEr] = %fdiv(%fsub(%fsub(f@2.1588,f@XB.1585, System.rounding_mode),bits64[f@XA.1586], System.rounding_mode),bits64[i@OneUlp], System.rounding_mode);
  if (%feq(bits64[i@SqEr], bits64[i@Zero])) { goto L.1577; }
  if (%fge(bits64[i@SqEr], bits64[i@MinSqEr])) { goto L.1579; }
  bits64[i@MinSqEr] = bits64[i@SqEr];
  L.1579:
  if (%fle(bits64[i@SqEr], bits64[i@MaxSqEr])) { goto L.1581; }
  bits64[i@MaxSqEr] = bits64[i@SqEr];
  L.1581:
  i@3.1589 = i@J;
  bits64[i@3.1589] = %fadd(bits64[i@3.1589],bits64[f@20], System.rounding_mode);
  foreign "C" (i@BadCond)(i@ErrKind, "address" i@56);
  f@4.1590 = bits64[i@X];
  foreign "C" (i@printf)("address" i@1583, "float" %fmul(f@4.1590,f@4.1590, System.rounding_mode), "float" f@4.1590, "float" %fmul(bits64[i@OneUlp],bits64[i@SqEr], System.rounding_mode));
  foreign "C" (i@printf)("address" i@1584);
  L.1577:
  return (0);
  L.1576:
return();
}
export i@NewD as "NewD";
foreign "C" i@NewD() {
  stackdata {
  }
  bits32 i@1.1594;
  bits64 f@2.1595;
  bits64 f@3.1596;
  bits32 i@4.1597;
  bits32 i@5.1598;
  bits64 f@6.1599;
  bits32 i@7.1600;
  bits64 f@8.1601;
  bits64 f@9.1602;
  bits32 i@10.1603;
  bits32 i@11.1604;
  bits32 i@12.1605;
  i@1.1594 = i@X;
  bits64[i@1.1594] = %fmul(bits64[i@Z1],bits64[i@Q], System.rounding_mode);
  "float" f@2.1595 = foreign "C" (i@floor)("float" %fsub(bits64[i@Half],%fdiv(bits64[i@1.1594],bits64[i@Radix], System.rounding_mode), System.rounding_mode));
  f@3.1596 = bits64[i@Radix];
  i@4.1597 = i@X;
  bits64[i@1.1594] = %fadd(%fmul(f@2.1595,f@3.1596, System.rounding_mode),bits64[i@4.1597], System.rounding_mode);
  i@5.1598 = i@Q;
  f@6.1599 = bits64[i@4.1597];
  i@7.1600 = i@Z;
  f@8.1601 = bits64[i@7.1600];
  f@9.1602 = bits64[i@D];
  bits64[i@5.1598] = %fadd(%fdiv(%fsub(bits64[i@5.1598],%fmul(f@6.1599,f@8.1601, System.rounding_mode), System.rounding_mode),f@3.1596, System.rounding_mode),%fmul(%fmul(f@6.1599,f@6.1599, System.rounding_mode),%fdiv(f@9.1602,f@3.1596, System.rounding_mode), System.rounding_mode), System.rounding_mode);
  bits64[i@7.1600] = %fsub(f@8.1601,%fmul(%fmul(bits64[i@Two],f@6.1599, System.rounding_mode),f@9.1602, System.rounding_mode), System.rounding_mode);
  if (%fgt(bits64[i@7.1600], bits64[i@Zero])) { goto L.1592; }
  i@10.1603 = i@Z;
  bits64[i@10.1603] = %fneg(bits64[i@10.1603]);
  i@11.1604 = i@Z1;
  bits64[i@11.1604] = %fneg(bits64[i@11.1604]);
  L.1592:
  i@12.1605 = i@D;
  bits64[i@12.1605] = %fmul(bits64[i@Radix],bits64[i@12.1605], System.rounding_mode);
  return (0);
  L.1591:
return();
}
export i@SR3750 as "SR3750";
foreign "C" i@SR3750() {
  stackdata {
  }
  bits64 f@1.1613;
  bits64 f@2.1614;
  bits64 f@3.1615;
  bits32 i@4.1616;
  bits64 f@5.1617;
  bits32 i@6.1618;
  bits32 i@7.1619;
  bits64 f@8.1620;
  bits64 f@9.1621;
  bits64 f@10.1622;
  bits64 f@11.1623;
  bits32 i@12.1624;
  bits32 i@13.1625;
  f@1.1613 = bits64[i@X];
  f@2.1614 = bits64[i@Radix];
  f@3.1615 = bits64[i@Z2];
  if (%flt(%fsub(f@1.1613,f@2.1614, System.rounding_mode), %fsub(f@3.1615,f@2.1614, System.rounding_mode))) { goto L.1607; }
  if (%fgt(%fsub(f@1.1613,f@3.1615, System.rounding_mode), %fsub(bits64[i@W],f@3.1615, System.rounding_mode))) { goto L.1607; }
  i@4.1616 = i@I;
  bits32[i@4.1616] = %add(bits32[i@4.1616],1);
  "float" f@5.1617 = foreign "C" (i@sqrt)("float" %fmul(bits64[i@X],bits64[i@D], System.rounding_mode));
  bits64[i@X2] = f@5.1617;
  i@6.1618 = i@Y2;
  i@7.1619 = i@X2;
  f@8.1620 = bits64[i@Z2];
  f@9.1621 = bits64[i@Y];
  bits64[i@6.1618] = %fsub(%fsub(bits64[i@7.1619],f@8.1620, System.rounding_mode),%fsub(f@9.1621,f@8.1620, System.rounding_mode), System.rounding_mode);
  f@10.1622 = bits64[i@Half];
  bits64[i@7.1619] = %fdiv(bits64[i@X8],%fsub(f@9.1621,f@10.1622, System.rounding_mode), System.rounding_mode);
  f@11.1623 = bits64[i@7.1619];
  bits64[i@7.1619] = %fsub(f@11.1623,%fmul(%fmul(f@10.1622,f@11.1623, System.rounding_mode),f@11.1623, System.rounding_mode), System.rounding_mode);
  i@12.1624 = i@SqEr;
  bits64[i@12.1624] = %fadd(%fadd(bits64[i@6.1618],f@10.1622, System.rounding_mode),%fsub(f@10.1622,bits64[i@7.1619], System.rounding_mode), System.rounding_mode);
  if (%fge(bits64[i@12.1624], bits64[i@MinSqEr])) { goto L.1609; }
  bits64[i@MinSqEr] = bits64[i@SqEr];
  L.1609:
  i@13.1625 = i@SqEr;
  bits64[i@13.1625] = %fsub(bits64[i@Y2],bits64[i@X2], System.rounding_mode);
  if (%fle(bits64[i@13.1625], bits64[i@MaxSqEr])) { goto L.1611; }
  bits64[i@MaxSqEr] = bits64[i@SqEr];
  L.1611:
  L.1607:
  return (0);
  L.1606:
return();
}
export i@IsYeqX as "IsYeqX";
foreign "C" i@IsYeqX() {
  stackdata {
  }
  bits64 f@1.1639;
  bits32 i@2.1640;
  if (%feq(bits64[i@Y], bits64[i@X])) { goto L.1627; }
  if (%gt(bits32[i@N], 0)) { goto L.1629; }
  f@1.1639 = bits64[i@Zero];
  if (%fne(bits64[i@Z], f@1.1639)) { goto L.1631; }
  if (%fgt(bits64[i@Q], f@1.1639)) { goto L.1631; }
  foreign "C" (i@printf)("address" i@1633);
  goto L.1632;
  L.1631:
  foreign "C" (i@BadCond)(2, "address" i@1634);
  L.1632:
  foreign "C" (i@printf)("address" i@1635, "float" bits64[i@Z], "float" bits64[i@Q]);
  foreign "C" (i@printf)("address" i@1636, "float" bits64[i@Y]);
  foreign "C" (i@printf)("address" i@1637, "float" bits64[i@X]);
  foreign "C" (i@printf)("address" i@1638, "float" %fsub(bits64[i@Y],bits64[i@X], System.rounding_mode));
  L.1629:
  i@2.1640 = i@N;
  bits32[i@2.1640] = %add(bits32[i@2.1640],1);
  L.1627:
  return (0);
  L.1626:
return();
}
export i@SR3980 as "SR3980";
foreign "C" i@SR3980() {
  stackdata {
  }
  bits32 i@1.1647;
  bits64 f@2.1648;
  bits32 i@3.1649;
  bits32 i@4.1650;
  bits32 i@5.1651;
  L.1642:
  i@1.1647 = i@Q;
  bits64[i@1.1647] = %i2f64(bits32[i@I], System.rounding_mode);
  "float" f@2.1648 = foreign "C" (i@pow)("float" bits64[i@Z], "float" bits64[i@1.1647]);
  bits64[i@Y] = f@2.1648;
  foreign "C" (i@IsYeqX)();
  i@3.1649 = i@I;
  i@4.1650 = %add(bits32[i@3.1649],1);
  bits32[i@3.1649] = i@4.1650;
  if (%le(i@4.1650, bits32[i@M])) { goto L.1645; }
  goto L.1644;
  L.1645:
  i@5.1651 = i@X;
  bits64[i@5.1651] = %fmul(bits64[i@Z],bits64[i@5.1651], System.rounding_mode);
  L.1643:
  if (%flt(bits64[i@X], bits64[i@W])) { goto L.1642; }
  L.1644:
  return (0);
  L.1641:
return();
}
export i@PrintIfNPositive as "PrintIfNPositive";
foreign "C" i@PrintIfNPositive() {
  stackdata {
  }
  if (%le(bits32[i@N], 0)) { goto L.1653; }
  foreign "C" (i@printf)("address" i@1655, bits32[i@N]);
  L.1653:
  return (0);
  L.1652:
return();
}
export i@TstPtUf as "TstPtUf";
foreign "C" i@TstPtUf() {
  stackdata {
  }
  bits32 i@1.1700;
  bits32 i@2.1701;
  bits64 f@3.1702;
  bits64 f@4.1703;
  bits64 f@5.1704;
  bits32 i@6.1705;
  bits32 i@7.1706;
  bits32 i@8.1707;
  bits64 f@9.1708;
  bits64 f@10.1709;
  bits64 f@11.1710;
  bits64 f@12.1711;
  bits32[i@N] = 0;
  if (%feq(bits64[i@Z], bits64[i@Zero])) { goto L.1657; }
  foreign "C" (i@printf)("address" i@1659);
  foreign "C" (i@printf)("address" i@1660);
  bits32[i@sigsave] = i@sigfpe;
  i@1.1700 = foreign "C" (i@_setjmp)("address" i@ovfl_buf);
  if (%eq(i@1.1700, 0)) { goto L.1661; }
  goto L.1663;
  L.1661:
  i@2.1701 = i@Q9;
  f@3.1702 = bits64[i@Z];
  bits64[i@2.1701] = %fdiv(%fadd(f@3.1702,f@3.1702, System.rounding_mode),f@3.1702, System.rounding_mode);
  foreign "C" (i@printf)("address" i@1664, "float" bits64[i@2.1701]);
  "float" f@4.1703 = foreign "C" (i@fabs)("float" %fsub(bits64[i@Q9],bits64[i@Two], System.rounding_mode));
  if (%fge(f@4.1703, %fmul(bits64[i@Radix],bits64[i@U2], System.rounding_mode))) { goto L.1665; }
  foreign "C" (i@printf)("address" i@1667);
  foreign "C" (i@printf)("address" i@1668);
  goto L.1666;
  L.1665:
  f@5.1704 = bits64[i@Q9];
  if (%flt(f@5.1704, bits64[i@One])) { goto L.1671; }
  if (%fle(f@5.1704, bits64[i@Two])) { goto L.1669; }
  L.1671:
  L.1663:
  i@6.1705 = 1;
  bits32[i@N] = i@6.1705;
  bits32[(i@ErrCnt+4)] = %add(bits32[(i@ErrCnt+4)],i@6.1705);
  foreign "C" (i@printf)("address" i@1674);
  goto L.1670;
  L.1669:
  i@7.1706 = 1;
  bits32[i@N] = i@7.1706;
  bits32[(i@ErrCnt+8)] = %add(bits32[(i@ErrCnt+8)],i@7.1706);
  foreign "C" (i@printf)("address" i@1677);
  L.1670:
  L.1666:
  bits32[i@sigsave] = 0;
  i@8.1707 = i@V9;
  f@9.1708 = bits64[i@Z];
  f@10.1709 = bits64[i@One];
  bits64[i@8.1707] = %fmul(f@9.1708,f@10.1709, System.rounding_mode);
  bits64[i@Random1] = bits64[i@8.1707];
  bits64[i@8.1707] = %fmul(f@10.1709,f@9.1708, System.rounding_mode);
  bits64[i@Random2] = bits64[i@8.1707];
  bits64[i@8.1707] = %fdiv(f@9.1708,f@10.1709, System.rounding_mode);
  f@11.1710 = bits64[i@Z];
  if (%fne(f@11.1710, bits64[i@Random1])) { goto L.1678; }
  if (%fne(f@11.1710, bits64[i@Random2])) { goto L.1678; }
  if (%fne(f@11.1710, bits64[i@V9])) { goto L.1678; }
  if (%le(bits32[i@N], 0)) { goto L.1679; }
  foreign "C" (i@Pause)();
  goto L.1679;
  L.1678:
  bits32[i@N] = 1;
  foreign "C" (i@BadCond)(2, "address" i@1682);
  foreign "C" (i@printf)("address" i@1683, "float" bits64[i@Z]);
  if (%feq(bits64[i@Z], bits64[i@Random1])) { goto L.1684; }
  foreign "C" (i@printf)("address" i@1686, "float" bits64[i@Random1]);
  L.1684:
  f@12.1711 = bits64[i@Random2];
  if (%feq(bits64[i@Z], f@12.1711)) { goto L.1687; }
  if (%feq(f@12.1711, bits64[i@Random1])) { goto L.1687; }
  foreign "C" (i@printf)("address" i@1689, "float" bits64[i@Random2]);
  L.1687:
  if (%feq(bits64[i@Z], bits64[i@V9])) { goto L.1690; }
  foreign "C" (i@printf)("address" i@1692, "float" bits64[i@V9]);
  L.1690:
  if (%feq(bits64[i@Random2], bits64[i@Random1])) { goto L.1693; }
  bits32[(i@ErrCnt+8)] = %add(bits32[(i@ErrCnt+8)],1);
  foreign "C" (i@BadCond)(2, "address" i@1697);
  foreign "C" (i@printf)("address" i@1698, "float" bits64[i@Random2]);
  foreign "C" (i@printf)("address" i@1699, "float" bits64[i@Random1]);
  L.1693:
  foreign "C" (i@Pause)();
  L.1679:
  L.1657:
  return (0);
  L.1656:
return();
}
export i@notify as "notify";
foreign "C" i@notify("address" bits32 i@s, ) {
  stackdata {
  }
  foreign "C" (i@printf)("address" i@1713, "address" i@s);
  foreign "C" (i@printf)("address" i@1714);
  return (0);
  L.1712:
return();
}
export i@msglist as "msglist";
foreign "C" i@msglist("address" bits32 i@s, ) {
  stackdata {
  }
  bits32 i@1.1720;
  goto L.1717;
  L.1716:
  i@1.1720 = i@s;
  i@s = %add(i@1.1720,4);
  foreign "C" (i@printf)("address" i@1719, "address" bits32[i@1.1720]);
  L.1717:
  if (%ne(%lobits32(bits32[i@s]), 0)) { goto L.1716; }
  return (0);
  L.1715:
return();
}
}
section "data" {
align 4;
L.1722:
bits32 {i@1723};
bits32 {i@1724};
bits32 {i@1725};
bits32 {i@1726};
bits32 {i@1727};
bits32 {i@1728};
bits32 {i@1729};
bits32 {i@1730};
bits32 {i@1731};
bits32[] {0x0};
export i@Instructions as "Instructions";
}
section "text" {
foreign "C" i@Instructions() {
  stackdata {
  }
  foreign "C" (i@msglist)("address" L.1722);
  return (0);
  L.1721:
return();
}
}
section "data" {
align 4;
L.1733:
bits32 {i@1734};
bits32 {i@1735};
bits32 {i@1736};
bits32 {i@1737};
bits32 {i@1738};
bits32 {i@1739};
bits32 {i@1740};
bits32 {i@1741};
bits32 {i@1742};
bits32 {i@1743};
bits32 {i@1744};
bits32 {i@1745};
bits32 {i@1746};
bits32 {i@1747};
bits32[] {0x0};
export i@Heading as "Heading";
}
section "text" {
foreign "C" i@Heading() {
  stackdata {
  }
  foreign "C" (i@msglist)("address" L.1733);
  return (0);
  L.1732:
return();
}
}
section "data" {
align 4;
L.1749:
bits32 {i@1750};
bits32 {i@1751};
bits32 {i@1752};
bits32 {i@1753};
bits32 {i@1754};
bits32 {i@1755};
bits32 {i@1756};
bits32 {i@1757};
bits32 {i@1758};
bits32 {i@1759};
bits32 {i@1760};
bits32 {i@1761};
bits32 {i@1762};
bits32 {i@1763};
bits32 {i@1764};
bits32 {i@1765};
bits32 {i@1766};
bits32 {i@1767};
bits32 {i@1768};
bits32[] {0x0};
export i@Characteristics as "Characteristics";
}
section "text" {
foreign "C" i@Characteristics() {
  stackdata {
  }
  foreign "C" (i@msglist)("address" L.1749);
  return (0);
  L.1748:
return();
}
}
section "data" {
align 4;
L.1770:
bits32 {i@1771};
bits32 {i@1772};
bits32 {i@1773};
bits32 {i@1774};
bits32 {i@1775};
bits32 {i@1776};
bits32 {i@1777};
bits32 {i@1778};
bits32 {i@1779};
bits32 {i@1780};
bits32 {i@1781};
bits32 {i@1782};
bits32 {i@1783};
bits32 {i@1784};
bits32 {i@1785};
bits32 {i@1786};
bits32 {i@1787};
bits32[] {0x0};
export i@History as "History";
}
section "text" {
foreign "C" i@History() {
  stackdata {
  }
  foreign "C" (i@msglist)("address" L.1770);
  return (0);
  L.1769:
return();
}
export i@pow as "pow";
foreign "C" i@pow("float" bits64 f@x, "float" bits64 f@y, ) {
  stackdata {
  }
  bits32 i@i.1816;
  stackdata {
    align 4;
    i@ex.1817: bits32;
  }
  bits64 f@xy.1818;
  bits32 i@ey.1819;
  stackdata {
    align 4;
    i@flip.1820: bits32;
  }
  stackdata {
    align 4;
    f@ye.1821: bits64;
  }
  bits64 f@1.1822;
  bits64 f@2.1823;
  bits64 f@3.1824;
  bits64 f@4.1825;
  bits64 f@5.1826;
  bits64 f@6.1827;
  bits64 f@7.1828;
  bits32 i@8.1829;
  bits32 i@9.1830;
  bits64 f@10.1831;
  bits64 f@11.1832;
  i@ey.1819 = 0;
  bits32[i@flip.1820] = 0;
  if (%fne(f@y, bits64[f@19])) { goto L.1789; }
  return ("float" bits64[f@20]);
  goto L.1788;
  L.1789:
  if (%flt(f@y, bits64[f@1794])) { goto L.1793; }
  if (%fle(f@y, bits64[f@1795])) { goto L.1791; }
  L.1793:
  if (%feq(f@x, bits64[f@1548])) { goto L.1791; }
  "float" f@2.1823 = foreign "C" (i@log)("float" f@x);
  "float" f@3.1824 = foreign "C" (i@exp)("float" %fmul(f@y,f@2.1823, System.rounding_mode));
  return ("float" f@3.1824);
  goto L.1788;
  L.1791:
  if (%fge(f@y, bits64[f@19])) { goto L.1796; }
  f@y = %fneg(f@y);
  bits32[i@flip.1820] = 1;
  L.1796:
  "float" f@4.1825 = foreign "C" (i@modf)("float" f@y, "address" f@ye.1821);
  f@y = f@4.1825;
  if (%feq(f@y, bits64[f@19])) { goto L.1798; }
  "float" f@5.1826 = foreign "C" (i@log)("float" f@x);
  "float" f@6.1827 = foreign "C" (i@exp)("float" %fmul(f@y,f@5.1826, System.rounding_mode));
  f@xy.1818 = f@6.1827;
  goto L.1799;
  L.1798:
  f@xy.1818 = bits64[f@20];
  L.1799:
  "float" f@7.1828 = foreign "C" (i@frexp)("float" f@x, "address" i@ex.1817);
  f@x = f@7.1828;
  i@8.1829 = %f2i32(bits64[f@ye.1821], System.rounding_mode);
  i@i.1816 = i@8.1829;
  if (%eq(i@8.1829, 0)) { goto L.1800; }
  L.1802:
  if (%eq(%and(i@i.1816,1), 0)) { goto L.1806; }
  f@xy.1818 = %fmul(f@xy.1818,f@x, System.rounding_mode);
  i@ey.1819 = %add(i@ey.1819,bits32[i@ex.1817]);
  L.1806:
  i@9.1830 = %shra(i@i.1816,1);
  i@i.1816 = i@9.1830;
  if (%ne(i@9.1830, 0)) { goto L.1808; }
  goto L.1804;
  L.1808:
  f@x = %fmul(f@x,f@x, System.rounding_mode);
  bits32[i@ex.1817] = %shl(bits32[i@ex.1817],1);
  if (%fge(f@x, bits64[f@1812])) { goto L.1802; }
  f@x = %fmul(bits64[f@1813],f@x, System.rounding_mode);
  bits32[i@ex.1817] = %sub(bits32[i@ex.1817],1);
  goto L.1802;
  L.1804:
  L.1800:
  if (%eq(bits32[i@flip.1820], 0)) { goto L.1814; }
  f@xy.1818 = %fdiv(bits64[f@20],f@xy.1818, System.rounding_mode);
  i@ey.1819 = %neg(i@ey.1819);
  L.1814:
  "float" f@11.1832 = foreign "C" (i@ldexp)("float" f@xy.1818, i@ey.1819);
  return ("float" f@11.1832);
  L.1788:
return();
}
import bits32 "modf" as i@modf;
import bits32 "ldexp" as i@ldexp;
import bits32 "frexp" as i@frexp;
import bits32 "exp" as i@exp;
import bits32 "abort" as i@abort;
}
section "bss" {
export i@UfNGrad as "UfNGrad";
align 4;
i@UfNGrad:
bits8[4];
export i@SqRWrng as "SqRWrng";
align 4;
i@SqRWrng:
bits8[4];
export i@IEEE as "IEEE";
align 4;
i@IEEE:
bits8[4];
export i@Anomaly as "Anomaly";
align 4;
i@Anomaly:
bits8[4];
export i@Monot as "Monot";
align 4;
i@Monot:
bits8[4];
export i@NotMonot as "NotMonot";
align 4;
i@NotMonot:
bits8[4];
export i@Done as "Done";
align 4;
i@Done:
bits8[4];
export i@Break as "Break";
align 4;
i@Break:
bits8[4];
export i@RSqrt as "RSqrt";
align 4;
i@RSqrt:
bits8[4];
export i@RAddSub as "RAddSub";
align 4;
i@RAddSub:
bits8[4];
export i@RDiv as "RDiv";
align 4;
i@RDiv:
bits8[4];
export i@RMult as "RMult";
align 4;
i@RMult:
bits8[4];
export i@GAddSub as "GAddSub";
align 4;
i@GAddSub:
bits8[4];
export i@GDiv as "GDiv";
align 4;
i@GDiv:
bits8[4];
export i@GMult as "GMult";
align 4;
i@GMult:
bits8[4];
export i@N1 as "N1";
align 4;
i@N1:
bits8[4];
export i@N as "N";
align 4;
i@N:
bits8[4];
export i@M as "M";
align 4;
i@M:
bits8[4];
export i@PageNo as "PageNo";
align 4;
i@PageNo:
bits8[4];
export i@Milestone as "Milestone";
align 4;
i@Milestone:
bits8[4];
export i@fpecount as "fpecount";
align 4;
i@fpecount:
bits8[4];
export i@ErrCnt as "ErrCnt";
align 4;
i@ErrCnt:
bits8[16];
export i@Z9 as "Z9";
align 4;
i@Z9:
bits8[8];
export i@Z2 as "Z2";
align 4;
i@Z2:
bits8[8];
export i@Z1 as "Z1";
align 4;
i@Z1:
bits8[8];
export i@PseudoZero as "PseudoZero";
align 4;
i@PseudoZero:
bits8[8];
export i@Z as "Z";
align 4;
i@Z:
bits8[8];
export i@Random2 as "Random2";
align 4;
i@Random2:
bits8[8];
export i@Y2 as "Y2";
align 4;
i@Y2:
bits8[8];
export i@Y1 as "Y1";
align 4;
i@Y1:
bits8[8];
export i@Y as "Y";
align 4;
i@Y:
bits8[8];
export i@Random1 as "Random1";
align 4;
i@Random1:
bits8[8];
export i@X8 as "X8";
align 4;
i@X8:
bits8[8];
export i@X2 as "X2";
align 4;
i@X2:
bits8[8];
export i@X1 as "X1";
align 4;
i@X1:
bits8[8];
export i@X as "X";
align 4;
i@X:
bits8[8];
export i@W as "W";
align 4;
i@W:
bits8[8];
export i@V9 as "V9";
align 4;
i@V9:
bits8[8];
export i@V0 as "V0";
align 4;
i@V0:
bits8[8];
export i@V as "V";
align 4;
i@V:
bits8[8];
export i@U2 as "U2";
align 4;
i@U2:
bits8[8];
export i@U1 as "U1";
align 4;
i@U1:
bits8[8];
export i@UfThold as "UfThold";
align 4;
i@UfThold:
bits8[8];
export i@OneUlp as "OneUlp";
align 4;
i@OneUlp:
bits8[8];
export i@S as "S";
align 4;
i@S:
bits8[8];
export i@Underflow as "Underflow";
align 4;
i@Underflow:
bits8[8];
export i@T as "T";
align 4;
i@T:
bits8[8];
export i@Random9 as "Random9";
align 4;
i@Random9:
bits8[8];
export i@R as "R";
align 4;
i@R:
bits8[8];
export i@Q9 as "Q9";
align 4;
i@Q9:
bits8[8];
export i@Q as "Q";
align 4;
i@Q:
bits8[8];
export i@Precision as "Precision";
align 4;
i@Precision:
bits8[8];
export i@MyZero as "MyZero";
align 4;
i@MyZero:
bits8[8];
export i@J as "J";
align 4;
i@J:
bits8[8];
export i@StickyBit as "StickyBit";
align 4;
i@StickyBit:
bits8[8];
export i@I as "I";
align 4;
i@I:
bits8[4];
export i@HInvrse as "HInvrse";
align 4;
i@HInvrse:
bits8[8];
export i@H as "H";
align 4;
i@H:
bits8[8];
export i@F9 as "F9";
align 4;
i@F9:
bits8[8];
export i@F6 as "F6";
align 4;
i@F6:
bits8[8];
export i@Third as "Third";
align 4;
i@Third:
bits8[8];
export i@E9 as "E9";
align 4;
i@E9:
bits8[8];
export i@MaxSqEr as "MaxSqEr";
align 4;
i@MaxSqEr:
bits8[8];
export i@SqEr as "SqEr";
align 4;
i@SqEr:
bits8[8];
export i@MinSqEr as "MinSqEr";
align 4;
i@MinSqEr:
bits8[8];
export i@E3 as "E3";
align 4;
i@E3:
bits8[8];
export i@Exp2 as "Exp2";
align 4;
i@Exp2:
bits8[8];
export i@E1 as "E1";
align 4;
i@E1:
bits8[8];
export i@E0 as "E0";
align 4;
i@E0:
bits8[8];
export i@FourD as "FourD";
align 4;
i@FourD:
bits8[8];
export i@D as "D";
align 4;
i@D:
bits8[8];
export i@CInvrse as "CInvrse";
align 4;
i@CInvrse:
bits8[8];
export i@C as "C";
align 4;
i@C:
bits8[8];
export i@A1 as "A1";
align 4;
i@A1:
bits8[8];
export i@AInvrse as "AInvrse";
align 4;
i@AInvrse:
bits8[8];
export i@ch as "ch";
i@ch:
bits8[8];
export i@Indx as "Indx";
align 4;
i@Indx:
bits8[4];
export i@BMinusU2 as "BMinusU2";
align 4;
i@BMinusU2:
bits8[8];
export i@RadixD2 as "RadixD2";
align 4;
i@RadixD2:
bits8[8];
export i@BInvrse as "BInvrse";
align 4;
i@BInvrse:
bits8[8];
export i@Radix as "Radix";
align 4;
i@Radix:
bits8[8];
export i@sigsave as "sigsave";
align 4;
i@sigsave:
bits8[4];
export i@ovfl_buf as "ovfl_buf";
align 4;
i@ovfl_buf:
bits8[156];
import bits32 "sqrt" as i@sqrt;
import bits32 "log" as i@log;
import bits32 "floor" as i@floor;
import bits32 "fabs" as i@fabs;
import bits32 "siglongjmp" as i@siglongjmp;
import bits32 "longjmp" as i@longjmp;
import bits32 "__sigsetjmp" as i@__sigsetjmp;
import bits32 "_setjmp" as i@_setjmp;
import bits32 "setjmp" as i@setjmp;
import bits32 "__libc_current_sigrtmax" as i@__libc_current_sigrtmax;
import bits32 "__libc_current_sigrtmin" as i@__libc_current_sigrtmin;
import bits32 "sigwait" as i@sigwait;
import bits32 "sigpending" as i@sigpending;
import bits32 "sigaction" as i@sigaction;
import bits32 "sigsuspend" as i@sigsuspend;
import bits32 "sigprocmask" as i@sigprocmask;
import bits32 "sigismember" as i@sigismember;
import bits32 "sigdelset" as i@sigdelset;
import bits32 "sigaddset" as i@sigaddset;
import bits32 "sigfillset" as i@sigfillset;
import bits32 "sigemptyset" as i@sigemptyset;
import bits32 "__sigpause" as i@__sigpause;
import bits32 "raise" as i@raise;
import bits32 "kill" as i@kill;
import bits32 "__sysv_signal" as i@__sysv_signal;
import bits32 "__sigdelset" as i@__sigdelset;
import bits32 "__sigaddset" as i@__sigaddset;
import bits32 "__sigismember" as i@__sigismember;
import bits32 "funlockfile" as i@funlockfile;
import bits32 "ftrylockfile" as i@ftrylockfile;
import bits32 "flockfile" as i@flockfile;
import bits32 "ctermid" as i@ctermid;
import bits32 "fileno" as i@fileno;
import bits32 "perror" as i@perror;
import bits32 "ferror" as i@ferror;
import bits32 "feof" as i@feof;
import bits32 "clearerr" as i@clearerr;
import bits32 "fsetpos" as i@fsetpos;
import bits32 "fgetpos" as i@fgetpos;
import bits32 "rewind" as i@rewind;
import bits32 "ftell" as i@ftell;
import bits32 "fseek" as i@fseek;
import bits32 "fwrite" as i@fwrite;
import bits32 "fread" as i@fread;
import bits32 "ungetc" as i@ungetc;
import bits32 "puts" as i@puts;
import bits32 "fputs" as i@fputs;
import bits32 "gets" as i@gets;
import bits32 "fgets" as i@fgets;
import bits32 "putchar_unlocked" as i@putchar_unlocked;
import bits32 "putc_unlocked" as i@putc_unlocked;
import bits32 "putchar" as i@putchar;
import bits32 "putc" as i@putc;
import bits32 "fputc" as i@fputc;
import bits32 "getchar_unlocked" as i@getchar_unlocked;
import bits32 "getc_unlocked" as i@getc_unlocked;
import bits32 "getchar" as i@getchar;
import bits32 "getc" as i@getc;
import bits32 "fgetc" as i@fgetc;
import bits32 "sscanf" as i@sscanf;
import bits32 "scanf" as i@scanf;
import bits32 "fscanf" as i@fscanf;
import bits32 "vsprintf" as i@vsprintf;
import bits32 "vprintf" as i@vprintf;
import bits32 "vfprintf" as i@vfprintf;
import bits32 "sprintf" as i@sprintf;
import bits32 "printf" as i@printf;
import bits32 "fprintf" as i@fprintf;
import bits32 "setvbuf" as i@setvbuf;
import bits32 "setbuf" as i@setbuf;
import bits32 "fdopen" as i@fdopen;
import bits32 "freopen" as i@freopen;
import bits32 "fopen" as i@fopen;
import bits32 "fflush" as i@fflush;
import bits32 "fclose" as i@fclose;
import bits32 "tmpnam" as i@tmpnam;
import bits32 "tmpfile" as i@tmpfile;
import bits32 "rename" as i@rename;
import bits32 "remove" as i@remove;
import bits32 "stderr" as i@stderr;
import bits32 "stdout" as i@stdout;
import bits32 "stdin" as i@stdin;
import bits32 "_IO_free_backup_area" as i@_IO_free_backup_area;
import bits32 "_IO_seekpos" as i@_IO_seekpos;
import bits32 "_IO_seekoff" as i@_IO_seekoff;
import bits32 "_IO_sgetn" as i@_IO_sgetn;
import bits32 "_IO_padn" as i@_IO_padn;
import bits32 "_IO_vfprintf" as i@_IO_vfprintf;
import bits32 "_IO_vfscanf" as i@_IO_vfscanf;
import bits32 "_IO_ftrylockfile" as i@_IO_ftrylockfile;
import bits32 "_IO_funlockfile" as i@_IO_funlockfile;
import bits32 "_IO_flockfile" as i@_IO_flockfile;
import bits32 "_IO_peekc_locked" as i@_IO_peekc_locked;
import bits32 "_IO_ferror" as i@_IO_ferror;
import bits32 "_IO_feof" as i@_IO_feof;
import bits32 "_IO_putc" as i@_IO_putc;
import bits32 "_IO_getc" as i@_IO_getc;
import bits32 "__woverflow" as i@__woverflow;
import bits32 "__wuflow" as i@__wuflow;
import bits32 "__wunderflow" as i@__wunderflow;
import bits32 "__overflow" as i@__overflow;
import bits32 "__uflow" as i@__uflow;
import bits32 "__underflow" as i@__underflow;
import bits32 "_IO_2_1_stderr_" as i@_IO_2_1_stderr_;
import bits32 "_IO_2_1_stdout_" as i@_IO_2_1_stdout_;
import bits32 "_IO_2_1_stdin_" as i@_IO_2_1_stdin_;
}
section "data" {
align 4;
f@1813:
bits32[] {0x0, 0x40000000};
align 4;
f@1812:
bits32[] {0x0, 0x3fe00000};
align 4;
f@1795:
bits32[] {0x0, 0x40913000};
align 4;
f@1794:
bits32[] {0x0, 0xc0913000};
i@1787:
bits8[] "see source comments for more history.\x00";
i@1786:
bits8[] "BASIC version of this program (C) 1983 by Prof. W. M. Kahan;\x00";
i@1785:
bits8[] "as used by certain early WANG machines.\x0a\x00";
i@1784:
bits8[] "floating-point numbers, but also allows logarithmic encoding\x00";
i@1783:
bits8[] "\x0aThe program is based upon a conventional radix representation for\x00";
i@1782:
bits8[] "of pathologies, and to say how well the arithmetic is implemented.\x00";
i@1781:
bits8[] "of the arithmetic, this program tries to cope with a wider variety\x00";
i@1780:
bits8[] "the Radix, Precision and range (over/underflow thresholds)\x00";
i@1779:
bits8[] "W. J. Cody and W. Waite. Although both programs try to discover\x00";
i@1778:
bits8[] "book  `Software Manual for the Elementary Functions' (1980) by\x00";
i@1777:
bits8[] "program called `MACHAR', which can be found at the end of the\x00";
i@1776:
bits8[] "The diagnostic capabilities of this program go beyond an earlier\x00";
i@1775:
bits8[] "Failures may confound subsequent diagnoses.\x0a\x00";
i@1774:
bits8[] "   FAILUREs, like 2+2 == 5 .\x00";
i@1773:
bits8[] "   Serious DEFECTs, like lack of a guard digit, and\x00";
i@1772:
bits8[] "   FLAWs, like lack of a sticky bit,\x00";
i@1771:
bits8[] "The program attempts to discriminate among\x00";
i@1768:
bits8[] "     Decimal-Binary conversion is NOT YET tested for accuracy.\x00";
i@1767:
bits8[] "     Extra-precise subexpressions are revealed but NOT YET tested.\x00";
i@1766:
bits8[] "     Sqrt is tested.  Y^X is not tested.\x00";
i@1765:
bits8[] "\x09and for contamination with pseudo-zeros.\x00";
i@1764:
bits8[] "     Comparisions are checked for consistency with subtraction\x00";
i@1763:
bits8[] "     V0  tells, roughly, whether  Infinity  is represented.\x00";
i@1762:
bits8[] "     V = an overflow threshold, roughly.\x00";
i@1761:
bits8[] "     E0 and PseudoZero tell whether underflow is abrupt, gradual, or fuzzy.\x00";
i@1760:
bits8[] "     UnderflowThreshold = an underflow threshold.\x00";
i@1759:
bits8[] "     Whether a Sticky Bit used correctly for rounding.\x00";
i@1758:
bits8[] "\x09for Mult., Div., Add/Subt. and Sqrt.\x00";
i@1757:
bits8[] "     Whether arithmetic is chopped, correctly rounded, or something else\x00";
i@1756:
bits8[] "     Adequacy of guard digits for Mult., Div. and Subt.\x00";
i@1755:
bits8[] "     U1 = 1/Radix^Precision = One Ulp of numbers a little less than 1.0 .\x00";
i@1754:
bits8[] "\x09(OneUlpnit in the Last Place) of 1.000xxx .\x00";
i@1753:
bits8[] "     U2 = Radix/Radix^Precision = One Ulp\x00";
i@1752:
bits8[] "     Precision = number of significant digits carried.\x00";
i@1751:
bits8[] "     Radix = 1, 2, 4, 8, 10, 16, 100, 256 ...\x00";
i@1750:
bits8[] "Running this program should reveal these characteristics:\x00";
i@1747:
bits8[] "\x09Other relevant compiler options:\x00";
i@1746:
bits8[] "\x09Optimization level:\x0a\x00";
i@1745:
bits8[] "\x09Compiler:\x0a\x00";
i@1744:
bits8[] "\x09Computer:\x0a\x00";
i@1743:
bits8[] "\x09Version:\x0910 February 1989;\x00";
i@1742:
bits8[] "\x09Precision:\x09double;\x00";
i@1741:
bits8[] "In doing so, please include the following information:\x00";
i@1740:
bits8[] "\x09San Francisco, CA 94143-0704, USA\x0a\x00";
i@1739:
bits8[] "\x09University of California\x00";
i@1738:
bits8[] "\x09Computer Center U-76\x00";
i@1737:
bits8[] "\x09Richard Karpinski\x00";
i@1736:
bits8[] "Please send suggestions and interesting results to\x00";
i@1735:
bits8[] "cope with unanticipated and newly uncovered arithmetic pathologies.\x0a\x00";
i@1734:
bits8[] "Users are invited to help debug and augment this program so it will\x00";
i@1731:
bits8[] "Answer questions with Y, y, N or n (unless otherwise indicated).\x0a\x00";
i@1730:
bits8[] "amend it to make further progress.\x0a\x00";
i@1729:
bits8[] "program anyway to see how many milestones it passes, and then\x00";
i@1728:
bits8[] "warning.  If persuasion avails naught, don't despair but run this\x00";
i@1727:
bits8[] "to persevere with a surrogate value after, perhaps, displaying some\x00";
i@1726:
bits8[] "error like Over/Underflow or Division by Zero occurs, but rather\x00";
i@1725:
bits8[] "try to persuade the computer NOT to terminate execution when an\x00";
i@1724:
bits8[] "    `END OF TEST',\x0a\x00";
i@1723:
bits8[] "Lest this program stop prematurely, i.e. before displaying\x0a\x00";
i@1719:
bits8[] "%s\x0a\x00";
i@1714:
bits8[] "   PLEASE NOTIFY KARPINKSI!\x0a\x00";
i@1713:
bits8[] "%s test appears to be inconsistent...\x0a\x00";
i@1699:
bits8[] "\x09differs from Z * 1 = %.17e\x0a\x00";
i@1698:
bits8[] "\x09Comparison alleges that 1 * Z = %.17e\x0a\x00";
i@1697:
bits8[] "Multiplication does not commute!\x0a\x00";
i@1692:
bits8[] "Z / 1 = %.17e\x0a\x00";
i@1689:
bits8[] "1 * Z == %g\x0a\x00";
i@1686:
bits8[] "Z * 1 = %.17e \x00";
i@1683:
bits8[] "%.17e\x0a\x09compares different from  \x00";
i@1682:
bits8[] "What prints as Z = \x00";
i@1677:
bits8[] "This is a DEFECT!\x0a\x00";
i@1674:
bits8[] "This is a VERY SERIOUS DEFECT!\x0a\x00";
i@1668:
bits8[] " has NOT just been signaled.\x0a\x00";
i@1667:
bits8[] "This is O.K., provided Over/Underflow\x00";
i@1664:
bits8[] "What the machine gets for (Z + Z) / Z is  %.17e .\x0a\x00";
i@1660:
bits8[] "(Z + Z) / Z should be safe.\x0a\x00";
i@1659:
bits8[] "Since comparison denies Z = 0, evaluating \x00";
i@1655:
bits8[] "Similar discrepancies have occurred %d times.\x0a\x00";
i@1638:
bits8[] "\x09\x09they differ by %.17e .\x0a\x00";
i@1637:
bits8[] "\x09which compared unequal to correct %.17e ;\x0a\x00";
i@1636:
bits8[] "\x09yielded %.17e;\x0a\x00";
i@1635:
bits8[] "\x09(%.17e) ^ (%.17e)\x0a\x00";
i@1634:
bits8[] "computing\x0a\x00";
i@1633:
bits8[] "WARNING:  computing\x0a\x00";
i@1584:
bits8[] "\x09instead of correct value 0 .\x0a\x00";
i@1583:
bits8[] "sqrt( %.17e) - %.17e  = %.17e\x0a\x00";
align 4;
f@1568:
bits32[] {0x88e368f1, 0x3ed4f8b5};
i@1565:
bits8[] "%s:  %s\x00";
i@1564:
bits8[] "FLAW\x00";
i@1563:
bits8[] "DEFECT\x00";
i@1562:
bits8[] "SERIOUS DEFECT\x00";
i@1561:
bits8[] "FAILURE\x00";
i@1552:
bits8[] "          Page: %d\x0a\x0a\x00";
i@1551:
bits8[] "\x0aDiagnosis resumes after milestone Number %d\x00";
align 4;
f@1548:
bits32[] {0x0, 0xbff00000};
i@832:
bits8[] "END OF TEST.\x0a\x00";
i@831:
bits8[] "\x0aA total of %d floating point exceptions were registered.\x0a\x00";
i@828:
bits8[] "The arithmetic diagnosed appears to be Excellent!\x0a\x00";
i@827:
bits8[] " during Gradual Underflow.\x0a\x00";
i@826:
bits8[] ",\x0aexcept for possibly Double Rounding\x00";
i@825:
bits8[] ".\x0a\x00";
i@822:
bits8[] "854\x00";
i@821:
bits8[] "754\x00";
i@818:
bits8[] "the proposed IEEE standard P\x00";
i@817:
bits8[] "Rounding appears to conform to \x00";
i@814:
bits8[] "The arithmetic diagnosed seems Satisfactory.\x0a\x00";
i@808:
bits8[] "No failures, defects nor flaws have been discovered.\x0a\x00";
i@807:
bits8[] " program's subsequent diagnoses.\x0a\x00";
i@806:
bits8[] "Potentially fatal FAILURE may have spoiled this\x00";
i@803:
bits8[] "unacceptable Serious Defects.\x0a\x00";
i@802:
bits8[] "The arithmetic diagnosed has \x00";
i@798:
bits8[] "despite inconvenient Defects.\x0a\x00";
i@797:
bits8[] "The arithmetic diagnosed may be Acceptable\x0a\x00";
i@792:
bits8[] "Satisfactory though flawed.\x0a\x00";
i@791:
bits8[] "The arithmetic diagnosed seems \x00";
i@780:
bits8[] "The number of  %-29s %d.\x0a\x00";
i@773:
bits8[] "FLAWs  discovered =\x00";
i@772:
bits8[] "DEFECTs  discovered =\x00";
i@771:
bits8[] "SERIOUS DEFECTs  discovered =\x00";
i@770:
bits8[] "FAILUREs  encountered =\x00";
i@766:
bits8[] "\x0a    Trying to compute 0 / 0 produces ...\x00";
i@765:
bits8[] "  %.7e .\x0a\x00";
i@762:
bits8[] "    Trying to compute 1 / 0 produces ...\x00";
i@761:
bits8[] "What message and/or values does Division by Zero produce?\x0a\x00";
i@760:
bits8[] "  instead, X / X - 1/2 - 1/2 = %.17e .\x0a\x00";
i@759:
bits8[] "  X / X differs from 1 when X = %.17e\x0a\x00";
i@754:
bits8[] "  X / X  traps when X = %g\x0a\x00";
i@739:
bits8[] "is too far from 1.\x0a\x00";
i@738:
bits8[] " unbalanced range; UfThold * V = %.17e\x0a\x09%s\x0a\x00";
i@737:
bits8[] "Badly\x00";
i@730:
bits8[] " is too far from sqrt(Z) ^ 2 (%.17e) .\x0a\x00";
i@729:
bits8[] "Comparison alleges that Z = %17e\x0a\x00";
i@717:
bits8[] " is too far from sqrt(Z) ^ 2 = %.17e .\x0a\x00";
i@716:
bits8[] "Comparison alleges that what prints as Z = %.17e\x0a\x00";
i@699:
bits8[] "+-%g, +-%g\x0aand +-%g are confused by Overflow.\x00";
i@698:
bits8[] "Comparisons involving \x00";
i@692:
bits8[] "above is a DEFECT.\x0a\x00";
i@691:
bits8[] "Any overflow signal separating this * from the one\x0a\x00";
i@690:
bits8[] "                           nor for V / 1 = %.17e .\x0a\x00";
i@689:
bits8[] "No Overflow should be signaled for V * 1 = %.17e\x0a\x00";
i@688:
bits8[] "There is no saturation value because the system traps on overflow.\x0a\x00";
i@687:
bits8[] "Overflow saturates at V0 = %.17e .\x0a\x00";
i@684:
bits8[] "Overflow threshold is V  = %.17e .\x0a\x00";
i@675:
bits8[] "overflow past %.17e\x0a\x09shrinks to %.17e .\x0a\x00";
i@672:
bits8[] "-(-Y) differs from Y.\x0a\x00";
i@671:
bits8[] "finds a \x00";
i@670:
bits8[] "Seems O.K.\x0a\x00";
i@667:
bits8[] "Trying it on Y = %.17e .\x0a\x00";
i@666:
bits8[] "Can `Z = -Y' overflow?\x0a\x00";
i@659:
bits8[] "This may generate an error.\x0a\x00";
i@658:
bits8[] "Searching for Overflow threshold:\x0a\x00";
i@657:
bits8[] " ... no discrepancies found.\x0a\x00";
i@649:
bits8[] "Testing powers Z^Q at four nearly extreme values.\x0a\x00";
i@648:
bits8[] "Accuracy seems adequate.\x0a\x00";
i@641:
bits8[] "\x09calculations involving tiny interest rates.\x0a\x00";
i@640:
bits8[] "\x09This much error may spoil financial\x0a\x00";
i@639:
bits8[] "\x09differs from correct value by %.17e .\x0a\x00";
i@638:
bits8[] "\x09(1 + (%.17e) ^ (%.17e);\x0a\x00";
i@637:
bits8[] " %.17e for\x0a\x00";
i@636:
bits8[] "Calculated\x00";
i@629:
bits8[] "Testing X^((X + 1) / (X - 1)) vs. exp(2) = %.17e as X -> 1.\x0a\x00";
i@625:
bits8[] "This computed value is O.K.\x0a\x00";
i@622:
bits8[] "   threshold = %.17e .\x0a\x00";
i@621:
bits8[] "this is not between 0 and underflow\x0a\x00";
i@617:
bits8[] "actually calculating yields: %.17e .\x0a\x00";
i@616:
bits8[] "should afflict the expression\x0a\x09(%.17e) ^ (%.17e);\x0a\x00";
i@615:
bits8[] "UfThold = (%.17e) ^ (%.17e)\x0aonly underflow \x00";
i@614:
bits8[] "Since underflow occurs below the threshold\x0a\x00";
i@613:
bits8[] "Range is too narrow; U1^%d Underflows.\x0a\x00";
i@608:
bits8[] "merely roundoff.\x0a\x00";
i@607:
bits8[] "calculation may suffer larger Relative error than \x00";
i@606:
bits8[] " below which\x00";
i@605:
bits8[] "The Underflow threshold is %.17e, %s\x0a\x00";
i@604:
bits8[] "X / Z = 1 + %g .\x0a\x00";
i@603:
bits8[] "X / Z fails!\x0a\x00";
i@600:
bits8[] "encounter Division by Zero although actually\x0a\x00";
i@599:
bits8[] "  ... (f(X) - f(Z)) / (X - Z) ...\x0a\x00";
i@598:
bits8[] "    if (X == Z)  ...  else\x00";
i@597:
bits8[] "confusion when innocent statements like\x0a\x00";
i@596:
bits8[] "this is a SERIOUS DEFECT\x0athat causes \x00";
i@595:
bits8[] "    Should this NOT signal Underflow, \x00";
i@594:
bits8[] "yet X - Z yields %.17e .\x0a\x00";
i@593:
bits8[] "X = %.17e\x0a\x09is not equal to Z = %.17e .\x0a\x00";
i@588:
bits8[] "Underflow / UfThold failed!\x0a\x00";
i@578:
bits8[] "(roundoff in UfThold) < E0.\x0a\x00";
i@577:
bits8[] "Underflow is gradual; it incurs Absolute Error =\x0a\x00";
i@572:
bits8[] "|Q - Y| = %.17e .\x0a\x00";
i@571:
bits8[] "print out as Q = %.17e, Y = %.17e .\x0a\x00";
i@570:
bits8[] "Q == Y while denying that |Q - Y| == 0; these values\x0a\x00";
i@569:
bits8[] "Underflow confuses Comparison, which alleges that\x0a\x00";
i@567:
bits8[] " or else multiplication gets too many last digits wrong.\x0a\x00";
i@566:
bits8[] " coming down from %.17e\x0a\x00";
i@565:
bits8[] "approach a threshold = %.17e\x0a\x00";
i@564:
bits8[] "Either accuracy deteriorates as numbers\x0a\x00";
i@552:
bits8[] "Smallest strictly positive number found is E0 = %g .\x0a\x00";
i@551:
bits8[] " threshold than products.\x0a\x00";
i@550:
bits8[] "Difference underflows at a higher\x00";
i@547:
bits8[] " threshold than differences.\x0a\x00";
i@546:
bits8[] "Products underflow at a higher\x00";
i@539:
bits8[] "value PseudoZero that prints out as %g .\x0a\x00";
i@538:
bits8[] "Underflow can stick at an allegedly positive\x0a\x00";
i@537:
bits8[] "positive, isn't; it prints out as  %g .\x0a\x00";
i@536:
bits8[] "But -PseudoZero, which should be\x0a\x00";
i@533:
bits8[] "PseudoZero that prints out as: %g .\x0a\x00";
i@532:
bits8[] "allegedly negative value\x0a\x00";
i@531:
bits8[] "Positive expressions can underflow to an\x0a\x00";
i@518:
bits8[] "multiplication gets too many last digits wrong.\x0a\x00";
i@494:
bits8[] "Seeking Underflow thresholds UfThold and E0.\x0a\x00";
i@491:
bits8[] "... no discrepancis found.\x0a\x00";
i@488:
bits8[] "\x09involving interest rates.\x0a\x00";
i@487:
bits8[] "Errors like this may invalidate financial calculations\x0a\x00";
i@466:
bits8[] "Testing powers Z^i for small Integers Z and i.\x0a\x00";
i@463:
bits8[] "sqrt gets too many last digits wrong\x00";
i@461:
bits8[] "to %.7e ulps.\x0a\x00";
i@460:
bits8[] "Observed errors run from %.7e \x00";
i@459:
bits8[] "Square root is neither chopped nor correctly rounded.\x0a\x00";
i@456:
bits8[] "Square root appears to be chopped.\x0a\x00";
i@451:
bits8[] "Square root appears to be correctly rounded.\x0a\x00";
i@446:
bits8[] " fails test whether sqrt rounds or chops.\x0a\x00";
i@445:
bits8[] "Radix^Precision = %.7e\x0a\x00";
i@444:
bits8[] "Anomalous arithmetic with Integer < \x00";
i@404:
bits8[] "Testing whether sqrt is rounded or chopped.\x0a\x00";
i@382:
bits8[] "sqrt(X) is non-monotonic for X near %.7e .\x0a\x00";
i@381:
bits8[] "sqrt has passed a test for Monotonicity.\x0a\x00";
i@364:
bits8[] "Test for sqrt monotonicity.\x0a\x00";
i@353:
bits8[] "Testing if sqrt(X * X) == X for %d Integers X.\x0a\x00";
i@348:
bits8[] "Square root of 0.0, -0.0 or 1.0 wrong\x00";
i@346:
bits8[] "\x0aRunning test of square root(x).\x0a\x00";
i@345:
bits8[] "     No failures found in %d integer pairs.\x0a\x00";
i@344:
bits8[] "X * Y == Y * X trial fails.\x0a\x00";
align 4;
f@335:
bits32[] {0x0, 0x40080000};
i@334:
bits8[] "Testing on %d random pairs.\x0a\x00";
i@333:
bits8[] "Does Multiplication commute?  \x00";
i@330:
bits8[] "lack(s) of guard digits or failure(s) to correctly round or chop\x0a(noted above) count as one flaw in the final tally below\x00";
i@328:
bits8[] "Sticky bit used incorrectly or not at all.\x0a\x00";
i@327:
bits8[] "Sticky bit apparently used correctly.\x0a\x00";
i@310:
bits8[] "Checking for sticky bit.\x0a\x00";
i@307:
bits8[] "(X - Y) + (Y - X) is non zero!\x0a\x00";
i@304:
bits8[] "Addition/Subtraction neither rounds nor chops.\x0a\x00";
i@303:
bits8[] "Add/Subtract\x00";
i@300:
bits8[] "Addition/Subtraction appears to round correctly.\x0a\x00";
i@293:
bits8[] "Add/Subtract appears to be chopped.\x0a\x00";
i@288:
bits8[] "Incomplete carry-propagation in Addition\x00";
i@284:
bits8[] "Radix * ( 1 / Radix ) differs from 1\x00";
i@282:
bits8[] "/ is neither chopped nor correctly rounded.\x0a\x00";
i@279:
bits8[] "Division appears to chop.\x0a\x00";
i@276:
bits8[] "Division\x00";
i@273:
bits8[] "Division appears to round correctly.\x0a\x00";
i@268:
bits8[] "Multiplication\x00";
i@265:
bits8[] "* is neither chopped nor correctly rounded.\x0a\x00";
i@264:
bits8[] "Multiplication appears to chop.\x0a\x00";
i@261:
bits8[] "Multiplication appears to round correctly.\x0a\x00";
i@251:
bits8[] "X * (1/X) differs from 1\x00";
i@232:
bits8[] "Checking rounding on multiply, divide and add/subtract.\x0a\x00";
i@231:
bits8[] "     *, /, and - appear to have guard digits, as they should.\x0a\x00";
i@228:
bits8[] "  ...  if (X == 1.0) {.....} else {.../(X-1.0)...}\x0a\x00";
i@227:
bits8[] "  such precautions against division by zero as\x0a\x00";
i@226:
bits8[] "  subtraction yields  (1-U1) - 1 = 0 , thereby vitiating\x0a\x00";
i@225:
bits8[] "comparison alleges  (1-U1) < 1  although\x0a\x00";
i@222:
bits8[] "- lacks Guard Digit, so cancellation is obscured\x00";
i@217:
bits8[] "* and/or / gets too many last digits wrong\x00";
i@213:
bits8[] "Computed value of 1/1.000..1 >= 1\x00";
i@211:
bits8[] "Division lacks a Guard Digit, so X/1 != X\x00";
i@206:
bits8[] "Division lacks a Guard Digit, so error can exceed 1 ulp\x0aor  1/3  and  3/9  and  9/27 may disagree\x00";
i@202:
bits8[] "* gets too many final digits wrong.\x0a\x00";
i@200:
bits8[] "* lacks a Guard Digit, so 1*X != X\x00";
i@197:
bits8[] "\x0aChecking for guard digit in *, /, and -.\x0a\x00";
i@196:
bits8[] "Subtraction appears to be normalized, as it should be.\x00";
i@191:
bits8[] "Subtraction is not normalized X=Y,X+Z != Y+Z!\x00";
i@187:
bits8[] "roughly %g extra significant decimals.\x0a\x00";
i@186:
bits8[] "precisely with about %g extra B-digits, i.e.\x0a\x00";
i@185:
bits8[] "Some subexpressions appear to be calculated extra\x0a\x00";
i@179:
bits8[] "of an\x0aextra-precision\x00";
i@178:
bits8[] "Z1 = %.7e, or Z2 = %.7e \x00";
i@177:
bits8[] ", or exact rational arithmetic a result\x0a\x00";
i@176:
bits8[] "Because of unusual Radix = %f\x00";
i@172:
bits8[] "\x09U2 = %.7e, Z2 - U2 = %.7e\x0a\x00";
i@171:
bits8[] "\x09U1 = %.7e, Z1 - U1 = %.7e\x0a\x00";
i@170:
bits8[] "Precision\x00";
i@169:
bits8[] "\x00";
i@162:
bits8[] "That feature is not tested further by this program.\x0a\x00";
i@157:
bits8[] "Possibly some part of this\x00";
i@156:
bits8[] "by extra-precise evaluation of arithmetic subexpressions.\x0a\x00";
i@155:
bits8[] "are symptoms of inconsistencies introduced\x0a\x00";
i@154:
bits8[] "respectively  %.7e,  %.7e,  %.7e,\x0a\x00";
i@153:
bits8[] "Disagreements among the values X1, Y1, Z1,\x0a\x00";
i@131:
bits8[] "Precision worse than 5 decimal figures  \x00";
i@129:
bits8[] "The number of significant digits of the Radix is %f .\x0a\x00";
i@128:
bits8[] "logarithmic encoding has precision characterized solely by U1.\x0a\x00";
i@125:
bits8[] "of significant digits but, by itself, this is a minor flaw.\x0a\x00";
i@124:
bits8[] "Precision cannot be characterized by an Integer number\x0a\x00";
i@111:
bits8[] "Comparison is fuzzy,X=1 but X-1/2-1/2 != 0\x00";
i@107:
bits8[] "(1-U1)-1/2 < 1/2 is FALSE, prog. fails?\x00";
align 4;
f@105:
bits32[] {0x0, 0x40240000};
i@100:
bits8[] "Radix is not as good as 2 or 10\x00";
i@96:
bits8[] "Radix is too big: roundoff problems\x00";
i@94:
bits8[] "MYSTERY: recalculated Radix = %.7e .\x0a\x00";
i@93:
bits8[] "Radix confirmed.\x0a\x00";
align 4;
f@90:
bits32[] {0x47ae147b, 0x3f847ae1};
i@89:
bits8[] "gets better closest relative separation U1 = %.7e .\x0a\x00";
i@88:
bits8[] "confirms closest relative separation U1 .\x0a\x00";
i@73:
bits8[] "Recalculating radix and precision\x0a \x00";
i@72:
bits8[] "Closest relative separation found is U1 = %.7e .\x0a\x0a\x00";
i@66:
bits8[] "Radix = %f .\x0a\x00";
i@57:
bits8[] "Searching for Radix and Precision.\x0a\x00";
i@56:
bits8[] "\x0a\x00";
i@55:
bits8[] "-1, 0, 1/2, 1, 2, 3, 4, 5, 9, 27, 32 & 240 are O.K.\x0a\x00";
i@50:
bits8[] "5 != 4+1, 240/3 != 80, 240/4 != 60, or 240/5 != 48\x00";
i@46:
bits8[] "9 != 3*3, 27 != 9*3, 32 != 8*4, or 32-27-4-1 != 0\x00";
i@42:
bits8[] "1/2 + (-1) + 1/2 != 0\x00";
i@38:
bits8[] "-1+1 != 0, (-1)+abs(1) != 0, or -1+(-1)*(-1) != 0\x00";
i@34:
bits8[] "3 != 2+1, 4 != 3+1, 4+2*(-2) != 0, or 4-3-1 != 0\x00";
align 4;
f@32:
bits32[] {0xd2f1a9fc, 0x3f50624d};
i@31:
bits8[] "Comparison alleges that -0.0 is Non-zero!\x0a\x00";
i@26:
bits8[] "0+0 != 0, 1-1 != 0, 1 <= 0, or 1+1 != 2\x00";
i@24:
bits8[] "Program is now RUNNING tests on small integers:\x0a\x00";
align 4;
f@20:
bits32[] {0x0, 0x3ff00000};
align 4;
f@19:
bits32[] {0x0, 0x0};
i@14:
bits8[] "\x0a* * * FLOATING-POINT ERROR * * *\x0a\x00";
}
