.globl main
.globl err
.globl getword
.globl isletter
.globl lookup
.globl tprint
.globl strcmp
.globl next
.globl words
.globl Cmm.globalsig.LPcHEVFbOZHbAHHMQTLHQeIQVI
.section .data
/* memory for global registers */
Cmm.globalsig.LPcHEVFbOZHbAHHMQTLHQeIQVI:
Cmm.global_area:
.section .data
.section .text
main:
	leal -32(%esp), %esp
initialize_continuations_l4:
proc_body_start_l3:
	movl $0,28(%esp)
	movl $0,next
	jmp L.3
L.3:
	leal 32(%esp), %eax
	addl $-24,%eax
	movl %eax,(%esp)
	call getword
join_l14:
	cmpl $0,%eax
	jne join_l10
join_l11:
	movl 28(%esp),%eax
	movl %eax,(%esp)
	call tprint
join_l9:
	movl $0,%eax
	leal 32(%esp), %ecx
	movl 32(%esp),%edx
	movl %edx,32(%esp)
	leal 32(%esp), %esp
	ret
join_l10:
	jmp L.2
L.2:
	leal 32(%esp), %eax
	addl $-24,%eax
	movl %eax,(%esp)
	leal 32(%esp), %eax
	addl $-4,%eax
	movl %eax,4(%esp)
	call lookup
join_l17:
	movl (%eax),%ecx
	addl $1,%ecx
	movl %ecx,(%eax)
	jmp L.3
err:
	leal -8(%esp), %esp
	movl 12(%esp),%eax
initialize_continuations_l27:
proc_body_start_l26:
	leal i_10,%ecx
	movl %ecx,(%esp)
	movl %eax,4(%esp)
	call printf
join_l35:
	movl $1,(%esp)
	call exit
join_l32:
	movl $0,%eax
	leal 8(%esp), %ecx
	movl 8(%esp),%edx
	movl %edx,8(%esp)
	leal 8(%esp), %esp
	ret
getword:
	leal -20(%esp), %esp
	movl 24(%esp),%eax
initialize_continuations_l45:
proc_body_start_l44:
	jmp L.12
L.12:
L.13:
	movl %eax,4(%esp)
	call getchar
join_l67:
	movl %eax,%ecx
	cmpl $-1,%eax
	je join_l63
join_l64:
	movl %ecx,(%esp)
	movl %ecx,8(%esp)
	call isletter
join_l62:
	cmpl $0,%eax
	je join_l59
join_l71:
	movl 8(%esp),%ecx
	jmp L.15
join_l59:
	jmp join_l72
join_l72:
	movl 4(%esp),%eax
	jmp L.12
join_l63:
	jmp L.15
L.15:
	movl 4(%esp),%eax
	movl 4(%esp),%edx
	jmp L.19
L.19:
	movl %ecx,(%esp)
	movl %eax,4(%esp)
	movl %edx,12(%esp)
	call isletter
join_l55:
	movl %eax,%ecx
	cmpl $0,%eax
	jne join_l51
join_l52:
	movl $0,%eax
	movl 12(%esp),%edx
	movb %al,(%edx)
	movl 4(%esp),%eax
	cmpl 4(%esp),%edx
	jbe join_l49
join_l50:
	movl $1,%eax
	leal 20(%esp), %ecx
	movl 20(%esp),%edx
	movl %edx,20(%esp)
	leal 20(%esp), %esp
	ret
join_l49:
	jmp L.20
L.20:
	movl $0,%eax
	leal 20(%esp), %edx
	movl 20(%esp),%ecx
	movl %ecx,20(%esp)
	leal 20(%esp), %esp
	ret
join_l51:
	jmp L.16
L.16:
	movl 12(%esp),%edx
	movl 12(%esp),%eax
	leal 1(%edx), %edx
	movl %eax,16(%esp)
	movl %ecx,%eax
	movl 16(%esp),%ecx
	movb %al,(%ecx)
L.17:
	movl %edx,12(%esp)
	call getchar
join_l58:
	movl %eax,%ecx
	movl 4(%esp),%eax
	movl 12(%esp),%edx
	jmp L.19
isletter:
	movl 4(%esp),%edx
initialize_continuations_l79:
proc_body_start_l78:
	cmpl $65,%edx
	jl join_l89
join_l90:
	cmpl $90,%edx
	jg join_l87
join_l88:
	leal 32(%edx), %edx
	jmp L.30
join_l87:
	jmp L.30
join_l89:
	jmp L.30
L.30:
	cmpl $97,%edx
	jl join_l85
join_l86:
	cmpl $122,%edx
	jg join_l83
join_l84:
	movl %edx,%eax
	movl %esp,%edx
	movl (%esp),%ecx
	movl %ecx,(%esp)
	ret
join_l83:
	jmp L.32
join_l85:
	jmp L.32
L.32:
	movl $0,%eax
	movl %esp,%ecx
	movl (%esp),%edx
	movl %edx,(%esp)
	ret
lookup:
	leal -32(%esp), %esp
	movl 36(%esp),%eax
	movl 40(%esp),%ecx
initialize_continuations_l101:
proc_body_start_l100:
	movl (%ecx),%edx
	cmpl $0,%edx
	je join_l139
join_l140:
	movl (%ecx),%edx
	addl $12,%edx
	movl (%edx),%edx
	movl %edx,4(%esp)
	movl %eax,(%esp)
	movl %eax,8(%esp)
	movl %ecx,12(%esp)
	call strcmp
join_l138:
	movl %eax,28(%esp)
	movl 28(%esp),%eax
	cmpl $0,%eax
	jge join_l134
join_l135:
	movl 12(%esp),%eax
	movl (%eax),%eax
	addl $4,%eax
	movl %eax,4(%esp)
	movl 8(%esp),%eax
	movl %eax,(%esp)
	call lookup
join_l133:
	leal 32(%esp), %ecx
	movl 32(%esp),%edx
	movl %edx,32(%esp)
	leal 32(%esp), %esp
	ret
join_l134:
	jmp L.39
L.39:
	movl 28(%esp),%eax
	cmpl $0,%eax
	jle join_l128
join_l129:
	movl 12(%esp),%eax
	movl (%eax),%eax
	addl $8,%eax
	movl %eax,4(%esp)
	movl 8(%esp),%eax
	movl %eax,(%esp)
	call lookup
join_l127:
	leal 32(%esp), %ecx
	movl 32(%esp),%edx
	movl %edx,32(%esp)
	leal 32(%esp), %esp
	ret
join_l128:
	jmp L.41
L.41:
	movl 12(%esp),%ecx
	movl (%ecx),%eax
	leal 32(%esp), %ecx
	movl 32(%esp),%edx
	movl %edx,32(%esp)
	leal 32(%esp), %esp
	ret
join_l139:
	jmp L.37
L.37:
	movl next,%edx
	cmpl $2000,%edx
	jl join_l121
join_l122:
	leal i_45,%edx
	movl %edx,(%esp)
	movl %eax,8(%esp)
	movl %ecx,12(%esp)
	call err
join_l120:
	movl 8(%esp),%eax
	movl 12(%esp),%ecx
	jmp L.43
join_l121:
	jmp L.43
L.43:
	leal words,%edx
	movl %eax,8(%esp)
	movl next,%eax
	movl %ecx,12(%esp)
	movl $4,%ecx
	shll %cl, %eax
	addl %edx,%eax
	movl $0,(%eax)
	movl next,%eax
	movl $4,%ecx
	shll %cl, %eax
	leal words,%ecx
	addl $8,%ecx
	movl %eax,%edx
	addl %ecx,%edx
	movl $0,(%edx)
	leal words,%edx
	addl $4,%edx
	addl %edx,%eax
	movl $0,(%eax)
	movl 8(%esp),%eax
	movl %eax,(%esp)
	movl %eax,8(%esp)
	call strlen
join_l117:
	addl $1,%eax
	movl %eax,(%esp)
	call malloc
join_l114:
	leal words,%ecx
	addl $12,%ecx
	movl next,%edx
	movl %ecx,16(%esp)
	movl $4,%ecx
	shll %cl, %edx
	movl 16(%esp),%ecx
	addl 16(%esp),%edx
	movl %eax,(%edx)
	leal words,%eax
	addl $12,%eax
	movl next,%edx
	movl $4,%ecx
	shll %cl, %edx
	addl %eax,%edx
	movl (%edx),%eax
	cmpl $0,%eax
	jne join_l110
join_l111:
	leal i_52,%eax
	movl %eax,(%esp)
	call err
join_l109:
	jmp L.49
join_l110:
	jmp L.49
L.49:
	leal words,%eax
	addl $12,%eax
	movl next,%ecx
	movl %ecx,20(%esp)
	movl $4,%ecx
	movl 20(%esp),%edx
	shll %cl, %edx
	addl %eax,%edx
	movl (%edx),%eax
	movl %eax,(%esp)
	movl 8(%esp),%eax
	movl %eax,4(%esp)
	call strcpy
join_l106:
	movl next,%eax
	movl next,%ecx
	addl $1,%ecx
	movl %ecx,next
	leal words,%ecx
	movl %ecx,24(%esp)
	movl $4,%ecx
	shll %cl, %eax
	movl 24(%esp),%ecx
	addl 24(%esp),%eax
	movl %eax,%ecx
	movl 12(%esp),%edx
	movl %eax,(%edx)
	movl %eax,%eax
	leal 32(%esp), %ecx
	movl 32(%esp),%edx
	movl %edx,32(%esp)
	leal 32(%esp), %esp
	ret
tprint:
	leal -20(%esp), %esp
	movl 24(%esp),%eax
initialize_continuations_l150:
proc_body_start_l149:
	cmpl $0,%eax
	je join_l162
join_l163:
	movl 4(%eax),%ecx
	movl %ecx,(%esp)
	movl %eax,12(%esp)
	call tprint
join_l161:
	leal i_68,%eax
	movl 12(%esp),%ecx
	movl (%ecx),%edx
	movl %ebx,16(%esp)
	movl 12(%ecx),%ebx
	movl %ebx,8(%esp)
	movl %edx,4(%esp)
	movl %eax,(%esp)
	movl %ecx,12(%esp)
	call printf
join_l158:
	movl 12(%esp),%eax
	movl 8(%eax),%eax
	movl %eax,(%esp)
	call tprint
join_l155:
	movl 16(%esp),%ebx
	jmp L.66
join_l162:
	jmp L.66
L.66:
	movl $0,%eax
	leal 20(%esp), %ecx
	movl 20(%esp),%edx
	movl %edx,20(%esp)
	leal 20(%esp), %esp
	ret
strcmp:
	leal -4(%esp), %esp
	movl 8(%esp),%edx
	movl 12(%esp),%ecx
initialize_continuations_l173:
proc_body_start_l172:
	jmp L.72
L.72:
	movsbl (%edx),%eax
	movl %edx,(%esp)
	movsbl (%ecx),%edx
	cmpl %edx,%eax
	je join_l182
join_l183:
	movl (%esp),%eax
	movsbl (%eax),%edx
	cmpl $0,%edx
	jne join_l180
join_l181:
	movl $-1,%eax
	leal 4(%esp), %edx
	movl 4(%esp),%ecx
	movl %ecx,4(%esp)
	leal 4(%esp), %esp
	ret
join_l180:
	jmp L.76
L.76:
	movsbl (%ecx),%edx
	cmpl $0,%edx
	jne join_l177
join_l178:
	movl $1,%eax
	leal 4(%esp), %ecx
	movl 4(%esp),%edx
	movl %edx,4(%esp)
	leal 4(%esp), %esp
	ret
join_l177:
	jmp L.78
L.78:
	movsbl (%ecx),%edx
	movsbl (%eax),%eax
	subl %edx,%eax
	leal 4(%esp), %edx
	movl 4(%esp),%ecx
	movl %ecx,4(%esp)
	leal 4(%esp), %esp
	ret
join_l182:
	jmp L.71
L.71:
	movl (%esp),%edx
	movl (%esp),%eax
	leal 1(%edx), %edx
	movsbl (%eax),%eax
	cmpl $0,%eax
	jne join_l185
join_l186:
	movl $0,%eax
	leal 4(%esp), %ecx
	movl 4(%esp),%edx
	movl %edx,4(%esp)
	leal 4(%esp), %esp
	ret
join_l185:
	jmp L.74
L.74:
	leal 1(%ecx), %ecx
	jmp L.72
.section .bss
.align 4
next:
.skip 4, 0
.align 4
words:
.skip 32000, 0
.section .data
i_68:
.byte 37
.byte 100
.byte 9
.byte 37
.byte 115
.byte 10
.byte 0
i_52:
.byte 111
.byte 117
.byte 116
.byte 32
.byte 111
.byte 102
.byte 32
.byte 119
.byte 111
.byte 114
.byte 100
.byte 32
.byte 115
.byte 116
.byte 111
.byte 114
.byte 97
.byte 103
.byte 101
.byte 0
i_45:
.byte 111
.byte 117
.byte 116
.byte 32
.byte 111
.byte 102
.byte 32
.byte 110
.byte 111
.byte 100
.byte 101
.byte 32
.byte 115
.byte 116
.byte 111
.byte 114
.byte 97
.byte 103
.byte 101
.byte 0
i_10:
.byte 63
.byte 32
.byte 37
.byte 115
.byte 10
.byte 0
