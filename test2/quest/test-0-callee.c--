target
	byteorder little
	memsize 8
	wordsize 32
	pointersize 32
	float "ieee754";

bits2 System.rounding_mode = "IEEE 754 rounding mode";
section "data" {
}
section "text" {
foreign "C" i@failed(bits32 i@line aligned 4, ) {
  stackdata {
  }
  bits32 i@1.4;
  foreign "C" (i@printf)("address" i@2 aligned 4, "address" i@3 aligned 4, i@line aligned 4);
  i@1.4 = i@errors;
  bits32[i@1.4] = %add(bits32[i@1.4],1);
  L.1:
  foreign "C" return();
}
export i@callee_af5 as "callee_af5";
foreign "C" i@callee_af5(bits32 i@ap5 aligned 4, "float" bits32 f@bp5 aligned 4, bits32 i@cp5 aligned 4, "float" bits64 f@dp5 aligned 4, "float" bits32 f@ep5 aligned 4, bits32 i@fp5 aligned 4, "float" bits32 f@gp5 aligned 4, "float" bits32 f@hp5 aligned 4, ) {
  stackdata {
  }
  if (%eq(bits32[i@bv5], i@ap5)) { goto L.6; }
  foreign "C" (i@failed)(39 aligned 4);
  L.6:
  if (%feq(bits32[i@cv5], f@bp5)) { goto L.8; }
  foreign "C" (i@failed)(40 aligned 4);
  L.8:
  if (%eq(bits32[i@dv5], i@cp5)) { goto L.10; }
  foreign "C" (i@failed)(41 aligned 4);
  L.10:
  if (%feq(bits64[i@ev5], f@dp5)) { goto L.12; }
  foreign "C" (i@failed)(42 aligned 4);
  L.12:
  if (%feq(bits32[i@fv5], f@ep5)) { goto L.14; }
  foreign "C" (i@failed)(43 aligned 4);
  L.14:
  if (%eq(bits32[i@gv5], i@fp5)) { goto L.16; }
  foreign "C" (i@failed)(44 aligned 4);
  L.16:
  if (%feq(bits32[i@hv5], f@gp5)) { goto L.18; }
  foreign "C" (i@failed)(45 aligned 4);
  L.18:
  if (%feq(bits32[i@iv5], f@hp5)) { goto L.20; }
  foreign "C" (i@failed)(46 aligned 4);
  L.20:
  foreign "C" return ("float" bits32[i@av5] aligned 4);
  L.5:
  foreign "C" return();
}
export i@callee_af4 as "callee_af4";
foreign "C" i@callee_af4(bits32 i@ap4 aligned 4, bits32 i@bp4.er aligned 4, bits32 i@cp4.er aligned 4, bits32 i@dp4.er aligned 4, "float" bits64 f@ep4 aligned 4, "float" bits64 f@fp4 aligned 4, bits32 i@gp4.er aligned 4, ) {
  stackdata {
  }
  bits8 i@bp4;
  bits16 i@cp4;
  bits8 i@dp4;
  bits16 i@gp4;
  i@bp4 = %lobits8(%lobits32(i@bp4.er));
  i@cp4 = %lobits16(i@cp4.er);
  i@dp4 = %lobits8(%lobits32(i@dp4.er));
  i@gp4 = %lobits16(%lobits32(i@gp4.er));
  if (%eq(bits32[i@bv4], i@ap4)) { goto L.23; }
  foreign "C" (i@failed)(69 aligned 4);
  L.23:
  if (%eq(%zx32(bits8[i@cv4]), %zx32(i@bp4))) { goto L.25; }
  foreign "C" (i@failed)(70 aligned 4);
  L.25:
  if (%eq(%sx32(bits16[i@dv4]), %sx32(i@cp4))) { goto L.27; }
  foreign "C" (i@failed)(71 aligned 4);
  L.27:
  if (%eq(%zx32(bits8[i@ev4]), %zx32(i@dp4))) { goto L.29; }
  foreign "C" (i@failed)(72 aligned 4);
  L.29:
  if (%feq(bits64[i@fv4], f@ep4)) { goto L.31; }
  foreign "C" (i@failed)(73 aligned 4);
  L.31:
  if (%feq(bits64[i@gv4], f@fp4)) { goto L.33; }
  foreign "C" (i@failed)(74 aligned 4);
  L.33:
  if (%eq(%zx32(bits16[i@hv4]), %zx32(i@gp4))) { goto L.35; }
  foreign "C" (i@failed)(75 aligned 4);
  L.35:
  foreign "C" return ("float" bits64[i@av4] aligned 4);
  L.22:
  foreign "C" return();
}
export i@callee_af3 as "callee_af3";
foreign "C" i@callee_af3("float" bits32 f@ap3 aligned 4, bits32 i@bp3 aligned 4, ) {
  stackdata {
  }
  if (%feq(bits32[i@bv3], f@ap3)) { goto L.38; }
  foreign "C" (i@failed)(84 aligned 4);
  L.38:
  if (%eq(bits32[i@cv3], i@bp3)) { goto L.40; }
  foreign "C" (i@failed)(85 aligned 4);
  L.40:
  foreign "C" return (%zx32(bits16[i@av3]) aligned 4);
  L.37:
  foreign "C" return();
}
export i@callee_af2 as "callee_af2";
foreign "C" i@callee_af2("float" bits32 f@ap2 aligned 4, ) {
  stackdata {
  }
  if (%feq(bits32[i@bv2], f@ap2)) { goto L.43; }
  foreign "C" (i@failed)(91 aligned 4);
  L.43:
  foreign "C" return (bits32[i@av2] aligned 4);
  L.42:
  foreign "C" return();
}
export i@callee_af1 as "callee_af1";
foreign "C" i@callee_af1("float" bits32 f@ap1 aligned 4, bits32 i@bp1 aligned 4, ) {
  stackdata {
  }
  if (%feq(bits32[i@bv1], f@ap1)) { goto L.46; }
  foreign "C" (i@failed)(98 aligned 4);
  L.46:
  if (%eq(bits32[i@cv1], i@bp1)) { goto L.48; }
  foreign "C" (i@failed)(99 aligned 4);
  L.48:
  foreign "C" return ("float" bits32[i@av1] aligned 4);
  L.45:
  foreign "C" return();
}
import bits32 "cv1" as i@cv1;
import bits32 "bv1" as i@bv1;
import bits32 "av1" as i@av1;
import bits32 "bv2" as i@bv2;
import bits32 "av2" as i@av2;
import bits32 "cv3" as i@cv3;
import bits32 "bv3" as i@bv3;
import bits32 "av3" as i@av3;
import bits32 "hv4" as i@hv4;
import bits32 "gv4" as i@gv4;
import bits32 "fv4" as i@fv4;
import bits32 "ev4" as i@ev4;
import bits32 "dv4" as i@dv4;
import bits32 "cv4" as i@cv4;
import bits32 "bv4" as i@bv4;
import bits32 "av4" as i@av4;
import bits32 "iv5" as i@iv5;
import bits32 "hv5" as i@hv5;
import bits32 "gv5" as i@gv5;
import bits32 "fv5" as i@fv5;
import bits32 "ev5" as i@ev5;
import bits32 "dv5" as i@dv5;
import bits32 "cv5" as i@cv5;
import bits32 "bv5" as i@bv5;
import bits32 "av5" as i@av5;
import bits32 "errors" as i@errors;
import bits32 "printf" as i@printf;
}
section "data" {
i@3:
bits8[] "test-0-callee.c\x00";
i@2:
bits8[] "failed in %s: %d\x0a\x00";
}
