target
	byteorder little
	memsize 8
	wordsize 32
	pointersize 32
	float "ieee754";

bits2 System.rounding_mode = "IEEE 754 rounding mode";
section "data" {
}
section "data" {
export i@errors as "errors";
align 4;
i@errors:
bits32[] {0x0};
}
section "text" {
foreign "C" i@failed(bits32 i@line aligned 4, ) {
  stackdata {
  }
  bits32 i@1.4;
  foreign "C" (i@printf)("address" i@2 aligned 4, "address" i@3 aligned 4, i@line aligned 4);
  i@1.4 = i@errors;
  bits32[i@1.4] = %add(bits32[i@1.4],1);
  L.1:
  foreign "C" return();
}
}
section "data" {
export i@nv5 as "nv5";
align 4;
i@nv5:
bits32[] {0x99d451fc, 0x40f3a225};
bits32[] {0x7b29a1ba, 0x40f57c93};
bits32[] {0x5e41660};
bits8[] {0x5d::bits8};
bits8[] {0x15::bits8};
bits8[2];
bits32[] {0x459a2cdd};
bits32[] {0x47b72487};
bits32[] {0x469e376b};
bits16[] {0x7a1f::bits16};
bits8[2];
export i@byv5 as "byv5";
align 4;
i@byv5:
bits32[] {0x46bfa92a};
export i@bzv5 as "bzv5";
align 4;
i@bzv5:
bits32[] {0x70d8471c};
export i@cav5 as "cav5";
align 4;
i@cav5:
bits32[] {0x43e57bc1};
export i@cbv5 as "cbv5";
align 4;
i@cbv5:
bits32[] {0x30020fb8};
export i@ccv5 as "ccv5";
align 4;
i@ccv5:
bits16[] {0x4eea::bits16};
bits8[2];
bits32[] {0x32dba5e4};
bits8[] {0x9::bits8};
bits8[3];
bits32[] {0x4df7f427};
bits8[] {0x5::bits8};
bits8[] {0xd4::bits8};
bits8[] {0x5::bits8};
bits8[1];
bits32[] {0x54e94a8};
export i@cdv5 as "cdv5";
align 4;
i@cdv5:
bits32[] {0x4709b4fa};
export i@cev5 as "cev5";
align 4;
i@cev5:
bits32[] {0x4bb5c662};
export i@cfv5 as "cfv5";
align 4;
i@cfv5:
bits32[] {0x45cddad3};
bits32[] {0x29e33b71};
bits32[] {0xf944241c, 0x40a36af2};
bits8[] {0x42::bits8};
bits8[] {0x0::bits8};
bits8[2];
bits32[] {0x47368f23};
bits32[] {0x3fc6f832};
bits16[] {0xc3a0::bits16};
bits8[2];
export i@cgv5 as "cgv5";
align 4;
i@cgv5:
bits32[] {0x479072ac};
bits8[] {0xc6::bits8};
bits8[] {0x69::bits8};
bits8[] {0xf5::bits8};
bits8[] {0x16::bits8};
bits16[] {0x4bec::bits16};
bits8[2];
bits32[] {0x3ca6896d};
}
section "text" {
foreign "C" i@caller_bf5() {
  stackdata {
  }
  stackdata {
    align 4;
    i@chv5.56: bits8[40];
  }
  bits32 i@2.57;
  bits32 i@3.58;
  bits32 i@4.59;
  bits32 i@5.60;
  bits32 i@6.61;
  foreign "C returns struct" (i@callee_af5)("address" i@chv5.56 aligned 4, "float" bits32[i@byv5] aligned 4, "struct" bits32[i@bzv5] aligned 4, bits32[i@cav5] aligned 4, "struct" bits32[i@cbv5] aligned 4, "struct" bits192[i@ccv5] aligned 4, "float" bits32[i@cdv5] aligned 4, "address" bits32[i@cev5] aligned 4, "struct" bits256[i@cfv5] aligned 4, "struct" bits128[i@cgv5] aligned 4);
  if (%feq(bits64[(i@nv5+8)], bits64[(i@chv5.56+8)])) { goto L.6; }
  foreign "C" (i@failed)(140 aligned 4);
  L.6:
  if (%feq(bits64[i@nv5], bits64[i@chv5.56])) { goto L.10; }
  foreign "C" (i@failed)(141 aligned 4);
  L.10:
  if (%eq(bits32[(i@nv5+16)], bits32[(i@chv5.56+16)])) { goto L.12; }
  foreign "C" (i@failed)(142 aligned 4);
  L.12:
  i@2.57 = 30;
  if (%eq(%shra(%shl(bits32[((i@nv5+16)+4)],i@2.57),i@2.57), %shra(%shl(bits32[((i@chv5.56+16)+4)],i@2.57),i@2.57))) { goto L.16; }
  foreign "C" (i@failed)(143 aligned 4);
  L.16:
  i@3.58 = 26;
  i@4.59 = 28;
  if (%eq(%shra(%shl(bits32[((i@nv5+16)+4)],i@3.58),i@4.59), %shra(%shl(bits32[((i@chv5.56+16)+4)],i@3.58),i@4.59))) { goto L.22; }
  foreign "C" (i@failed)(144 aligned 4);
  L.22:
  i@5.60 = 18;
  i@6.61 = 24;
  if (%eq(%shra(%shl(bits32[((i@nv5+16)+4)],i@5.60),i@6.61), %shra(%shl(bits32[((i@chv5.56+16)+4)],i@5.60),i@6.61))) { goto L.28; }
  foreign "C" (i@failed)(145 aligned 4);
  L.28:
  if (%feq(bits32[((i@nv5+16)+8)], bits32[((i@chv5.56+16)+8)])) { goto L.34; }
  foreign "C" (i@failed)(146 aligned 4);
  L.34:
  if (%feq(bits32[((i@nv5+16)+12)], bits32[((i@chv5.56+16)+12)])) { goto L.40; }
  foreign "C" (i@failed)(147 aligned 4);
  L.40:
  if (%feq(bits32[((i@nv5+16)+16)], bits32[((i@chv5.56+16)+16)])) { goto L.46; }
  foreign "C" (i@failed)(148 aligned 4);
  L.46:
  if (%eq(%sx32(bits16[(i@nv5+36)]), %sx32(bits16[(i@chv5.56+36)]))) { goto L.52; }
  foreign "C" (i@failed)(149 aligned 4);
  L.52:
  L.5:
  foreign "C" return();
}
}
section "data" {
export i@av4 as "av4";
align 4;
i@av4:
bits32[] {0x46a9f0e9};
export i@zv4 as "zv4";
align 4;
i@zv4:
bits32[] {0x159ad1f3};
export i@bav4 as "bav4";
align 4;
i@bav4:
bits32[] {0x92178f69, 0x40f187e2};
export i@bbv4 as "bbv4";
align 4;
i@bbv4:
bits16[] {0xf332::bits16};
bits8[2];
bits8[4];
export i@bcv4 as "bcv4";
align 4;
i@bcv4:
bits32[] {0xd8a54824, 0x40ca19ad};
bits8[12];
export i@bdv4 as "bdv4";
align 4;
i@bdv4:
bits32[] {0x47789595};
export i@bev4 as "bev4";
align 2;
i@bev4:
bits8[] {0x7c::bits8};
bits8[1];
export i@bfv4 as "bfv4";
align 4;
i@bfv4:
bits32[] {0x7c9de050, 0x40e7d559};
export i@bgv4 as "bgv4";
align 2;
i@bgv4:
bits16[] {0x3ccd::bits16};
export i@bhv4 as "bhv4";
align 4;
i@bhv4:
bits32[] {0x7f19e6cf};
}
section "text" {
foreign "C" i@caller_bf4() {
  stackdata {
  }
  stackdata {
    align 4;
    f@biv4.65: bits32;
  }
  bits32 f@1.66;
  "float" f@1.66 = foreign "C" (i@callee_af4)("address" bits32[i@zv4] aligned 4, "address" i@bav4 aligned 4, "struct" bits64[i@bbv4] aligned 4, "struct" bits160[i@bcv4] aligned 4, "float" bits32[i@bdv4] aligned 4, "struct" bits16[i@bev4] aligned 2, "struct" bits64[i@bfv4] aligned 4, %sx32(bits16[i@bgv4]) aligned 4, "address" bits32[i@bhv4] aligned 4);
  bits32[f@biv4.65] = f@1.66;
  if (%feq(bits32[i@av4], bits32[f@biv4.65])) { goto L.63; }
  foreign "C" (i@failed)(206 aligned 4);
  L.63:
  L.62:
  foreign "C" return();
}
}
section "data" {
export i@av3 as "av3";
i@av3:
bits8[] {0x51::bits8};
export i@bv3 as "bv3";
align 4;
i@bv3:
bits32[] {0x47582788};
}
section "text" {
foreign "C" i@caller_bf3() {
  stackdata {
  }
  stackdata {
    i@cv3.70: bits8;
  }
  bits32 i@1.71;
  i@1.71 = foreign "C" (i@callee_af3)("float" bits32[i@bv3] aligned 4);
  bits8[i@cv3.70] = %lobits8(%lobits32(i@1.71));
  if (%eq(%zx32(bits8[i@av3]), %zx32(bits8[i@cv3.70]))) { goto L.68; }
  foreign "C" (i@failed)(214 aligned 4);
  L.68:
  L.67:
  foreign "C" return();
}
}
section "data" {
export i@av2 as "av2";
align 4;
i@av2:
bits32[] {0x4639c4c9};
export i@dnv2 as "dnv2";
align 4;
i@dnv2:
bits16[] {0x4156::bits16};
bits8[2];
bits8[] {0xe2::bits8};
bits8[] {0x4::bits8};
bits8[] {0x0::bits8};
bits8[1];
bits32[] {0x73e468cb, 0x40e139fd};
bits16[] {0x31f0::bits16};
bits8[2];
bits32[] {0x47be8c76};
bits32[] {0x37e7e27d};
bits32[] {0x3c126a66, 0x40e768fa};
bits32[] {0xd1a5a94};
bits32[] {0x47bb0402};
export i@dov2 as "dov2";
align 4;
i@dov2:
bits32[] {0x45d02aeb};
bits8[] {0x12::bits8};
bits8[] {0x1b::bits8};
bits8[2];
bits32[] {0x2a5e5bd5};
bits32[] {0x5201e559};
export i@dpv2 as "dpv2";
align 4;
i@dpv2:
bits32[] {0x476130bd};
bits8[] {0x4e::bits8};
bits8[] {0x2::bits8};
bits16[] {0xa5f9::bits16};
bits32[] {0x47a569d4};
bits32[] {0x45fae1cc};
bits32[] {0xea3df6dc, 0x40f0c9fb};
bits32[] {0x461e6507};
bits8[] {0xdc::bits8};
bits8[] {0x34::bits8};
bits8[2];
bits32[] {0x346d63a};
bits32[] {0x47ac5caa};
bits32[] {0x9d6f1130, 0x40bf2eab};
bits8[] {0x4::bits8};
bits8[3];
bits32[] {0xfe4bd5b};
bits8[] {0x18::bits8};
bits8[3];
bits8[] {0x12::bits8};
bits8[3];
bits8[] {0x5::bits8};
bits8[] {0x5::bits8};
bits8[2];
bits32[] {0x44d2a67e};
bits16[] {0x4d9e::bits16};
bits8[2];
bits32[] {0x46f662de};
export i@dqv2 as "dqv2";
align 4;
i@dqv2:
bits8[] {0x33::bits8};
bits8[3];
export i@drv2 as "drv2";
align 4;
i@drv2:
bits32[] {0x12d98bf8, 0x40e3aeb1};
export i@dsv2 as "dsv2";
align 4;
i@dsv2:
bits16[] {0xded7::bits16};
bits8[2];
bits32[] {0x469e318b};
bits32[] {0x46a39054};
bits8[] {0x0::bits8};
bits8[3];
bits32[] {0x565dad66};
export i@dtv2 as "dtv2";
i@dtv2:
bits8[] {0x2c::bits8};
export i@duv2 as "duv2";
align 4;
i@duv2:
bits32[] {0x12fa0d78, 0x40f289b6};
export i@dvv2 as "dvv2";
align 4;
i@dvv2:
bits32[] {0x2b5b8fc};
bits32[] {0x2356f05d};
bits32[] {0x3de0d66f, 0x40f6c9c2};
bits32[] {0x465241f1};
bits8[] {0x9::bits8};
bits8[3];
bits32[] {0x47a4e46b};
bits32[] {0x47a75d9b};
bits8[] {0x2::bits8};
bits8[3];
bits32[] {0x632fcc4c};
bits32[] {0x43b3929c};
bits32[] {0x4209246c, 0x40e85213};
export i@dwv2 as "dwv2";
align 4;
i@dwv2:
bits32[] {0x3dc1615f, 0x40f3de4b};
bits8[] {0x98::bits8};
bits8[] {0xaa::bits8};
bits8[] {0x15::bits8};
bits8[1];
bits8[] {0xfb::bits8};
bits8[] {0x1::bits8};
bits8[2];
bits32[] {0x2c9bdf48};
bits8[] {0xaf::bits8};
bits8[] {0x9d::bits8};
bits8[] {0x3::bits8};
bits8[] {0x5b::bits8};
bits32[] {0x8a2ec28b, 0x40c93430};
bits32[] {0x4646572b};
bits32[] {0x4753bc3f};
}
section "text" {
foreign "C" i@caller_bf2() {
  stackdata {
  }
  stackdata {
    align 4;
    f@dxv2.75: bits32;
  }
  bits32 f@1.76;
  "float" f@1.76 = foreign "C" (i@callee_af2)("struct" bits352[i@dnv2] aligned 4, "struct" bits128[i@dov2] aligned 4, "struct" bits640[i@dpv2] aligned 4, "struct" bits32[i@dqv2] aligned 4, "address" i@drv2 aligned 4, "struct" bits160[i@dsv2] aligned 4, %sx32(bits8[i@dtv2]) aligned 4, "float" bits64[i@duv2] aligned 4, "struct" bits416[i@dvv2] aligned 4, "struct" bits320[i@dwv2] aligned 4);
  bits32[f@dxv2.75] = f@1.76;
  if (%feq(bits32[i@av2], bits32[f@dxv2.75])) { goto L.73; }
  foreign "C" (i@failed)(412 aligned 4);
  L.73:
  L.72:
  foreign "C" return();
}
}
section "data" {
export i@av1 as "av1";
align 4;
i@av1:
bits32[] {0x472b6f24};
export i@iv1 as "iv1";
align 4;
i@iv1:
bits32[] {0x191d9846};
bits8[20];
export i@jv1 as "jv1";
align 2;
i@jv1:
bits16[] {0x60b0::bits16};
}
section "text" {
foreign "C" i@caller_bf1() {
  stackdata {
  }
  stackdata {
    align 4;
    f@kv1.80: bits32;
  }
  bits32 f@1.81;
  "float" f@1.81 = foreign "C" (i@callee_af1)("struct" bits192[i@iv1] aligned 4, %zx32(bits16[i@jv1]) aligned 4);
  bits32[f@kv1.80] = f@1.81;
  if (%feq(bits32[i@av1], bits32[f@kv1.80])) { goto L.78; }
  foreign "C" (i@failed)(430 aligned 4);
  L.78:
  L.77:
  foreign "C" return();
}
export i@main as "main";
foreign "C" i@main(bits32 i@argc aligned 4, "address" bits32 i@argv aligned 4, ) {
  stackdata {
  }
  foreign "C" (i@caller_bf5)();
  foreign "C" (i@caller_bf4)();
  foreign "C" (i@caller_bf3)();
  foreign "C" (i@caller_bf2)();
  foreign "C" (i@caller_bf1)();
  foreign "C" return (bits32[i@errors] aligned 4);
  L.82:
  foreign "C" return();
}
import bits32 "callee_af1" as i@callee_af1;
import bits32 "callee_af2" as i@callee_af2;
import bits32 "callee_af3" as i@callee_af3;
import bits32 "callee_af4" as i@callee_af4;
import bits32 "callee_af5" as i@callee_af5;
import bits32 "printf" as i@printf;
}
section "data" {
i@3:
bits8[] "test-2-main.c\x00";
i@2:
bits8[] "failed in %s: %d\x0a\x00";
}
