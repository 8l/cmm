target
	byteorder little
	memsize 8
	wordsize 32
	pointersize 32
	float "ieee754";

bits2 System.rounding_mode = "IEEE 754 rounding mode";
section "data" {
}
section "data" {
export i@errors as "errors";
align 4;
i@errors:
bits32[] {0x0};
}
section "text" {
foreign "C" i@failed(bits32 i@line aligned 4, ) {
  stackdata {
  }
  bits32 i@1.4;
  foreign "C" (i@printf)("address" i@2 aligned 4, "address" i@3 aligned 4, i@line aligned 4);
  i@1.4 = i@errors;
  bits32[i@1.4] = %add(bits32[i@1.4],1);
  L.1:
  foreign "C" return();
}
}
section "data" {
export i@av5 as "av5";
align 4;
i@av5:
bits32[] {0x46f0ac85};
export i@bv5 as "bv5";
align 4;
i@bv5:
bits32[] {0x5201e559};
export i@cv5 as "cv5";
align 4;
i@cv5:
bits32[] {0x476130bd};
export i@dv5 as "dv5";
align 4;
i@dv5:
bits32[] {0x746c424e};
export i@ev5 as "ev5";
align 4;
i@ev5:
bits32[] {0x86db50f4, 0x40f4ad3a};
export i@fv5 as "fv5";
align 4;
i@fv5:
bits32[] {0x45fae1cc};
export i@gv5 as "gv5";
align 4;
i@gv5:
bits32[] {0x35e5d656};
export i@hv5 as "hv5";
align 4;
i@hv5:
bits32[] {0x47a25c81};
export i@iv5 as "iv5";
align 4;
i@iv5:
bits32[] {0x477b687e};
}
section "text" {
foreign "C" i@caller_bf5() {
  stackdata {
  }
  stackdata {
    align 4;
    f@jv5.8: bits32;
  }
  bits32 f@1.9;
  "float" f@1.9 = foreign "C" (i@callee_af5)(bits32[i@bv5] aligned 4, "float" bits32[i@cv5] aligned 4, bits32[i@dv5] aligned 4, "float" bits64[i@ev5] aligned 4, "float" bits32[i@fv5] aligned 4, bits32[i@gv5] aligned 4, "float" bits32[i@hv5] aligned 4, "float" bits32[i@iv5] aligned 4);
  bits32[f@jv5.8] = f@1.9;
  if (%feq(bits32[i@av5], bits32[f@jv5.8])) { goto L.6; }
  foreign "C" (i@failed)(43 aligned 4);
  L.6:
  L.5:
  foreign "C" return();
}
}
section "data" {
export i@av4 as "av4";
align 4;
i@av4:
bits32[] {0xfe5eaab0, 0x40f5538c};
export i@bv4 as "bv4";
align 4;
i@bv4:
bits32[] {0x27095e00};
export i@cv4 as "cv4";
i@cv4:
bits8[] {0x7e::bits8};
export i@dv4 as "dv4";
align 2;
i@dv4:
bits16[] {0x1d8d::bits16};
export i@ev4 as "ev4";
i@ev4:
bits8[] {0x14::bits8};
export i@fv4 as "fv4";
align 4;
i@fv4:
bits32[] {0xf8ae31d7, 0x40f6203b};
export i@gv4 as "gv4";
align 4;
i@gv4:
bits32[] {0x23033a47, 0x40d64e51};
export i@hv4 as "hv4";
align 2;
i@hv4:
bits16[] {0xe9d2::bits16};
}
section "text" {
foreign "C" i@caller_bf4() {
  stackdata {
  }
  stackdata {
    align 4;
    f@iv4.13: bits64;
  }
  bits64 f@1.14;
  "float" f@1.14 = foreign "C" (i@callee_af4)(bits32[i@bv4] aligned 4, %zx32(bits8[i@cv4]) aligned 4, %sx32(bits16[i@dv4]) aligned 4, %zx32(bits8[i@ev4]) aligned 4, "float" bits64[i@fv4] aligned 4, "float" bits64[i@gv4] aligned 4, %zx32(bits16[i@hv4]) aligned 4);
  bits64[f@iv4.13] = f@1.14;
  if (%feq(bits64[i@av4], bits64[f@iv4.13])) { goto L.11; }
  foreign "C" (i@failed)(68 aligned 4);
  L.11:
  L.10:
  foreign "C" return();
}
}
section "data" {
export i@av3 as "av3";
align 2;
i@av3:
bits16[] {0xd802::bits16};
export i@bv3 as "bv3";
align 4;
i@bv3:
bits32[] {0x4709cfec};
export i@cv3 as "cv3";
align 4;
i@cv3:
bits32[] {0x252f31f0};
}
section "text" {
foreign "C" i@caller_bf3() {
  stackdata {
  }
  stackdata {
    align 2;
    i@dv3.18: bits16;
  }
  bits32 i@1.19;
  i@1.19 = foreign "C" (i@callee_af3)("float" bits32[i@bv3] aligned 4, bits32[i@cv3] aligned 4);
  bits16[i@dv3.18] = %lobits16(%lobits32(i@1.19));
  if (%eq(%zx32(bits16[i@av3]), %zx32(bits16[i@dv3.18]))) { goto L.16; }
  foreign "C" (i@failed)(79 aligned 4);
  L.16:
  L.15:
  foreign "C" return();
}
}
section "data" {
export i@av2 as "av2";
align 4;
i@av2:
bits32[] {0x79bed06};
export i@bv2 as "bv2";
align 4;
i@bv2:
bits32[] {0x47928479};
}
section "text" {
foreign "C" i@caller_bf2() {
  stackdata {
  }
  stackdata {
    align 4;
    i@cv2.23: bits32;
  }
  bits32 i@1.24;
  i@1.24 = foreign "C" (i@callee_af2)("float" bits32[i@bv2] aligned 4);
  bits32[i@cv2.23] = i@1.24;
  if (%eq(bits32[i@av2], bits32[i@cv2.23])) { goto L.21; }
  foreign "C" (i@failed)(89 aligned 4);
  L.21:
  L.20:
  foreign "C" return();
}
}
section "data" {
export i@av1 as "av1";
align 4;
i@av1:
bits32[] {0x472b6f24};
export i@bv1 as "bv1";
align 4;
i@bv1:
bits32[] {0x47b04a8c};
export i@cv1 as "cv1";
align 4;
i@cv1:
bits32[] {0x4713c586};
}
section "text" {
foreign "C" i@caller_bf1() {
  stackdata {
  }
  stackdata {
    align 4;
    f@dv1.28: bits32;
  }
  bits32 f@1.29;
  "float" f@1.29 = foreign "C" (i@callee_af1)("float" bits32[i@bv1] aligned 4, bits32[i@cv1] aligned 4);
  bits32[f@dv1.28] = f@1.29;
  if (%feq(bits32[i@av1], bits32[f@dv1.28])) { goto L.26; }
  foreign "C" (i@failed)(98 aligned 4);
  L.26:
  L.25:
  foreign "C" return();
}
export i@main as "main";
foreign "C" i@main(bits32 i@argc aligned 4, "address" bits32 i@argv aligned 4, ) {
  stackdata {
  }
  foreign "C" (i@caller_bf5)();
  foreign "C" (i@caller_bf4)();
  foreign "C" (i@caller_bf3)();
  foreign "C" (i@caller_bf2)();
  foreign "C" (i@caller_bf1)();
  foreign "C" return (bits32[i@errors] aligned 4);
  L.30:
  foreign "C" return();
}
import bits32 "callee_af1" as i@callee_af1;
import bits32 "callee_af2" as i@callee_af2;
import bits32 "callee_af3" as i@callee_af3;
import bits32 "callee_af4" as i@callee_af4;
import bits32 "callee_af5" as i@callee_af5;
import bits32 "printf" as i@printf;
}
section "data" {
i@3:
bits8[] "test-0-main.c\x00";
i@2:
bits8[] "failed in %s: %d\x0a\x00";
}
