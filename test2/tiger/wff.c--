target byteorder little;
import bits32 "tig_print" as print;
import bits32 "tig_printi" as printi;
import bits32 "tig_flush" as flush;
import bits32 "tig_getchar" as getchar;
import bits32 "tig_ord" as ord;
import bits32 "tig_chr" as chr;
import bits32 "tig_size" as size;
import bits32 "tig_sizea" as sizea;
import bits32 "tig_substring" as substring;
import bits32 "tig_concat" as concat;
import bits32 "tig_not" as not;
import bits32 "tig_exit" as exit;
import bits32 "tig_alloc" as alloc;
import bits32 "tig_call_gc" as call_gc;
import bits32 "tig_compare_str" as compare_str;
import bits32 "tig_bounds_check" as bounds_check;
import bits32 "tig_set_handler" as set_handler;
import bits32 "tig_raise" as raise;
import bits32 "tig_unwind" as unwind;
export tiger_main;

bits32 alloc_ptr;
import space_end;

section "data" { align 4;
 Lgbl_142: bits32 { 0 }; bits8[] "\000";
 Lgbl_124: bits32 { 1 }; bits8[] "z\000";
 Lgbl_105: bits32 { 1 }; bits8[] "A\000";
 Lgbl_93: bits32 { 1 }; bits8[] "\t\000";
 Lgbl_44: bits32 { 2 }; bits8[] "? \000";
 Lgbl_108: bits32 { 1 }; bits8[] "Z\000";
 Lgbl_49: bits32 { 1 }; bits8[] "\n\000";
 Lgbl_117: bits32 { 1 }; bits8[] "a\000";
}

err_37(bits32 pfp,bits32 s) {
 span 1 err_37_gc_data {
  stackdata { align 4; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32[fp+4] = s;
  bits32 temp_54;
  bits32 temp_53;
  bits32 temp_52;
  bits32 temp_51;
  bits32 temp_50;
  bits32 temp_48;
  bits32 temp_47;
  bits32 temp_46;
  bits32 temp_45;
  temp_45 = alloc_ptr;
  temp_46 = foreign "C"  print(Lgbl_44) also aborts ;
  alloc_ptr = temp_45;
  /* eliminated: temp_46 */
  temp_47 = alloc_ptr;
  temp_48 = foreign "C"  print(bits32[%add(fp, 4)]) also aborts ;
  alloc_ptr = temp_47;
  /* eliminated: temp_48 */
  temp_50 = alloc_ptr;
  temp_51 = foreign "C"  print(Lgbl_49) also aborts ;
  alloc_ptr = temp_50;
  /* eliminated: temp_51 */
  temp_52 = alloc_ptr;
  temp_53 = foreign "C"  exit(1) also aborts ;
  alloc_ptr = temp_52;
  temp_54 = temp_53;
  return(temp_54);
}}
section "data" {
 err_37_gc_data:
   bits32[] { 2,1,1 };
   bits32[] { 11,1,1,0,0,0,0,0,0,0,0,0 };
}

insert_38(bits32 pfp,bits32 word,bits32 p) {
 span 1 insert_38_gc_data {
  stackdata { align 4; fp : bits32[3]; }
  bits32[fp+0] = pfp;
  bits32[fp+4] = word;
  bits32[fp+8] = p;
  bits32 temp_89;
  bits32 temp_85;
  bits32 temp_81;
  bits32 temp_77;
  bits32 temp_74;
  bits32 temp_73;
  bits32 temp_70;
  bits32 temp_69;
  bits32 temp_68;
  bits32 temp_67;
  bits32 temp_64;
  bits32 temp_63;
  bits32 temp_62;
  bits32 temp_61;
  bits32 temp_56;
  bits32 temp_55;
  bits32 temp_170;
  bits32 temp_169;
  if(%eq(bits32[%add(fp, 8)], 0)) {goto LifTrue_86;} else {goto LifFalse_87;}
  LifTrue_86:
  if(%gt(%add(alloc_ptr, 20), bits32[space_end])) {goto Lalc_gc_57;} else {goto Lalc_gc_57;}
  Lalc_gc_57:
   call_gc() also aborts ;
  Lalc_58:
  bits32[alloc_ptr] = 20;
  temp_56 = %add(alloc_ptr, 4);
  alloc_ptr = %add(alloc_ptr, 20);
  temp_55 = temp_56;
  bits32[%add(temp_55, 0)] = 1;
  bits32[%add(temp_55, 4)] = 0;
  bits32[%add(temp_55, 8)] = 0;
  bits32[%add(temp_55, 12)] = bits32[%add(fp, 4)];
  temp_85 = temp_55;
  goto LifEnd_88;
  LifFalse_87:
  temp_61 = alloc_ptr;
  temp_62 = foreign "C"  compare_str(bits32[%add(fp, 4)],bits32[%add(bits32[%add(fp, 8)], 12)]) also aborts ;
  alloc_ptr = temp_61;
  if(%eq(temp_62, 0)) {goto LifTrue_82;} else {goto LifFalse_83;}
  LifTrue_82:
  if(%gt(%add(alloc_ptr, 20), bits32[space_end])) {goto Lalc_gc_65;} else {goto Lalc_gc_65;}
  Lalc_gc_65:
   call_gc() also aborts ;
  Lalc_66:
  bits32[alloc_ptr] = 20;
  temp_64 = %add(alloc_ptr, 4);
  alloc_ptr = %add(alloc_ptr, 20);
  temp_63 = temp_64;
  bits32[%add(temp_63, 0)] = %add(bits32[%add(bits32[%add(fp, 8)], 0)], 1);
  bits32[%add(temp_63, 4)] = bits32[%add(bits32[%add(fp, 8)], 4)];
  bits32[%add(temp_63, 8)] = bits32[%add(bits32[%add(fp, 8)], 8)];
  bits32[%add(temp_63, 12)] = bits32[%add(fp, 4)];
  temp_81 = temp_63;
  goto LifEnd_84;
  LifFalse_83:
  temp_67 = alloc_ptr;
  temp_68 = foreign "C"  compare_str(bits32[%add(fp, 4)],bits32[%add(bits32[%add(fp, 8)], 12)]) also aborts ;
  alloc_ptr = temp_67;
  if(%lt(temp_68, 0)) {goto LifTrue_78;} else {goto LifFalse_79;}
  LifTrue_78:
  if(%gt(%add(alloc_ptr, 20), bits32[space_end])) {goto Lalc_gc_71;} else {goto Lalc_gc_71;}
  Lalc_gc_71:
   call_gc() also aborts ;
  Lalc_72:
  bits32[alloc_ptr] = 20;
  temp_70 = %add(alloc_ptr, 4);
  alloc_ptr = %add(alloc_ptr, 20);
  temp_69 = temp_70;
  bits32[%add(temp_69, 0)] = bits32[%add(bits32[%add(fp, 8)], 0)];
  temp_170 =  insert_38(bits32[fp],bits32[%add(fp, 4)],bits32[%add(bits32[%add(fp, 8)], 4)]) also aborts ;
  bits32[%add(temp_69, 4)] = temp_170;
  bits32[%add(temp_69, 8)] = bits32[%add(bits32[%add(fp, 8)], 8)];
  bits32[%add(temp_69, 12)] = bits32[%add(bits32[%add(fp, 8)], 12)];
  temp_77 = temp_69;
  goto LifEnd_80;
  LifFalse_79:
  if(%gt(%add(alloc_ptr, 20), bits32[space_end])) {goto Lalc_gc_75;} else {goto Lalc_gc_75;}
  Lalc_gc_75:
   call_gc() also aborts ;
  Lalc_76:
  bits32[alloc_ptr] = 20;
  temp_74 = %add(alloc_ptr, 4);
  alloc_ptr = %add(alloc_ptr, 20);
  temp_73 = temp_74;
  bits32[%add(temp_73, 0)] = bits32[%add(bits32[%add(fp, 8)], 0)];
  bits32[%add(temp_73, 4)] = bits32[%add(bits32[%add(fp, 8)], 4)];
  temp_169 =  insert_38(bits32[fp],bits32[%add(fp, 4)],bits32[%add(bits32[%add(fp, 8)], 8)]) also aborts ;
  bits32[%add(temp_73, 8)] = temp_169;
  bits32[%add(temp_73, 12)] = bits32[%add(bits32[%add(fp, 8)], 12)];
  temp_77 = temp_73;
  LifEnd_80:
  temp_81 = temp_77;
  LifEnd_84:
  temp_85 = temp_81;
  LifEnd_88:
  temp_89 = temp_85;
  return(temp_89);
}}
section "data" {
 insert_38_gc_data:
   bits32[] { 3,1,1,1 };
   bits32[] { 21,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,1,1,1,1 };
}

add_word_39(bits32 pfp,bits32 word) {
 span 1 add_word_39_gc_data {
  stackdata { align 4; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32[fp+4] = word;
  bits32 temp_90;
  bits32 temp_171;
  temp_171 =  insert_38(bits32[fp],bits32[%add(fp, 4)],bits32[%add(bits32[fp], 4)]) also aborts ;
  bits32[%add(bits32[fp], 4)] = temp_171;
  temp_90 = 0;
  return(temp_90);
}}
section "data" {
 add_word_39_gc_data:
   bits32[] { 2,1,1 };
   bits32[] { 4,1,1,0,1 };
}

tprint_40(bits32 pfp,bits32 tree) {
 span 1 tprint_40_gc_data {
  stackdata { align 4; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32[fp+4] = tree;
  bits32 temp_99;
  bits32 temp_98;
  bits32 temp_97;
  bits32 temp_96;
  bits32 temp_95;
  bits32 temp_94;
  bits32 temp_92;
  bits32 temp_91;
  bits32 temp_104;
  bits32 temp_100;
  if(%ne(bits32[%add(fp, 4)], 0)) {goto LifTrue_101;} else {goto LifFalse_102;}
  LifTrue_101:
   tprint_40(bits32[fp],bits32[%add(bits32[%add(fp, 4)], 4)]) also aborts ;
  temp_91 = alloc_ptr;
  temp_92 = foreign "C"  printi(bits32[%add(bits32[%add(fp, 4)], 0)]) also aborts ;
  alloc_ptr = temp_91;
  /* eliminated: temp_92 */
  temp_94 = alloc_ptr;
  temp_95 = foreign "C"  print(Lgbl_93) also aborts ;
  alloc_ptr = temp_94;
  /* eliminated: temp_95 */
  temp_96 = alloc_ptr;
  temp_97 = foreign "C"  print(bits32[%add(bits32[%add(fp, 4)], 12)]) also aborts ;
  alloc_ptr = temp_96;
  /* eliminated: temp_97 */
  temp_98 = alloc_ptr;
  temp_99 = foreign "C"  print(Lgbl_49) also aborts ;
  alloc_ptr = temp_98;
  /* eliminated: temp_99 */
  temp_100 =  tprint_40(bits32[fp],bits32[%add(bits32[%add(fp, 4)], 8)]) also aborts ;
  goto LifEnd_103;
  LifFalse_102:
  temp_100 = 0;
  LifEnd_103:
  temp_104 = temp_100;
  return(temp_104);
}}
section "data" {
 tprint_40_gc_data:
   bits32[] { 2,1,1 };
   bits32[] { 12,1,1,0,0,0,0,0,0,0,0,0,0 };
}

isletter_41(bits32 pfp,bits32 c) {
 span 1 isletter_41_gc_data {
  stackdata { align 4; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32[fp+4] = c;
  bits32 temp_173;
  bits32 temp_172;
  bits32 temp_141;
  bits32 temp_137;
  bits32 temp_133;
  bits32 temp_132;
  bits32 temp_131;
  bits32 temp_127;
  bits32 temp_126;
  bits32 temp_125;
  bits32 temp_123;
  bits32 temp_122;
  bits32 temp_121;
  bits32 temp_120;
  bits32 temp_119;
  bits32 temp_118;
  bits32 temp_116;
  bits32 temp_115;
  bits32 temp_111;
  bits32 temp_110;
  bits32 temp_109;
  bits32 temp_107;
  bits32 temp_106;
  temp_106 = alloc_ptr;
  temp_107 = foreign "C"  compare_str(bits32[%add(fp, 4)],Lgbl_105) also aborts ;
  alloc_ptr = temp_106;
  if(%ge(temp_107, 0)) {goto LifTrue_112;} else {goto LifFalse_113;}
  LifTrue_112:
  temp_109 = alloc_ptr;
  temp_110 = foreign "C"  compare_str(bits32[%add(fp, 4)],Lgbl_108) also aborts ;
  alloc_ptr = temp_109;
  temp_111 = %sx32(%bit(%le(temp_110, 0)));
  goto LifEnd_114;
  LifFalse_113:
  temp_111 = 0;
  LifEnd_114:
  if(%ne(temp_111, 0)) {goto LifTrue_138;} else {goto LifFalse_139;}
  LifTrue_138:
  temp_115 = alloc_ptr;
  temp_116 = foreign "C"  ord(bits32[%add(fp, 4)]) also aborts ;
  alloc_ptr = temp_115;
  temp_172 = temp_116;
  temp_118 = alloc_ptr;
  temp_119 = foreign "C"  ord(Lgbl_117) also aborts ;
  alloc_ptr = temp_118;
  temp_173 = %add(temp_172, temp_119);
  temp_120 = alloc_ptr;
  temp_121 = foreign "C"  ord(Lgbl_105) also aborts ;
  alloc_ptr = temp_120;
  temp_137 = %sub(temp_173, temp_121);
  goto LifEnd_140;
  LifFalse_139:
  temp_122 = alloc_ptr;
  temp_123 = foreign "C"  compare_str(bits32[%add(fp, 4)],Lgbl_117) also aborts ;
  alloc_ptr = temp_122;
  if(%ge(temp_123, 0)) {goto LifTrue_128;} else {goto LifFalse_129;}
  LifTrue_128:
  temp_125 = alloc_ptr;
  temp_126 = foreign "C"  compare_str(bits32[%add(fp, 4)],Lgbl_124) also aborts ;
  alloc_ptr = temp_125;
  temp_127 = %sx32(%bit(%le(temp_126, 0)));
  goto LifEnd_130;
  LifFalse_129:
  temp_127 = 0;
  LifEnd_130:
  if(%ne(temp_127, 0)) {goto LifTrue_134;} else {goto LifFalse_135;}
  LifTrue_134:
  temp_131 = alloc_ptr;
  temp_132 = foreign "C"  ord(bits32[%add(fp, 4)]) also aborts ;
  alloc_ptr = temp_131;
  temp_133 = temp_132;
  goto LifEnd_136;
  LifFalse_135:
  temp_133 = 0;
  LifEnd_136:
  temp_137 = temp_133;
  LifEnd_140:
  temp_141 = temp_137;
  return(temp_141);
}}
section "data" {
 isletter_41_gc_data:
   bits32[] { 2,1,1 };
   bits32[] { 25,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 };
}

getword_42(bits32 pfp) {
 span 1 getword_42_gc_data {
  stackdata { align 4; fp : bits32[3]; }
  bits32[fp+0] = pfp;
  bits32 temp_181;
  bits32 temp_180;
  bits32 temp_179;
  bits32 temp_178;
  bits32 temp_177;
  bits32 temp_176;
  bits32 temp_175;
  bits32 temp_174;
  bits32 temp_161;
  bits32 temp_155;
  bits32 temp_154;
  bits32 temp_153;
  bits32 temp_146;
  bits32 temp_145;
  bits32 temp_144;
  bits32[%add(fp, 4)] = Lgbl_142;
  bits32[%add(fp, 8)] = Lgbl_142;
  temp_174 =  getchar() also aborts ;
  bits32[%add(fp, 8)] = temp_174;
  Lloop_start_150:
  temp_144 = alloc_ptr;
  temp_145 = foreign "C"  compare_str(bits32[%add(fp, 8)],Lgbl_142) also aborts ;
  alloc_ptr = temp_144;
  if(%ne(temp_145, 0)) {goto LifTrue_147;} else {goto LifFalse_148;}
  LifTrue_147:
  temp_176 =  isletter_41(bits32[fp],bits32[%add(fp, 8)]) also aborts ;
  temp_146 = %sx32(%bit(%eq(temp_176, 0)));
  goto LifEnd_149;
  LifFalse_148:
  temp_146 = 0;
  LifEnd_149:
  if(%ne(temp_146, 0)) {goto Lloop_body_151;} else {goto Lloop_end_143;}
  Lloop_body_151:
  temp_175 =  getchar() also aborts ;
  bits32[%add(fp, 8)] = temp_175;
  goto Lloop_start_150;
  Lloop_end_143:
  Lloop_start_159:
  temp_153 = alloc_ptr;
  temp_154 = foreign "C"  compare_str(bits32[%add(fp, 8)],Lgbl_142) also aborts ;
  alloc_ptr = temp_153;
  if(%ne(temp_154, 0)) {goto LifTrue_156;} else {goto LifFalse_157;}
  LifTrue_156:
  temp_155 =  isletter_41(bits32[fp],bits32[%add(fp, 8)]) also aborts ;
  goto LifEnd_158;
  LifFalse_157:
  temp_155 = 0;
  LifEnd_158:
  if(%ne(temp_155, 0)) {goto Lloop_body_160;} else {goto Lloop_end_152;}
  Lloop_body_160:
  temp_180 = bits32[%add(fp, 4)];
  temp_179 =  isletter_41(bits32[fp],bits32[%add(fp, 8)]) also aborts ;
  temp_178 =  chr(temp_179) also aborts ;
  temp_177 =  concat(temp_180,temp_178) also aborts ;
  bits32[%add(fp, 4)] = temp_177;
  temp_181 =  getchar() also aborts ;
  bits32[%add(fp, 8)] = temp_181;
  goto Lloop_start_159;
  Lloop_end_152:
  temp_161 = bits32[%add(fp, 4)];
  return(temp_161);
}}
section "data" {
 getword_42_gc_data:
   bits32[] { 3,1,1,1 };
   bits32[] { 16,1,1,1,0,1,1,0,1,1,1,0,0,0,0,0,0 };
}

main_43(bits32 pfp) {
 span 1 main_43_gc_data {
  stackdata { align 4; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32 temp_183;
  bits32 temp_182;
  bits32 temp_167;
  bits32 temp_164;
  bits32 temp_163;
  bits32[%add(fp, 4)] = Lgbl_142;
  temp_182 =  getword_42(bits32[fp]) also aborts ;
  bits32[%add(fp, 4)] = temp_182;
  Lloop_start_165:
  temp_163 = alloc_ptr;
  temp_164 = foreign "C"  size(bits32[%add(fp, 4)]) also aborts ;
  alloc_ptr = temp_163;
  if(%gt(temp_164, 0)) {goto Lloop_body_166;} else {goto Lloop_end_162;}
  Lloop_body_166:
   add_word_39(bits32[fp],bits32[%add(fp, 4)]) also aborts ;
  temp_183 =  getword_42(bits32[fp]) also aborts ;
  bits32[%add(fp, 4)] = temp_183;
  goto Lloop_start_165;
  Lloop_end_162:
  temp_167 =  tprint_40(bits32[fp],bits32[%add(bits32[fp], 4)]) also aborts ;
  return(temp_167);
}}
section "data" {
 main_43_gc_data:
   bits32[] { 2,1,1 };
   bits32[] { 6,1,1,1,0,0,0 };
}

tiger_main(bits32 pfp) {
 span 1 tiger_main_gc_data {
  stackdata { align 4; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32 temp_168;
  bits32[%add(fp, 4)] = 0;
  temp_168 =  main_43(fp) also aborts ;
  return(temp_168);
}}
section "data" {
 tiger_main_gc_data:
   bits32[] { 2,1,1 };
   bits32[] { 2,1,0 };
}

