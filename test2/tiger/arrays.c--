target byteorder little;
import bits32 "tig_print" as print;
import bits32 "tig_printi" as printi;
import bits32 "tig_flush" as flush;
import bits32 "tig_getchar" as getchar;
import bits32 "tig_ord" as ord;
import bits32 "tig_chr" as chr;
import bits32 "tig_size" as size;
import bits32 "tig_sizea" as sizea;
import bits32 "tig_substring" as substring;
import bits32 "tig_concat" as concat;
import bits32 "tig_not" as not;
import bits32 "tig_exit" as exit;
import bits32 "tig_alloc" as alloc;
import bits32 "tig_call_gc" as call_gc;
import bits32 "tig_compare_str" as compare_str;
import bits32 "tig_bounds_check" as bounds_check;
import bits32 "tig_set_handler" as set_handler;
import bits32 "tig_raise" as raise;
import bits32 "tig_unwind" as unwind;
export tiger_main;

bits32 alloc_ptr;
import space_end;

section "data" { align 4;
 Lgbl_49: bits32 { 1 }; bits8[] "\n\000";
 Lgbl_57: bits32 { 1 }; bits8[] " \000";
 Lgbl_42: bits32 { 24 }; bits8[] "printing array of size: \000";
}

tiger_main(bits32 pfp) {
 span 1 tiger_main_gc_data {
  stackdata { align 4; fp : bits32[3]; }
  bits32[fp+0] = pfp;
  bits32 temp_65;
  bits32 temp_64;
  bits32 temp_63;
  bits32 temp_62;
  bits32 temp_59;
  bits32 temp_58;
  bits32 temp_56;
  bits32 temp_55;
  bits32 temp_54;
  bits32 temp_53;
  bits32 temp_51;
  bits32 temp_50;
  bits32 temp_48;
  bits32 temp_47;
  bits32 temp_46;
  bits32 temp_45;
  bits32 temp_44;
  bits32 temp_43;
  bits32 temp_41;
  bits32 temp_40;
  bits32 temp_39;
  bits32 temp_38;
  bits32 temp_37;
  bits32 temp_36;
  bits32 temp_35;
  bits32 temp_34;
  bits32 temp_33;
  bits32 temp_32;
  bits32 temp_26;
  bits32 temp_23;
  bits32 temp_22;
  if(%gt(%add(alloc_ptr, 48), bits32[space_end])) {goto Lalc_gc_27;} else {goto Lalc_gc_27;}
  Lalc_gc_27:
   call_gc() also aborts ;
  Lalc_28:
  bits32[alloc_ptr] = 48;
  temp_26 = %add(alloc_ptr, 4);
  alloc_ptr = %add(alloc_ptr, 48);
  temp_22 = temp_26;
  bits32[temp_22] = 10;
  temp_23 = 1;
  Linit_start_24:
  bits32[%add(temp_22, %mul(temp_23, 4))] = 80;
  temp_23 = %add(temp_23, 1);
  if(%le(temp_23, 11)) {goto Linit_start_24;} else {goto Linit_end_25;}
  Linit_end_25:
  bits32[%add(fp, 4)] = temp_22;
  temp_32 = alloc_ptr;
  temp_33 = foreign "C"  bounds_check(bits32[%add(fp, 4)],1,7) also aborts ;
  alloc_ptr = temp_32;
  /* eliminated: temp_33 */
  bits32[%add(bits32[%add(fp, 4)], 8)] = 71;
  temp_34 = alloc_ptr;
  temp_35 = foreign "C"  bounds_check(bits32[%add(fp, 4)],3,8) also aborts ;
  alloc_ptr = temp_34;
  /* eliminated: temp_35 */
  bits32[%add(bits32[%add(fp, 4)], 16)] = 71;
  temp_36 = alloc_ptr;
  temp_37 = foreign "C"  bounds_check(bits32[%add(fp, 4)],5,9) also aborts ;
  alloc_ptr = temp_36;
  /* eliminated: temp_37 */
  bits32[%add(bits32[%add(fp, 4)], 24)] = 71;
  temp_38 = alloc_ptr;
  temp_39 = foreign "C"  bounds_check(bits32[%add(fp, 4)],7,10) also aborts ;
  alloc_ptr = temp_38;
  /* eliminated: temp_39 */
  bits32[%add(bits32[%add(fp, 4)], 32)] = 71;
  temp_40 = alloc_ptr;
  temp_41 = foreign "C"  bounds_check(bits32[%add(fp, 4)],9,11) also aborts ;
  alloc_ptr = temp_40;
  /* eliminated: temp_41 */
  bits32[%add(bits32[%add(fp, 4)], 40)] = 71;
  temp_43 = alloc_ptr;
  temp_44 = foreign "C"  print(Lgbl_42) also aborts ;
  alloc_ptr = temp_43;
  /* eliminated: temp_44 */
  temp_47 = alloc_ptr;
  temp_45 = alloc_ptr;
  temp_46 = foreign "C"  sizea(bits32[%add(fp, 4)]) also aborts ;
  alloc_ptr = temp_45;
  temp_48 = foreign "C"  printi(temp_46) also aborts ;
  alloc_ptr = temp_47;
  /* eliminated: temp_48 */
  temp_50 = alloc_ptr;
  temp_51 = foreign "C"  print(Lgbl_49) also aborts ;
  alloc_ptr = temp_50;
  /* eliminated: temp_51 */
  bits32[%add(fp, 8)] = 0;
  Lloop_start_60:
  if(%le(bits32[%add(fp, 8)], 9)) {goto Lloop_body_61;} else {goto Lloop_end_52;}
  Lloop_body_61:
  temp_55 = alloc_ptr;
  temp_53 = alloc_ptr;
  temp_54 = foreign "C"  bounds_check(bits32[%add(fp, 4)],bits32[%add(fp, 8)],18) also aborts ;
  alloc_ptr = temp_53;
  /* eliminated: temp_54 */
  temp_65 =  chr(bits32[%add(bits32[%add(fp, 4)], %mul(%add(bits32[%add(fp, 8)], 1), 4))]) also aborts ;
  temp_56 = foreign "C"  print(temp_65) also aborts ;
  alloc_ptr = temp_55;
  /* eliminated: temp_56 */
  temp_58 = alloc_ptr;
  temp_59 = foreign "C"  print(Lgbl_57) also aborts ;
  alloc_ptr = temp_58;
  /* eliminated: temp_59 */
  bits32[%add(fp, 8)] = %add(bits32[%add(fp, 8)], 1);
  goto Lloop_start_60;
  Lloop_end_52:
  temp_62 = alloc_ptr;
  temp_63 = foreign "C"  print(Lgbl_49) also aborts ;
  alloc_ptr = temp_62;
  temp_64 = temp_63;
  return(temp_64);
}}
section "data" {
 tiger_main_gc_data:
   bits32[] { 3,1,1,0 };
   bits32[] { 32,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1 };
}

