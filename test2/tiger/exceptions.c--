target byteorder little;
import bits32 "tig_print" as print;
import bits32 "tig_printi" as printi;
import bits32 "tig_flush" as flush;
import bits32 "tig_getchar" as getchar;
import bits32 "tig_ord" as ord;
import bits32 "tig_chr" as chr;
import bits32 "tig_size" as size;
import bits32 "tig_sizea" as sizea;
import bits32 "tig_substring" as substring;
import bits32 "tig_concat" as concat;
import bits32 "tig_not" as not;
import bits32 "tig_exit" as exit;
import bits32 "tig_alloc" as alloc;
import bits32 "tig_call_gc" as call_gc;
import bits32 "tig_compare_str" as compare_str;
import bits32 "tig_bounds_check" as bounds_check;
import bits32 "tig_set_handler" as set_handler;
import bits32 "tig_raise" as raise;
import bits32 "tig_unwind" as unwind;
export tiger_main;

bits32 alloc_ptr;
import space_end;

section "data" { align 4;
 Lgbl_39: bits32 { 4 }; bits8[] "bye\n\000";
 Lgbl_76: bits32 { 18 }; bits8[] "out of ex block 2\n\000";
 Lgbl_56: bits32 { 18 }; bits8[] "out of ex block 1\n\000";
 Lgbl_60: bits32 { 12 }; bits8[] "exception 3\n\000";
 Lgbl_36: bits32 { 6 }; bits8[] "hello\n\000";
 Lgbl_42: bits32 { 12 }; bits8[] "exception 2\n\000";
 Lgbl_45: bits32 { 12 }; bits8[] "exception 1\n\000";
}

throws_int_25(bits32 pfp,bits32 i) {
 span 1 throws_int_25_gc_data {
  stackdata { align 4; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32[fp+4] = i;
  bits32 temp_33;
  bits32 temp_29;
  if(%gt(bits32[%add(fp, 4)], 0)) {goto LifTrue_30;} else {goto LifFalse_31;}
  LifTrue_30:
  temp_29 =  unwind(20) also aborts ;
  goto LifEnd_32;
  LifFalse_31:
  temp_29 = 0;
  LifEnd_32:
  temp_33 = temp_29;
  return(temp_33);
}}
section "data" {
 throws_int_25_gc_data:
   bits32[] { 2,1,0 };
   bits32[] { 4,1,0,0,0 };
}

f_26(bits32 pfp,bits32 i) {
 span 1 f_26_gc_data {
  stackdata { align 4; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32[fp+4] = i;
  bits32 temp_34;
  temp_34 =  throws_int_25(bits32[fp],bits32[%add(fp, 4)]) also aborts ;
  return(temp_34);
}}
section "data" {
 f_26_gc_data:
   bits32[] { 2,1,0 };
   bits32[] { 3,1,0,0 };
}

tiger_main(bits32 pfp) {
 span 1 tiger_main_gc_data {
  stackdata { align 4; fp : bits32[1]; }
  bits32[fp+0] = pfp;
  bits32 temp_79;
  bits32 temp_78;
  bits32 temp_77;
  bits32 temp_68;
  bits32 temp_66;
  bits32 temp_65;
  bits32 temp_64;
  bits32 temp_63;
  bits32 temp_62;
  bits32 temp_61;
  bits32 temp_58;
  bits32 temp_57;
  bits32 temp_49;
  bits32 temp_47;
  bits32 temp_46;
  bits32 temp_44;
  bits32 temp_43;
  bits32 temp_41;
  bits32 temp_40;
  bits32 temp_38;
  bits32 temp_37;
  span 2 1 { /* Lexn_35 */
  temp_37 = alloc_ptr;
  temp_38 = foreign "C"  print(Lgbl_36) also aborts also unwinds to Lexn_35;
  alloc_ptr = temp_37;
  /* eliminated: temp_38 */
   f_26(fp,%sub(0, 1)) also aborts also unwinds to Lexn_35;
  temp_40 = alloc_ptr;
  temp_41 = foreign "C"  print(Lgbl_39) also aborts also unwinds to Lexn_35;
  alloc_ptr = temp_40;
  temp_49 = temp_41;
  } /* end Lexn_35 */
  goto Ltry_end_48;
  continuation Lexn_35(temp_49):
  if(%eq(temp_49, 21)) {goto Lhandle_52;} else {goto Lskip_53;}
  Lhandle_52:
  temp_43 = alloc_ptr;
  temp_44 = foreign "C"  print(Lgbl_42) also aborts ;
  alloc_ptr = temp_43;
  /* eliminated: temp_44 */
  goto Ltry_end_48;
  Lskip_53:
  if(%eq(temp_49, 20)) {goto Lhandle_54;} else {goto Lskip_55;}
  Lhandle_54:
  temp_46 = alloc_ptr;
  temp_47 = foreign "C"  print(Lgbl_45) also aborts ;
  alloc_ptr = temp_46;
  /* eliminated: temp_47 */
  goto Ltry_end_48;
  Lskip_55:
  Ltry_end_48:
  /* eliminated: temp_49 */
  temp_57 = alloc_ptr;
  temp_58 = foreign "C"  print(Lgbl_56) also aborts ;
  alloc_ptr = temp_57;
  /* eliminated: temp_58 */
  span 2 1 { /* Lexn_59 */
  temp_68 =  f_26(fp,1) also aborts also unwinds to Lexn_59;
  } /* end Lexn_59 */
  goto Ltry_end_67;
  continuation Lexn_59(temp_68):
  if(%eq(temp_68, 22)) {goto Lhandle_70;} else {goto Lskip_71;}
  Lhandle_70:
  temp_61 = alloc_ptr;
  temp_62 = foreign "C"  print(Lgbl_60) also aborts ;
  alloc_ptr = temp_61;
  /* eliminated: temp_62 */
  goto Ltry_end_67;
  Lskip_71:
  if(%eq(temp_68, 21)) {goto Lhandle_72;} else {goto Lskip_73;}
  Lhandle_72:
  temp_63 = alloc_ptr;
  temp_64 = foreign "C"  print(Lgbl_42) also aborts ;
  alloc_ptr = temp_63;
  /* eliminated: temp_64 */
  goto Ltry_end_67;
  Lskip_73:
  if(%eq(temp_68, 20)) {goto Lhandle_74;} else {goto Lskip_75;}
  Lhandle_74:
  temp_65 = alloc_ptr;
  temp_66 = foreign "C"  print(Lgbl_45) also aborts ;
  alloc_ptr = temp_65;
  /* eliminated: temp_66 */
  goto Ltry_end_67;
  Lskip_75:
  Ltry_end_67:
  /* eliminated: temp_68 */
  temp_77 = alloc_ptr;
  temp_78 = foreign "C"  print(Lgbl_76) also aborts ;
  alloc_ptr = temp_77;
  temp_79 = temp_78;
  return(temp_79);
}}
section "data" {
 tiger_main_gc_data:
   bits32[] { 1,1 };
   bits32[] { 22,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 };
}

