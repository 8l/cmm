target byteorder little;
import bits32 "tig_print" as print;
import bits32 "tig_printi" as printi;
import bits32 "tig_flush" as flush;
import bits32 "tig_getchar" as getchar;
import bits32 "tig_ord" as ord;
import bits32 "tig_chr" as chr;
import bits32 "tig_size" as size;
import bits32 "tig_sizea" as sizea;
import bits32 "tig_substring" as substring;
import bits32 "tig_concat" as concat;
import bits32 "tig_not" as not;
import bits32 "tig_exit" as exit;
import bits32 "tig_alloc" as alloc;
import bits32 "tig_call_gc" as call_gc;
import bits32 "tig_compare_str" as compare_str;
import bits32 "tig_bounds_check" as bounds_check;
import bits32 "tig_set_handler" as set_handler;
import bits32 "tig_raise" as raise;
import bits32 "tig_unwind" as unwind;
export tiger_main;

bits32 alloc_ptr;
import space_end;

section "data" { align 4;
 Lgbl_130: bits32 { 0 }; bits8[] "\000";
 Lgbl_112: bits32 { 1 }; bits8[] "z\000";
 Lgbl_93: bits32 { 1 }; bits8[] "A\000";
 Lgbl_81: bits32 { 1 }; bits8[] "\t\000";
 Lgbl_43: bits32 { 2 }; bits8[] "? \000";
 Lgbl_96: bits32 { 1 }; bits8[] "Z\000";
 Lgbl_48: bits32 { 1 }; bits8[] "\n\000";
 Lgbl_105: bits32 { 1 }; bits8[] "a\000";
}

err_37(bits32 pfp,bits32 s) {
 span 1 err_37_gc_data {
  stackdata { align 4; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32[fp+4] = s;
  bits32 temp_53;
  bits32 temp_52;
  bits32 temp_51;
  bits32 temp_50;
  bits32 temp_49;
  bits32 temp_47;
  bits32 temp_46;
  bits32 temp_45;
  bits32 temp_44;
  temp_44 = alloc_ptr;
  temp_45 = foreign "C"  print(Lgbl_43) also aborts ;
  alloc_ptr = temp_44;
  /* eliminated: temp_45 */
  temp_46 = alloc_ptr;
  temp_47 = foreign "C"  print(bits32[%add(fp, 4)]) also aborts ;
  alloc_ptr = temp_46;
  /* eliminated: temp_47 */
  temp_49 = alloc_ptr;
  temp_50 = foreign "C"  print(Lgbl_48) also aborts ;
  alloc_ptr = temp_49;
  /* eliminated: temp_50 */
  temp_51 = alloc_ptr;
  temp_52 = foreign "C"  exit(1) also aborts ;
  alloc_ptr = temp_51;
  temp_53 = temp_52;
  return(temp_53);
}}
section "data" {
 err_37_gc_data:
   bits32[] { 2,1,1 };
   bits32[] { 11,1,1,0,0,0,0,0,0,0,0,0 };
}

insert_54(bits32 pfp,bits32 p) {
 span 1 insert_54_gc_data {
  stackdata { align 4; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32[fp+4] = p;
  bits32 temp_77;
  bits32 temp_73;
  bits32 temp_69;
  bits32 temp_65;
  bits32 temp_64;
  bits32 temp_63;
  bits32 temp_62;
  bits32 temp_61;
  bits32 temp_56;
  bits32 temp_55;
  bits32 temp_158;
  bits32 temp_157;
  if(%eq(bits32[%add(fp, 4)], 0)) {goto LifTrue_74;} else {goto LifFalse_75;}
  LifTrue_74:
  if(%gt(%add(alloc_ptr, 20), bits32[space_end])) {goto Lalc_gc_57;} else {goto Lalc_gc_57;}
  Lalc_gc_57:
   call_gc() also aborts ;
  Lalc_58:
  bits32[alloc_ptr] = 20;
  temp_56 = %add(alloc_ptr, 4);
  alloc_ptr = %add(alloc_ptr, 20);
  temp_55 = temp_56;
  bits32[%add(temp_55, 0)] = 1;
  bits32[%add(temp_55, 4)] = 0;
  bits32[%add(temp_55, 8)] = 0;
  bits32[%add(temp_55, 12)] = bits32[%add(bits32[fp], 4)];
  temp_73 = temp_55;
  goto LifEnd_76;
  LifFalse_75:
  temp_61 = alloc_ptr;
  temp_62 = foreign "C"  compare_str(bits32[%add(bits32[fp], 4)],bits32[%add(bits32[%add(fp, 4)], 12)]) also aborts ;
  alloc_ptr = temp_61;
  if(%eq(temp_62, 0)) {goto LifTrue_70;} else {goto LifFalse_71;}
  LifTrue_70:
  bits32[%add(bits32[%add(fp, 4)], 0)] = %add(bits32[%add(bits32[%add(fp, 4)], 0)], 1);
  temp_69 = bits32[%add(fp, 4)];
  goto LifEnd_72;
  LifFalse_71:
  temp_63 = alloc_ptr;
  temp_64 = foreign "C"  compare_str(bits32[%add(bits32[fp], 4)],bits32[%add(bits32[%add(fp, 4)], 12)]) also aborts ;
  alloc_ptr = temp_63;
  if(%lt(temp_64, 0)) {goto LifTrue_66;} else {goto LifFalse_67;}
  LifTrue_66:
  temp_158 =  insert_54(bits32[fp],bits32[%add(bits32[%add(fp, 4)], 4)]) also aborts ;
  bits32[%add(bits32[%add(fp, 4)], 4)] = temp_158;
  temp_65 = bits32[%add(fp, 4)];
  goto LifEnd_68;
  LifFalse_67:
  temp_157 =  insert_54(bits32[fp],bits32[%add(bits32[%add(fp, 4)], 8)]) also aborts ;
  bits32[%add(bits32[%add(fp, 4)], 8)] = temp_157;
  temp_65 = bits32[%add(fp, 4)];
  LifEnd_68:
  temp_69 = temp_65;
  LifEnd_72:
  temp_73 = temp_69;
  LifEnd_76:
  temp_77 = temp_73;
  return(temp_77);
}}
section "data" {
 insert_54_gc_data:
   bits32[] { 2,1,1 };
   bits32[] { 14,1,1,1,1,1,1,0,0,0,0,1,1,1,1 };
}

add_word_38(bits32 pfp,bits32 word) {
 span 1 add_word_38_gc_data {
  stackdata { align 4; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32[fp+4] = word;
  bits32 temp_78;
  bits32 temp_159;
  temp_159 =  insert_54(fp,bits32[%add(bits32[fp], 4)]) also aborts ;
  bits32[%add(bits32[fp], 4)] = temp_159;
  temp_78 = 0;
  return(temp_78);
}}
section "data" {
 add_word_38_gc_data:
   bits32[] { 2,1,1 };
   bits32[] { 4,1,1,0,1 };
}

tprint_39(bits32 pfp,bits32 tree) {
 span 1 tprint_39_gc_data {
  stackdata { align 4; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32[fp+4] = tree;
  bits32 temp_92;
  bits32 temp_88;
  bits32 temp_87;
  bits32 temp_86;
  bits32 temp_85;
  bits32 temp_84;
  bits32 temp_83;
  bits32 temp_82;
  bits32 temp_80;
  bits32 temp_79;
  if(%ne(bits32[%add(fp, 4)], 0)) {goto LifTrue_89;} else {goto LifFalse_90;}
  LifTrue_89:
   tprint_39(bits32[fp],bits32[%add(bits32[%add(fp, 4)], 4)]) also aborts ;
  temp_79 = alloc_ptr;
  temp_80 = foreign "C"  printi(bits32[%add(bits32[%add(fp, 4)], 0)]) also aborts ;
  alloc_ptr = temp_79;
  /* eliminated: temp_80 */
  temp_82 = alloc_ptr;
  temp_83 = foreign "C"  print(Lgbl_81) also aborts ;
  alloc_ptr = temp_82;
  /* eliminated: temp_83 */
  temp_84 = alloc_ptr;
  temp_85 = foreign "C"  print(bits32[%add(bits32[%add(fp, 4)], 12)]) also aborts ;
  alloc_ptr = temp_84;
  /* eliminated: temp_85 */
  temp_86 = alloc_ptr;
  temp_87 = foreign "C"  print(Lgbl_48) also aborts ;
  alloc_ptr = temp_86;
  /* eliminated: temp_87 */
  temp_88 =  tprint_39(bits32[fp],bits32[%add(bits32[%add(fp, 4)], 8)]) also aborts ;
  goto LifEnd_91;
  LifFalse_90:
  temp_88 = 0;
  LifEnd_91:
  temp_92 = temp_88;
  return(temp_92);
}}
section "data" {
 tprint_39_gc_data:
   bits32[] { 2,1,1 };
   bits32[] { 12,1,1,0,0,0,0,0,0,0,0,0,0 };
}

isletter_40(bits32 pfp,bits32 c) {
 span 1 isletter_40_gc_data {
  stackdata { align 4; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32[fp+4] = c;
  bits32 temp_99;
  bits32 temp_98;
  bits32 temp_97;
  bits32 temp_95;
  bits32 temp_94;
  bits32 temp_161;
  bits32 temp_160;
  bits32 temp_129;
  bits32 temp_125;
  bits32 temp_121;
  bits32 temp_120;
  bits32 temp_119;
  bits32 temp_115;
  bits32 temp_114;
  bits32 temp_113;
  bits32 temp_111;
  bits32 temp_110;
  bits32 temp_109;
  bits32 temp_108;
  bits32 temp_107;
  bits32 temp_106;
  bits32 temp_104;
  bits32 temp_103;
  temp_94 = alloc_ptr;
  temp_95 = foreign "C"  compare_str(bits32[%add(fp, 4)],Lgbl_93) also aborts ;
  alloc_ptr = temp_94;
  if(%ge(temp_95, 0)) {goto LifTrue_100;} else {goto LifFalse_101;}
  LifTrue_100:
  temp_97 = alloc_ptr;
  temp_98 = foreign "C"  compare_str(bits32[%add(fp, 4)],Lgbl_96) also aborts ;
  alloc_ptr = temp_97;
  temp_99 = %sx32(%bit(%le(temp_98, 0)));
  goto LifEnd_102;
  LifFalse_101:
  temp_99 = 0;
  LifEnd_102:
  if(%ne(temp_99, 0)) {goto LifTrue_126;} else {goto LifFalse_127;}
  LifTrue_126:
  temp_103 = alloc_ptr;
  temp_104 = foreign "C"  ord(bits32[%add(fp, 4)]) also aborts ;
  alloc_ptr = temp_103;
  temp_160 = temp_104;
  temp_106 = alloc_ptr;
  temp_107 = foreign "C"  ord(Lgbl_105) also aborts ;
  alloc_ptr = temp_106;
  temp_161 = %add(temp_160, temp_107);
  temp_108 = alloc_ptr;
  temp_109 = foreign "C"  ord(Lgbl_93) also aborts ;
  alloc_ptr = temp_108;
  temp_125 = %sub(temp_161, temp_109);
  goto LifEnd_128;
  LifFalse_127:
  temp_110 = alloc_ptr;
  temp_111 = foreign "C"  compare_str(bits32[%add(fp, 4)],Lgbl_105) also aborts ;
  alloc_ptr = temp_110;
  if(%ge(temp_111, 0)) {goto LifTrue_116;} else {goto LifFalse_117;}
  LifTrue_116:
  temp_113 = alloc_ptr;
  temp_114 = foreign "C"  compare_str(bits32[%add(fp, 4)],Lgbl_112) also aborts ;
  alloc_ptr = temp_113;
  temp_115 = %sx32(%bit(%le(temp_114, 0)));
  goto LifEnd_118;
  LifFalse_117:
  temp_115 = 0;
  LifEnd_118:
  if(%ne(temp_115, 0)) {goto LifTrue_122;} else {goto LifFalse_123;}
  LifTrue_122:
  temp_119 = alloc_ptr;
  temp_120 = foreign "C"  ord(bits32[%add(fp, 4)]) also aborts ;
  alloc_ptr = temp_119;
  temp_121 = temp_120;
  goto LifEnd_124;
  LifFalse_123:
  temp_121 = 0;
  LifEnd_124:
  temp_125 = temp_121;
  LifEnd_128:
  temp_129 = temp_125;
  return(temp_129);
}}
section "data" {
 isletter_40_gc_data:
   bits32[] { 2,1,1 };
   bits32[] { 25,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 };
}

getword_41(bits32 pfp) {
 span 1 getword_41_gc_data {
  stackdata { align 4; fp : bits32[3]; }
  bits32[fp+0] = pfp;
  bits32 temp_169;
  bits32 temp_168;
  bits32 temp_167;
  bits32 temp_166;
  bits32 temp_165;
  bits32 temp_164;
  bits32 temp_163;
  bits32 temp_162;
  bits32 temp_149;
  bits32 temp_143;
  bits32 temp_142;
  bits32 temp_141;
  bits32 temp_134;
  bits32 temp_133;
  bits32 temp_132;
  bits32[%add(fp, 4)] = Lgbl_130;
  bits32[%add(fp, 8)] = Lgbl_130;
  temp_162 =  getchar() also aborts ;
  bits32[%add(fp, 8)] = temp_162;
  Lloop_start_138:
  temp_132 = alloc_ptr;
  temp_133 = foreign "C"  compare_str(bits32[%add(fp, 8)],Lgbl_130) also aborts ;
  alloc_ptr = temp_132;
  if(%ne(temp_133, 0)) {goto LifTrue_135;} else {goto LifFalse_136;}
  LifTrue_135:
  temp_164 =  isletter_40(bits32[fp],bits32[%add(fp, 8)]) also aborts ;
  temp_134 = %sx32(%bit(%eq(temp_164, 0)));
  goto LifEnd_137;
  LifFalse_136:
  temp_134 = 0;
  LifEnd_137:
  if(%ne(temp_134, 0)) {goto Lloop_body_139;} else {goto Lloop_end_131;}
  Lloop_body_139:
  temp_163 =  getchar() also aborts ;
  bits32[%add(fp, 8)] = temp_163;
  goto Lloop_start_138;
  Lloop_end_131:
  Lloop_start_147:
  temp_141 = alloc_ptr;
  temp_142 = foreign "C"  compare_str(bits32[%add(fp, 8)],Lgbl_130) also aborts ;
  alloc_ptr = temp_141;
  if(%ne(temp_142, 0)) {goto LifTrue_144;} else {goto LifFalse_145;}
  LifTrue_144:
  temp_143 =  isletter_40(bits32[fp],bits32[%add(fp, 8)]) also aborts ;
  goto LifEnd_146;
  LifFalse_145:
  temp_143 = 0;
  LifEnd_146:
  if(%ne(temp_143, 0)) {goto Lloop_body_148;} else {goto Lloop_end_140;}
  Lloop_body_148:
  temp_168 = bits32[%add(fp, 4)];
  temp_167 =  isletter_40(bits32[fp],bits32[%add(fp, 8)]) also aborts ;
  temp_166 =  chr(temp_167) also aborts ;
  temp_165 =  concat(temp_168,temp_166) also aborts ;
  bits32[%add(fp, 4)] = temp_165;
  temp_169 =  getchar() also aborts ;
  bits32[%add(fp, 8)] = temp_169;
  goto Lloop_start_147;
  Lloop_end_140:
  temp_149 = bits32[%add(fp, 4)];
  return(temp_149);
}}
section "data" {
 getword_41_gc_data:
   bits32[] { 3,1,1,1 };
   bits32[] { 16,1,1,1,0,1,1,0,1,1,1,0,0,0,0,0,0 };
}

main_42(bits32 pfp) {
 span 1 main_42_gc_data {
  stackdata { align 4; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32 temp_171;
  bits32 temp_170;
  bits32 temp_155;
  bits32 temp_152;
  bits32 temp_151;
  bits32[%add(fp, 4)] = Lgbl_130;
  temp_170 =  getword_41(bits32[fp]) also aborts ;
  bits32[%add(fp, 4)] = temp_170;
  Lloop_start_153:
  temp_151 = alloc_ptr;
  temp_152 = foreign "C"  size(bits32[%add(fp, 4)]) also aborts ;
  alloc_ptr = temp_151;
  if(%gt(temp_152, 0)) {goto Lloop_body_154;} else {goto Lloop_end_150;}
  Lloop_body_154:
   add_word_38(bits32[fp],bits32[%add(fp, 4)]) also aborts ;
  temp_171 =  getword_41(bits32[fp]) also aborts ;
  bits32[%add(fp, 4)] = temp_171;
  goto Lloop_start_153;
  Lloop_end_150:
  temp_155 =  tprint_39(bits32[fp],bits32[%add(bits32[fp], 4)]) also aborts ;
  return(temp_155);
}}
section "data" {
 main_42_gc_data:
   bits32[] { 2,1,1 };
   bits32[] { 6,1,1,1,0,0,0 };
}

tiger_main(bits32 pfp) {
 span 1 tiger_main_gc_data {
  stackdata { align 4; fp : bits32[2]; }
  bits32[fp+0] = pfp;
  bits32 temp_156;
  bits32[%add(fp, 4)] = 0;
  temp_156 =  main_42(fp) also aborts ;
  return(temp_156);
}}
section "data" {
 tiger_main_gc_data:
   bits32[] { 2,1,1 };
   bits32[] { 2,1,0 };
}

